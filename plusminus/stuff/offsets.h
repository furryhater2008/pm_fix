namespace O {
	namespace BaseNetworkable {
		constexpr auto JustCreatedk__BackingField = 0x18;
		constexpr auto entityDestroy = 0x20;
		constexpr auto postNetworkUpdateComponents = 0x28;
		constexpr auto parentEntity = 0x30;
		constexpr auto children = 0x40;
		constexpr auto canTriggerParent = 0x48;
		constexpr auto prefabID = 0x4c;
		constexpr auto globalBroadcast = 0x50;
		constexpr auto net = 0x58;
		constexpr auto IsDestroyedk__BackingField = 0x60;
		constexpr auto _prefabName = 0x68;
		constexpr auto _prefabNameWithoutExtension = 0x70;

		constexpr auto get_JustCreated = 0xa57d70;
		constexpr auto set_JustCreated = 0xa57d90;
		constexpr auto ClientSpawn = 0xadf3a0;
		constexpr auto ClientOnEnable = 0xadf320;
		constexpr auto ClientInit = 0xadf130;
		constexpr auto OnNetworkUpdate = 0xae0650;
		constexpr auto PreNetworkUpdate = 0x45a520;
		constexpr auto PostNetworkUpdate = 0x45a520;
		constexpr auto ShouldDestroyWithGroup = 0x5c2350;
		constexpr auto ShouldDestroyImmediately = 0x59bd30;
		constexpr auto NetworkDestroy = 0xae01e0;
		constexpr auto DoClientDestroy = 0xadf770;
		constexpr auto DoNetworkDestroy = 0x45a520;
		constexpr auto BroadcastOnPostNetworkUpdate = 0xadef10;
		constexpr auto PostProcess = 0xae07d0;
		constexpr auto GetParentEntity = 0xadfb10;
		constexpr auto HasParent = 0xadfb20;
		constexpr auto AddChild = 0xadee80;
		constexpr auto OnChildAdded = 0x45a520;
		constexpr auto RemoveChild = 0xae0850;
		constexpr auto OnChildRemoved = 0x45a520;
		constexpr auto get_gameManager = 0xae0c90;
		constexpr auto get_prefabAttribute = 0xae0cf0;
		constexpr auto get_IsDestroyed = 0xae0b70;
		constexpr auto set_IsDestroyed = 0x700060;
		constexpr auto get_PrefabName = 0xae0b80;
		constexpr auto get_ShortPrefabName = 0xae0c00;
		constexpr auto GetNetworkPosition = 0x9a0e30;
		constexpr auto GetNetworkRotation = 0xadfad0;
		constexpr auto InvokeString = 0xadfb30;
		constexpr auto LookupPrefab = 0xae0140;
		constexpr auto EqualNetID = 0xadfa80;
		constexpr auto ResetState = 0xae08c0;
		constexpr auto InitShared = 0x45a520;
		constexpr auto PreInitShared = 0x45a520;
		constexpr auto PostInitShared = 0x45a520;
		constexpr auto DestroyShared = 0x45a520;
		constexpr auto OnNetworkGroupEnter = 0x45a520;
		constexpr auto OnNetworkGroupLeave = 0x45a520;
		constexpr auto OnNetworkGroupChange = 0xae0510;
		constexpr auto OnNetworkSubscribersEnter = 0x45a520;
		constexpr auto OnNetworkSubscribersLeave = 0x45a520;
		constexpr auto EntityDestroy = 0xadf990;
		constexpr auto DoEntityDestroy = 0xadf830;
		constexpr auto SpawnShared = 0xae0910;
		constexpr auto Load = 0xadfd80;
		constexpr auto get_isServer = 0x59bd30;
		constexpr auto get_isClient = 0x5c2350;
		constexpr auto OnRpcMessage = 0x59bd30;
		constexpr auto ctor = 0xae0ad0;
		constexpr auto cctor = 0xae0a20;
	};

	namespace BasePlayer {
		constexpr auto __menuOption_Climb = 0x240;
		constexpr auto __menuOption_Drink = 0x298;
		constexpr auto __menuOption_InviteToTeam = 0x2f0;
		constexpr auto __menuOption_Menu_AssistPlayer = 0x348;
		constexpr auto __menuOption_Menu_LootPlayer = 0x3a0;
		constexpr auto __menuOption_Promote = 0x3f8;
		constexpr auto __menuOption_SaltWater = 0x450;
		constexpr auto lastOpenSoundPlay = 0x4a8;
		constexpr auto currentViewMode = 0x4ac;
		constexpr auto selectedViewMode = 0x4b0;
		constexpr auto lastRevivePoint = 0x4b4;
		constexpr auto lastReviveDirection = 0x4c0;
		constexpr auto playerModel = 0x4d0;
		constexpr auto Frozen = 0x4d8;
		constexpr auto voiceRecorder = 0x4e0;
		constexpr auto voiceSpeaker = 0x4e8;
		constexpr auto input = 0x4f0;
		constexpr auto movement = 0x4f8;
		constexpr auto collision = 0x500;
		constexpr auto emptyState = 0x8;
		constexpr auto _lookingAt = 0x508;
		constexpr auto _lookingAtEntity = 0x510;
		constexpr auto _lookingAtCollider = 0x518;
		constexpr auto lookingAtPointk__BackingField = 0x520;
		constexpr auto wakeTime = 0x52c;
		constexpr auto needsClothesRebuild = 0x530;
		constexpr auto wasSleeping = 0x531;
		constexpr auto wokeUpBefore = 0x532;
		constexpr auto wasDead = 0x533;
		constexpr auto lastClothesHash = 0x534;
		constexpr auto visiblePlayerList = 0x10;
		constexpr auto craftMode = 0x18;
		constexpr auto IsWearingDiveGogglesk__BackingField = 0x538;
		constexpr auto GestureViewModel = 0x540;
		constexpr auto timeSinceUpdatedLookingAt = 0x548;
		constexpr auto nextTopologyTestTime = 0x54c;
		constexpr auto usePressTime = 0x550;
		constexpr auto useHeldTime = 0x554;
		constexpr auto lookingAtTest = 0x558;
		constexpr auto lastDeathTimeClient = 0x1c;
		constexpr auto cachedWaterDrinkingPoint = 0x560;
		constexpr auto gestureList = 0x570;
		constexpr auto gestureFinishedTime = 0x578;
		constexpr auto blockHeldInputTimer = 0x57c;
		constexpr auto currentGesture = 0x580;
		constexpr auto disabledHeldEntity = 0x588;
		constexpr auto nextGestureMenuOpenTime = 0x590;
		constexpr auto lastGestureCancel = 0x594;
		constexpr auto client_lastHelloTime = 0x598;
		constexpr auto currentTeam = 0x5a0;
		constexpr auto MaxTeamSizeToast = 0x20;
		constexpr auto clientTeam = 0x5a8;
		constexpr auto lastReceivedTeamTime = 0x5b0;
		constexpr auto lastPresenceTeamId = 0x5b8;
		constexpr auto lastPresenceTeamSize = 0x5c0;
		constexpr auto playerGroupKey = 0x5c8;
		constexpr auto playerGroupSizeKey = 0x5d0;
		constexpr auto clActiveItem = 0x5d8;
		constexpr auto ClientCurrentMapNote = 0x5e0;
		constexpr auto ClientCurrentDeathNote = 0x5e8;
		constexpr auto missions = 0x5f0;
		constexpr auto _activeMission = 0x5f8;
		constexpr auto modelState = 0x600;
		constexpr auto mounted = 0x608;
		constexpr auto nextSeatSwapTime = 0x618;
		constexpr auto PetEntity = 0x620;
		constexpr auto lastPetCommandIssuedTime = 0x628;
		constexpr auto PetPrefabID = 0x62c;
		constexpr auto PetID = 0x630;
		constexpr auto PetWheelHasBeenOpened = 0x28;
		constexpr auto cachedBuildingPrivilegeTime = 0x634;
		constexpr auto cachedBuildingPrivilege = 0x638;
		constexpr auto maxProjectileID = 0x640;
		constexpr auto lastUpdateTime = 0x644;
		constexpr auto cachedThreatLevel = 0x648;
		constexpr auto serverTickRate = 0x64c;
		constexpr auto clientTickRate = 0x650;
		constexpr auto serverTickInterval = 0x654;
		constexpr auto clientTickInterval = 0x658;
		constexpr auto lastSentTickTime = 0x65c;
		constexpr auto lastTickStopwatch = 0x660;
		constexpr auto lastSentTick = 0x668;
		constexpr auto nextVisThink = 0x670;
		constexpr auto lastTimeSeen = 0x674;
		constexpr auto debugPrevVisible = 0x678;
		constexpr auto fallDamageEffect = 0x680;
		constexpr auto drownEffect = 0x688;
		constexpr auto playerFlags = 0x690;
		constexpr auto eyes = 0x698;
		constexpr auto inventory = 0x6a0;
		constexpr auto blueprints = 0x6a8;
		constexpr auto metabolism = 0x6b0;
		constexpr auto modifiers = 0x6b8;
		constexpr auto playerCollider = 0x6c0;
		constexpr auto Belt = 0x6c8;
		constexpr auto playerRigidbody = 0x6d0;
		constexpr auto userID = 0x6d8;
		constexpr auto UserIDString = 0x6e0;
		constexpr auto gamemodeteam = 0x6e8;
		constexpr auto reputation = 0x6ec;
		constexpr auto _displayName = 0x6f0;
		constexpr auto _lastSetName = 0x6f8;
		constexpr auto playerColliderStanding = 0x700;
		constexpr auto playerColliderDucked = 0x714;
		constexpr auto playerColliderCrawling = 0x728;
		constexpr auto playerColliderLyingDown = 0x73c;
		constexpr auto cachedProtection = 0x750;
		constexpr auto oldCameraFix = 0x29;
		constexpr auto lastHeadshotSoundTime = 0x758;
		constexpr auto nextColliderRefreshTime = 0x75c;
		constexpr auto clothingBlocksAiming = 0x760;
		constexpr auto clothingMoveSpeedReduction = 0x764;
		constexpr auto clothingWaterSpeedBonus = 0x768;
		constexpr auto clothingAccuracyBonus = 0x76c;
		constexpr auto equippingBlocked = 0x770;
		constexpr auto eggVision = 0x774;
		constexpr auto activeTelephone = 0x778;
		constexpr auto designingAIEntity = 0x780;

		constexpr auto GetMenuOptions = 0x6b70e0;
		constexpr auto get_HasMenuOptions = 0x6d1c10;
		constexpr auto OnRpcMessage = 0x6bf440;
		constexpr auto CanBeLooted = 0x6acdf0;
		constexpr auto get_LootPanelTitle = 0x6d2150;
		constexpr auto Menu_LootPlayer = 0x6be300;
		constexpr auto Menu_LootPlayer_ShowIf = 0x6be2e0;
		constexpr auto RPC_OpenLootPanel = 0x6c9d20;
		constexpr auto PlayOpenSound = 0x6c8090;
		constexpr auto InFirstPersonMode = 0x6ba000;
		constexpr auto UpdateViewMode = 0x6cff00;
		constexpr auto get_idealViewMode = 0x6d2360;
		constexpr auto get_shouldDrawBody = 0x6d27c0;
		constexpr auto OnViewModeChanged = 0x6c7b50;
		constexpr auto ModifyCamera = 0x6be370;
		constexpr auto Menu_AssistPlayer = 0x6be2a0;
		constexpr auto Menu_AssistPlayer_TimeStart = 0x6be260;
		constexpr auto Menu_AssistPlayer_ShowIf = 0x6bdfd0;
		constexpr auto get_lookingAt = 0x6d2770;
		constexpr auto get_lookingAtEntity = 0x6d2700;
		constexpr auto get_lookingAtCollider = 0x6d26b0;
		constexpr auto get_lookingAtPoint = 0x6d2750;
		constexpr auto set_lookingAtPoint = 0x6d2bb0;
		constexpr auto GetExtrapolationTime = 0x6b63b0;
		constexpr auto GetLocalVelocityClient = 0x6b6ee0;
		constexpr auto ClientInit = 0x6ae8f0;
		constexpr auto CreatePlayerModel = 0x6b3620;
		constexpr auto CreatePlayerCollision = 0x6b3470;
		constexpr auto CreatePlayerMovement = 0x6b3b40;
		constexpr auto InitLocalPlayer = 0x6ba140;
		constexpr auto InitRemotePlayer = 0x6ba420;
		constexpr auto HasLocalControls = 0x6b96b0;
		constexpr auto SetNetworkPosition = 0x6cca50;
		constexpr auto SetNetworkRotation = 0x6ccb00;
		constexpr auto DoClientDestroy = 0x6b4000;
		constexpr auto PostNetworkUpdate = 0x6c8800;
		constexpr auto OnFirstWakeUp = 0x6bed60;
		constexpr auto get_TimeAwake = 0x6d21d0;
		constexpr auto CL_ClothingChanged = 0x6ac3f0;
		constexpr auto ForceRebuild = 0x6b5780;
		constexpr auto RebuildWorldModel = 0x6ca1c0;
		constexpr auto SetDefaultFootstepEffects = 0x6cc1e0;
		constexpr auto OnSignal = 0x6c75d0;
		constexpr auto FindBone = 0x6b4d00;
		constexpr auto GetBones = 0x6b58b0;
		constexpr auto ShouldLerp = 0x6cd310;
		constexpr auto get_VisiblePlayerList = 0x6d2230;
		constexpr auto ClearVisibility = 0x6ae420;
		constexpr auto RegisterForVisibility = 0x6ca960;
		constexpr auto UnregisterFromVisibility = 0x6cdc60;
		constexpr auto FindByID_Clientside = 0x6b4e00;
		constexpr auto Find_Clientside = 0x6b4fd0;
		constexpr auto GetRandomFloatBasedOnUserID = 0x6b8ed0;
		constexpr auto DisplayHealthInfo = 0x59bd30;
		constexpr auto ShouldDestroyWithGroup = 0x6cd2e0;
		constexpr auto SetInheritedVelocity = 0x6cc6a0;
		constexpr auto GetPerformanceReport = 0x6b8c10;
		constexpr auto GetPerformanceReport_Frametime = 0x6b8790;
		constexpr auto OnBecameRagdoll = 0x6be790;
		constexpr auto OnVoiceData = 0x6c8050;
		constexpr auto RecieveAchievement = 0x6ca530;
		constexpr auto CraftMode = 0x6b3200;
		constexpr auto StartDesigningAI = 0x6cd660;
		constexpr auto OnDebugAIEventTriggeredStateChange = 0x6beb10;
		constexpr auto ClientOnEnable = 0x6af8a0;
		constexpr auto Client_OnRepairFailedResources = 0x6b1c80;
		constexpr auto TakeDamageHit = 0x6cd8d0;
		constexpr auto AdminReceivedUGC = 0x6aa9a0;
		constexpr auto AdminReceivedPatternFirework = 0x6aa8e0;
		constexpr auto get_IsWearingDiveGoggles = 0x6d2140;
		constexpr auto set_IsWearingDiveGoggles = 0x6d29a0;
		constexpr auto UpdateClothesIfNeeded = 0x6cddb0;
		constexpr auto MakeVisible = 0x6bdcd0;
		constexpr auto ClientUpdate_Sleeping = 0x6b0d60;
		constexpr auto ClientUpdate = 0x6b1140;
		constexpr auto RebuildClothingItems = 0x6c9fa0;
		constexpr auto UpdateClothingItems = 0x6ce2a0;
		constexpr auto UpdateHolsterOffsets = 0x6ce9d0;
		constexpr auto PostLateClientCycle = 0x6c8740;
		constexpr auto IsLocalPlayer = 0x6bbe60;
		constexpr auto ClientUpdateLocalPlayer = 0x6afa00;
		constexpr auto UpdateTopologyStats = 0x6cfda0;
		constexpr auto ClientTick = 0x6af950;
		constexpr auto DoMovement = 0x6b42f0;
		constexpr auto MountableOverrideViewAngles = 0x6be460;
		constexpr auto BlockSprint = 0x6ab910;
		constexpr auto BlockJump = 0x6ab870;
		constexpr auto ClientInput = 0x6aedf0;
		constexpr auto UseAction = 0x6d0260;
		constexpr auto GetInteractionEntity = 0x6b69d0;
		constexpr auto QuickUse = 0x6c9b80;
		constexpr auto LongUse = 0x6bdc10;
		constexpr auto UseStop = 0x6d0530;
		constexpr auto UpdateLookingAt = 0x6ceb60;
		constexpr auto ResetLookingAt = 0x6cadb0;
		constexpr auto SetLookingAt = 0x6cc830;
		constexpr auto CheckLookingAtVisible = 0x6adc20;
		constexpr auto FindVehicleParentFor = 0x6b4e90;
		constexpr auto OnDied = 0x6bec80;
		constexpr auto OnRespawnInformation = 0x6bf0a0;
		constexpr auto RequestRespawnUpdates = 0x6cac60;
		constexpr auto OnLand = 0x6beeb0;
		constexpr auto StartLoading = 0x6cd7f0;
		constexpr auto FinishLoading = 0x6b52d0;
		constexpr auto FullBlack_FadeIn = 0x6b5790;
		constexpr auto FinishedLoadingRoutine = 0x6b5450;
		constexpr auto DirectionalDamage = 0x6b3de0;
		constexpr auto UnlockedBlueprint = 0x6cdbf0;
		constexpr auto CheckForRespawnInfo = 0x6adbb0;
		constexpr auto UpdateRichPresenceState = 0x6cfb00;
		constexpr auto HandleCompanionPairingResult = 0x6b91b0;
		constexpr auto UpdateWaterDrinkingPoint = 0x6cff40;
		constexpr auto GetWaterDrinkingPoint = 0x6b9190;
		constexpr auto Drink = 0x6b4590;
		constexpr auto Drink_ShowIf = 0x6b43b0;
		constexpr auto SaltWater = 0x45a520;
		constexpr auto SaltWater_ShowIf = 0x6caf30;
		constexpr auto Climb = 0x6b2980;
		constexpr auto Climb_ShowIf = 0x6b26b0;
		constexpr auto HasPlayerFlag = 0x6b9720;
		constexpr auto get_IsReceivingSnapshot = 0x6d2130;
		constexpr auto get_IsAdmin = 0x6d2050;
		constexpr auto get_IsDeveloper = 0x6d2100;
		constexpr auto get_IsAiming = 0x6d2060;
		constexpr auto get_IsFlying = 0x6d2110;
		constexpr auto get_IsConnected = 0x6d2070;
		constexpr auto get_InGesture = 0x6d1fa0;
		constexpr auto get_CurrentGestureBlocksMovement = 0x6d1af0;
		constexpr auto get_CurrentGestureIsDance = 0x6d1b30;
		constexpr auto get_CurrentGestureIsFullBody = 0x6d1b70;
		constexpr auto get_InGestureCancelCooldown = 0x6d1f70;
		constexpr auto SetGestureMenuOpen = 0x6cc2a0;
		constexpr auto RequestStartGesture = 0x6cad00;
		constexpr auto Client_StartGesture = 0x6b21e0;
		constexpr auto ProcessDanceAction = 0x6c8ef0;
		constexpr auto SayingHello = 0x6cb280;
		constexpr auto ProcessGestureStart = 0x6c9400;
		constexpr auto EndGesture = 0x6b48b0;
		constexpr auto EndLocalGesture = 0x6b4950;
		constexpr auto EndGestureShared = 0x6b4740;
		constexpr auto HideHeldEntity = 0x6b9e90;
		constexpr auto CancelGesture = 0x6ad8d0;
		constexpr auto RemoteGestureCancel = 0x6caa50;
		constexpr auto CancelGestureInput = 0x6ad4b0;
		constexpr auto ClearGestureCooldown = 0x6ae2d0;
		constexpr auto ConVarRequestStartGesture = 0x6b2f90;
		constexpr auto Client_RemoteCancelledGesture = 0x6b2190;
		constexpr auto IsGestureBlocked = 0x6bb6a0;
		constexpr auto get_clientTeamLifetime = 0x6d22a0;
		constexpr auto CLIENT_ReceiveTeamInfo = 0x6abf20;
		constexpr auto UpdateSteamGroup = 0x6cfb50;
		constexpr auto ClearSteamGroup = 0x6ae300;
		constexpr auto CLIENT_ClearTeam = 0x6ab9b0;
		constexpr auto CLIENT_PendingInvite = 0x6abb50;
		constexpr auto InviteToTeam = 0x6ba490;
		constexpr auto Promote = 0x6c99f0;
		constexpr auto Menu_Promote_Start = 0x45a520;
		constexpr auto Promote_ShowIf = 0x6c9620;
		constexpr auto LocalPlayerIsLeader = 0x6bd720;
		constexpr auto Invite_ShowIf = 0x6ba9e0;
		constexpr auto GetHeldEntity = 0x6b64a0;
		constexpr auto GetHeldItem = 0x6b66e0;
		constexpr auto GetHeldItemID = 0x6b6690;
		constexpr auto HeldEntityViewAngles = 0x6b9c70;
		constexpr auto HeldEntityFrame = 0x6b9800;
		constexpr auto HeldEntityInput = 0x6b99d0;
		constexpr auto HeldItemUse = 0x6b9d90;
		constexpr auto HeldEntityStart = 0x6b9ba0;
		constexpr auto HeldEntityEnd = 0x6b9730;
		constexpr auto IsHostileItem = 0x6bba70;
		constexpr auto IsItemHoldRestricted = 0x6bbbd0;
		constexpr auto MapInfoOnEnable = 0x6bdd80;
		constexpr auto Client_ReceiveMarkers = 0x6b1e50;
		constexpr auto Client_UpdateDeathMarker = 0x6b2580;
		constexpr auto Client_AddNewDeathMarker = 0x6b1b40;
		constexpr auto AddPointOfInterest = 0x6aa800;
		constexpr auto ClearAllPointsOfInterest = 0x6ae180;
		constexpr auto ClearAllMapMarkers = 0x6ae020;
		constexpr auto HasAttemptedMission = 0x6b9260;
		constexpr auto CanAcceptMission = 0x6ac730;
		constexpr auto IsMissionActive = 0x6bbf40;
		constexpr auto HasCompletedMission = 0x6b93d0;
		constexpr auto HasFailedMission = 0x6b9540;
		constexpr auto SetActiveMission = 0x6cc1c0;
		constexpr auto GetActiveMission = 0x6b58a0;
		constexpr auto HasActiveMission = 0x6b9250;
		constexpr auto LoadMissions = 0x6bcd00;
		constexpr auto OnModelState = 0x6bf010;
		constexpr auto OnModelStateChanged = 0x6bef70;
		constexpr auto get_isMounted = 0x6d25b0;
		constexpr auto get_isMountingHidingWeapon = 0x6d25e0;
		constexpr auto GetMounted = 0x6b8250;
		constexpr auto GetMountedVehicle = 0x6b8200;
		constexpr auto MarkSwapSeat = 0x6bddd0;
		constexpr auto SwapSeatCooldown = 0x6cd8a0;
		constexpr auto ClientUpdateMounted = 0x6b0820;
		constexpr auto CLIENT_SetPetPrefabID = 0x6ac320;
		constexpr auto CLIENT_SetPetPetLoadedStateIndex = 0x6ac170;
		constexpr auto LinkPet = 0x6bcbb0;
		constexpr auto SetPetMenuOpen = 0x6ccc10;
		constexpr auto ClientIssuePetCommand = 0x6af7b0;
		constexpr auto IsSleeping = 0x6bc220;
		constexpr auto IsSpectating = 0x6bc230;
		constexpr auto IsRelaxed = 0x6bc150;
		constexpr auto IsServerFalling = 0x6bc210;
		constexpr auto GetBuildingPrivilege = 0x6b5cc0;
		constexpr auto CanBuild = 0x6ad0c0;
		constexpr auto IsBuildingBlocked = 0x6bb430;
		constexpr auto IsBuildingAuthed = 0x6baff0;
		constexpr auto CanPlaceBuildingPrivilege = 0x6ad250;
		constexpr auto NewProjectileID = 0x6be4f0;
		constexpr auto NewProjectileSeed = 0x6be500;
		constexpr auto SendProjectileAttack = 0x6cbf10;
		constexpr auto SendProjectileRicochet = 0x6cbf60;
		constexpr auto SendProjectileUpdate = 0x6cbfb0;
		constexpr auto Load = 0x6bd2c0;
		constexpr auto SpectatedPlayerHeadshot = 0x6cd5d0;
		constexpr auto GetThreatLevel = 0x6b9170;
		constexpr auto EnsureUpdated = 0x6b4a70;
		constexpr auto SetHostileLength = 0x6cc5f0;
		constexpr auto SetWeaponDrawnDuration = 0x6cd240;
		constexpr auto ModifyInputState = 0x45a520;
		constexpr auto ForcePositionToParentOffset = 0x6b54c0;
		constexpr auto UpdateClientTickRate = 0x6cdd50;
		constexpr auto ForcePositionTo = 0x6b55f0;
		constexpr auto SendVoiceData = 0x6cc000;
		constexpr auto SendClientTick = 0x6cb820;
		constexpr auto NotifyUnderwearChange = 0x6be560;
		constexpr auto UpdatePlayerVisibilities = 0x6cf800;
		constexpr auto TimeSinceSeen = 0x6cda00;
		constexpr auto SetNextVisThink = 0x6ccbe0;
		constexpr auto WantsVisUpdate = 0x6d1070;
		constexpr auto IsAimingAt = 0x6bac20;
		constexpr auto UpdateCullingSpheres = 0x6ce700;
		constexpr auto VisUpdateUsingCulling = 0x6d06b0;
		constexpr auto VisUpdateUsingRays = 0x6d07c0;
		constexpr auto LogDebugCull = 0x6bd8d0;
		constexpr auto OnVisibilityChanged = 0x6c7d50;
		constexpr auto VisUpdate = 0x6d0be0;
		constexpr auto VisPlayerArmed = 0x6d05f0;
		constexpr auto AnyPartVisible = 0x6aac70;
		constexpr auto CalcVisUpdateRate = 0x6ac5f0;
		constexpr auto PointSeePoint = 0x6c8470;
		constexpr auto IsWounded = 0x6bc510;
		constexpr auto IsCrawling = 0x6bb4e0;
		constexpr auto IsIncapacitated = 0x6bbbc0;
		constexpr auto ToPlayer = 0x5a3ae0;
		constexpr auto get_Connection = 0x6d1ae0;
		constexpr auto get_displayName = 0x6d22f0;
		constexpr auto set_displayName = 0x6d29b0;
		constexpr auto SanitizePlayerNameString = 0x6cb100;
		constexpr auto IsGod = 0x6bb9a0;
		constexpr auto GetNetworkRotation = 0x6b82f0;
		constexpr auto CanInteract = 0x6ad1f0;
		constexpr auto StartHealth = 0x6cd7d0;
		constexpr auto StartMaxHealth = 0x6c8080;
		constexpr auto MaxHealth = 0x6bde10;
		constexpr auto MaxVelocity = 0x6bdec0;
		constexpr auto WorldSpaceBounds = 0x6d1550;
		constexpr auto GetMountVelocity = 0x6b8130;
		constexpr auto GetInheritedProjectileVelocity = 0x6b67d0;
		constexpr auto GetInheritedThrowVelocity = 0x6b68d0;
		constexpr auto GetInheritedDropVelocity = 0x6b6710;
		constexpr auto PreInitShared = 0x6c8a80;
		constexpr auto DestroyShared = 0x6b3d60;
		constexpr auto InSafeZone = 0x6ba020;
		constexpr auto LateClientCycle = 0x6bc520;
		constexpr auto ClientCycle = 0x6ae5e0;
		constexpr auto GetBounds = 0x6b5940;
		constexpr auto GetCenter = 0x6b5d90;
		constexpr auto GetOffset = 0x6b8410;
		constexpr auto GetSize = 0x6b8fd0;
		constexpr auto GetHeight = 0x6b6480;
		constexpr auto GetRadius = 0x6b8ec0;
		constexpr auto GetJumpHeight = 0x6b6ed0;
		constexpr auto TriggerPoint = 0x6cdaf0;
		constexpr auto NoClipOffset = 0x6be510;
		constexpr auto NoClipRadius = 0x6be550;
		constexpr auto MaxDeployDistance = 0x6bde00;
		constexpr auto ClientUpdatePersistantData = 0x6b0d30;
		constexpr auto GetMinSpeed = 0x6b8100;
		constexpr auto GetMaxSpeed = 0x6b70b0;
		constexpr auto GetSpeed = 0x6b9030;
		constexpr auto OnAttacked = 0x6be5a0;
		constexpr auto EnablePlayerCollider = 0x6b46e0;
		constexpr auto DisablePlayerCollider = 0x6b3fa0;
		constexpr auto RefreshColliderSize = 0x6ca650;
		constexpr auto SetPlayerRigidbodyState = 0x6cd220;
		constexpr auto AddPlayerRigidbody = 0x6aa680;
		constexpr auto RemovePlayerRigidbody = 0x6cab30;
		constexpr auto IsEnsnared = 0x6bb5b0;
		constexpr auto IsAttacking = 0x6badf0;
		constexpr auto CanAttack = 0x6acba0;
		constexpr auto OnLadder = 0x6bee10;
		constexpr auto IsSwimming = 0x6bc4c0;
		constexpr auto IsHeadUnderwater = 0x6bba20;
		constexpr auto IsOnGround = 0x6bc0b0;
		constexpr auto IsRunning = 0x6bc160;
		constexpr auto IsDucked = 0x6bb500;
		constexpr auto RecentlyTeleported = 0x6ca4a0;
		constexpr auto ShowToast = 0x6cd370;
		constexpr auto ChatMessage = 0x6ad9a0;
		constexpr auto ConsoleMessage = 0x6b3140;
		constexpr auto PenetrationResistance = 0x6c8080;
		constexpr auto ScaleDamage = 0x6cb590;
		constexpr auto UpdateMoveSpeedFromClothing = 0x6cf430;
		constexpr auto UpdateProtectionFromClothing = 0x6cf9e0;
		constexpr auto Categorize = 0x6ad970;
		constexpr auto ToString = 0x6cda20;
		constexpr auto GetDebugStatus = 0x6b6020;
		constexpr auto GetItem = 0x6b6e20;
		constexpr auto get_Traits = 0x6d2210;
		constexpr auto WaterFactor = 0x6d1090;
		constexpr auto AirFactor = 0x6aabc0;
		constexpr auto GetOxygenTime = 0x6b8460;
		constexpr auto ShouldInheritNetworkGroup = 0x6bc230;
		constexpr auto AnyPlayersVisibleToEntity = 0x6ab2b0;
		constexpr auto IsStandingOnEntity = 0x6bc240;
		constexpr auto SetActiveTelephone = 0x6cc1d0;
		constexpr auto get_HasActiveTelephone = 0x6d1bb0;
		constexpr auto get_IsDesigningAI = 0x6d20a0;
		constexpr auto ClearDesigningAIEntity = 0x6ae2b0;
		constexpr auto ctor = 0x6d1930;
		constexpr auto cctor = 0x6d17e0;
	};

	namespace BaseMovement {
		constexpr auto adminCheat = 0x18;
		constexpr auto adminSpeed = 0x1c;
		constexpr auto Ownerk__BackingField = 0x20;
		constexpr auto InheritedVelocityk__BackingField = 0x28;
		constexpr auto TargetMovementk__BackingField = 0x34;
		constexpr auto Runningk__BackingField = 0x40;
		constexpr auto Duckingk__BackingField = 0x44;
		constexpr auto Crawlingk__BackingField = 0x48;
		constexpr auto Groundedk__BackingField = 0x4c;
		constexpr auto lastTeleportedTime = 0x50;

		constexpr auto get_Owner = 0x5a5a60;
		constexpr auto set_Owner = 0x5a5a90;
		constexpr auto get_InheritedVelocity = 0x81fc40;
		constexpr auto set_InheritedVelocity = 0x5e0fc0;
		constexpr auto get_TargetMovement = 0xadeba0;
		constexpr auto set_TargetMovement = 0x5e0fb0;
		constexpr auto get_Running = 0x5c9d00;
		constexpr auto set_Running = 0x5c9d10;
		constexpr auto get_Ducking = 0x925b90;
		constexpr auto set_Ducking = 0x98df70;
		constexpr auto get_Crawling = 0x6fee90;
		constexpr auto set_Crawling = 0x6feea0;
		constexpr auto get_Grounded = 0x5e0f80;
		constexpr auto set_Grounded = 0x5e0fe0;
		constexpr auto get_IsRunning = 0xadeb60;
		constexpr auto get_IsDucked = 0xadeb40;
		constexpr auto get_IsCrawling = 0xadeb30;
		constexpr auto get_IsGrounded = 0xadeb50;
		constexpr auto CurrentVelocity = 0xade8b0;
		constexpr auto CurrentMoveSpeed = 0x8275c0;
		constexpr auto GetCollider = 0x59bd50;
		constexpr auto Init = 0x5a5a90;
		constexpr auto BlockJump = 0x45a520;
		constexpr auto BlockSprint = 0x45a520;
		constexpr auto get_RecentlyTeleported = 0xadeb70;
		constexpr auto ClientInput = 0x45a520;
		constexpr auto DoFixedUpdate = 0x45a520;
		constexpr auto FrameUpdate = 0xade9a0;
		constexpr auto TeleportTo = 0xadea90;
		constexpr auto Push = 0x45a520;
		constexpr auto SetParent = 0x45a520;
		constexpr auto FixedUpdate = 0xade920;
		constexpr auto PlayerAttemptedMount = 0x45a520;
		constexpr auto PlayerCompletedMount = 0x45a520;
		constexpr auto ctor = 0x7045e0;
	};

	namespace BaseProjectile {
		constexpr auto NoiseRadius = 0x280;
		constexpr auto damageScale = 0x284;
		constexpr auto distanceScale = 0x288;
		constexpr auto projectileVelocityScale = 0x28c;
		constexpr auto automatic = 0x290;
		constexpr auto usableByTurret = 0x291;
		constexpr auto turretDamageScale = 0x294;
		constexpr auto attackFX = 0x298;
		constexpr auto silencedAttack = 0x2a0;
		constexpr auto muzzleBrakeAttack = 0x2a8;
		constexpr auto MuzzlePoint = 0x2b0;
		constexpr auto reloadTime = 0x2b8;
		constexpr auto canUnloadAmmo = 0x2bc;
		constexpr auto primaryMagazine = 0x2c0;
		constexpr auto fractionalReload = 0x2c8;
		constexpr auto reloadStartDuration = 0x2cc;
		constexpr auto reloadFractionDuration = 0x2d0;
		constexpr auto reloadEndDuration = 0x2d4;
		constexpr auto aimSway = 0x2d8;
		constexpr auto aimSwaySpeed = 0x2dc;
		constexpr auto recoil = 0x2e0;
		constexpr auto aimconeCurve = 0x2e8;
		constexpr auto aimCone = 0x2f0;
		constexpr auto hipAimCone = 0x2f4;
		constexpr auto aimconePenaltyPerShot = 0x2f8;
		constexpr auto aimConePenaltyMax = 0x2fc;
		constexpr auto aimconePenaltyRecoverTime = 0x300;
		constexpr auto aimconePenaltyRecoverDelay = 0x304;
		constexpr auto stancePenaltyScale = 0x308;
		constexpr auto hasADS = 0x30c;
		constexpr auto noAimingWhileCycling = 0x30d;
		constexpr auto manualCycle = 0x30e;
		constexpr auto needsCycle = 0x30f;
		constexpr auto isCycling = 0x310;
		constexpr auto aiming = 0x311;
		constexpr auto resetDuration = 0x314;
		constexpr auto numShotsFired = 0x318;
		constexpr auto nextReloadTime = 0x31c;
		constexpr auto startReloadTime = 0x320;
		constexpr auto stancePenalty = 0x324;
		constexpr auto aimconePenalty = 0x328;
		constexpr auto cachedModHash = 0x32c;
		constexpr auto sightAimConeScale = 0x330;
		constexpr auto sightAimConeOffset = 0x334;
		constexpr auto hipAimConeScale = 0x338;
		constexpr auto hipAimConeOffset = 0x33c;
		constexpr auto isReloading = 0x340;
		constexpr auto swaySampleTime = 0x344;
		constexpr auto lastShotTime = 0x348;
		constexpr auto reloadPressTime = 0x34c;
		constexpr auto ammoTypePreReload = 0x350;
		constexpr auto fractionalReloadDesiredCount = 0x358;
		constexpr auto fractionalReloadNumAdded = 0x35c;
		constexpr auto triggerReady = 0x360;
		constexpr auto nextHeightCheckTime = 0x364;
		constexpr auto cachedUnderground = 0x368;
		constexpr auto createdProjectiles = 0x370;

		constexpr auto OnRpcMessage = 0xa1d800;
		constexpr auto get_recoilProperties = 0xa1f360;
		constexpr auto GetInheritedVelocity = 0xa1ade0;
		constexpr auto GetDamageScale = 0xa1adc0;
		constexpr auto GetDistanceScale = 0xa1add0;
		constexpr auto GetProjectileVelocityScale = 0xa1b5d0;
		constexpr auto StartReloadCooldown = 0xa1efe0;
		constexpr auto ResetReloadCooldown = 0xa1e400;
		constexpr auto HasReloadCooldown = 0xa1bcf0;
		constexpr auto GetReloadCooldown = 0xa1b5f0;
		constexpr auto GetReloadIdle = 0xa1b750;
		constexpr auto OnDrawGizmos = 0xa1d040;
		constexpr auto GetRecoil = 0xa1b5e0;
		constexpr auto get_isSemiAuto = 0xa1f350;
		constexpr auto GetAimCone = 0xa1a2b0;
		constexpr auto ScaleRepeatDelay = 0xa1e410;
		constexpr auto GetProjectileModifier = 0xa1af90;
		constexpr auto DidAttackClientside = 0xa187a0;
		constexpr auto GetItemOptions = 0xa1ae40;
		constexpr auto ClientIsReloading = 0xa184c0;
		constexpr auto NotifySpectatorReloading = 0xa1cff0;
		constexpr auto EditViewAngles = 0xa198b0;
		constexpr auto OnFrame = 0xa1d410;
		constexpr auto ShotFired = 0xa1e740;
		constexpr auto SimulateAimcone = 0xa1e7a0;
		constexpr auto CanAttack = 0xa182c0;
		constexpr auto CanAim = 0xa18290;
		constexpr auto OnInput = 0xa1d420;
		constexpr auto ReadyToAim = 0xa1e350;
		constexpr auto ReadyToFire = 0xa1e3a0;
		constexpr auto AmmoTypeClicked = 0xa18170;
		constexpr auto AddAmmoOption = 0xa17fc0;
		constexpr auto GetReloadMenu = 0xa1b7d0;
		constexpr auto PredictAmmoType = 0xa1dfb0;
		constexpr auto HasMoreThanOneAmmoType = 0xa1ba40;
		constexpr auto OnDeploy = 0xa1d000;
		constexpr auto DoReload = 0xa19330;
		constexpr auto InsertAmmoFraction = 0xa1bd20;
		constexpr auto CancelFractionalReloading = 0xa182e0;
		constexpr auto ClientFinishFractionalReload = 0xa18380;
		constexpr auto ClientSingleReload = 0xa184d0;
		constexpr auto DoAttack = 0xa18870;
		constexpr auto BeginCycle = 0xa18200;
		constexpr auto LaunchProjectile = 0xa1ce00;
		constexpr auto DryFire = 0xa197f0;
		constexpr auto ProcessSpectatorViewmodel = 0xa1e2f0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0xa1e1e0;
		constexpr auto GetReloadDuration = 0xa1b670;
		constexpr auto GetAvailableAmmo = 0xa1abb0;
		constexpr auto IsSilenced = 0xa1bd80;
		constexpr auto FiredUnderground = 0xa1a220;
		constexpr auto OnSignal = 0xa1d8f0;
		constexpr auto LaunchProjectileClientside = 0xa1bf60;
		constexpr auto CreateProjectile = 0xa18610;
		constexpr auto UpdateAmmoDisplay = 0xa1f030;
		constexpr auto get_UsingInfiniteAmmoCheat = 0x59bd30;
		constexpr auto Load = 0xa1cf50;
		constexpr auto ctor = 0xa1f0e0;
	};

	namespace PlayerWalkMovement {
		constexpr auto zeroFrictionMaterial = 0x58;
		constexpr auto highFrictionMaterial = 0x60;
		constexpr auto capsuleHeight = 0x68;
		constexpr auto capsuleCenter = 0x6c;
		constexpr auto capsuleHeightDucked = 0x70;
		constexpr auto capsuleCenterDucked = 0x74;
		constexpr auto capsuleHeightCrawling = 0x78;
		constexpr auto capsuleCenterCrawling = 0x7c;
		constexpr auto gravityTestRadius = 0x80;
		constexpr auto gravityMultiplier = 0x84;
		constexpr auto gravityMultiplierSwimming = 0x88;
		constexpr auto maxAngleWalking = 0x8c;
		constexpr auto maxAngleClimbing = 0x90;
		constexpr auto maxAngleSliding = 0x94;
		constexpr auto maxStepHeight = 0x98;
		constexpr auto body = 0xa0;
		constexpr auto initialColDetectionMode = 0xa8;
		constexpr auto capsule = 0xb0;
		constexpr auto ladder = 0xb8;
		constexpr auto maxVelocity = 0xc0;
		constexpr auto groundAngle = 0xc4;
		constexpr auto groundAngleNew = 0xc8;
		constexpr auto groundTime = 0xcc;
		constexpr auto jumpTime = 0xd0;
		constexpr auto landTime = 0xd4;
		constexpr auto previousPosition = 0xd8;
		constexpr auto previousVelocity = 0xe4;
		constexpr auto previousInheritedVelocity = 0xf0;
		constexpr auto groundNormal = 0xfc;
		constexpr auto groundNormalNew = 0x108;
		constexpr auto groundVelocity = 0x114;
		constexpr auto groundVelocityNew = 0x120;
		constexpr auto nextSprintTime = 0x12c;
		constexpr auto lastSprintTime = 0x130;
		constexpr auto sprintForced = 0x134;
		constexpr auto attemptedMountTime = 0x138;
		constexpr auto modify = 0x13c;
		constexpr auto grounded = 0x140;
		constexpr auto climbing = 0x141;
		constexpr auto sliding = 0x142;
		constexpr auto swimming = 0x143;
		constexpr auto wasSwimming = 0x144;
		constexpr auto jumping = 0x145;
		constexpr auto wasJumping = 0x146;
		constexpr auto falling = 0x147;
		constexpr auto wasFalling = 0x148;
		constexpr auto flying = 0x149;
		constexpr auto wasFlying = 0x14a;
		constexpr auto forcedDuckDelta = 0x14c;

		constexpr auto Awake = 0xa370b0;
		constexpr auto GetCollider = 0x820210;
		constexpr auto OnDisable = 0xa3bf90;
		constexpr auto Init = 0xa397c0;
		constexpr auto OnCollisionEnter = 0xa3bdd0;
		constexpr auto OnCollisionStay = 0xa3beb0;
		constexpr auto GroundCheck = 0xa38f80;
		constexpr auto TeleportTo = 0xa3c640;
		constexpr auto UpdateCurrentLadder = 0xa3c970;
		constexpr auto WantsSprint = 0xa3d9e0;
		constexpr auto ClientInput = 0xa373a0;
		constexpr auto Movement_Water = 0xa3b220;
		constexpr auto Movement_Mounted = 0xa3a300;
		constexpr auto Movement_Ladder = 0xa39cb0;
		constexpr auto Movement_Noclip = 0xa3a410;
		constexpr auto Movement_Walking = 0xa3a9a0;
		constexpr auto GetHeldEntityMovementMultiplier = 0xa38ed0;
		constexpr auto HandleGrounded = 0xa39250;
		constexpr auto HandleRunDuckCrawl = 0xa393d0;
		constexpr auto GetForcedDuck = 0xa38de0;
		constexpr auto HandleJumping = 0xa392a0;
		constexpr auto CanJump = 0xa37220;
		constexpr auto BlockJump = 0xa37190;
		constexpr auto BlockSprint = 0xa371d0;
		constexpr auto SetKinematic = 0xa3c410;
		constexpr auto ApplyForce = 0xa37070;
		constexpr auto CanSprint = 0xa37330;
		constexpr auto Jump = 0xa39990;
		constexpr auto DoFixedUpdate = 0xa37750;
		constexpr auto DoStepUp = 0xa37f70;
		constexpr auto UpdateVelocity = 0xa3ce90;
		constexpr auto UpdateGravity = 0xa3cb40;
		constexpr auto FrameUpdate = 0xa38940;
		constexpr auto TransformState = 0xa3c760;
		constexpr auto SetParent = 0xa3c440;
		constexpr auto FallVelocity = 0xa38890;
		constexpr auto CurrentVelocity = 0xa37710;
		constexpr auto CurrentMoveSpeed = 0xa376c0;
		constexpr auto PlayerAttemptedMount = 0xa3c3b0;
		constexpr auto PlayerCompletedMount = 0xa3c3e0;
		constexpr auto ctor = 0xa3da70;
	};

	namespace UnityEngine_GUI {
		constexpr auto s_BoxHash = 0x4;
		constexpr auto s_ButonHash = 0x8;
		constexpr auto s_RepeatButtonHash = 0xc;
		constexpr auto s_ToggleHash = 0x10;
		constexpr auto s_ButtonGridHash = 0x14;
		constexpr auto s_SliderHash = 0x18;
		constexpr auto s_BeginGroupHash = 0x1c;
		constexpr auto s_ScrollviewHash = 0x20;
		constexpr auto scrollTroughSidek__BackingField = 0x24;
		constexpr auto nextScrollStepTimek__BackingField = 0x28;
		constexpr auto s_Skin = 0x30;
		constexpr auto scrollViewStatesk__BackingField = 0x38;

		constexpr auto get_color = 0x1ccd900;
		constexpr auto set_color = 0x1ccdea0;
		constexpr auto get_backgroundColor = 0x1ccd7b0;
		constexpr auto set_backgroundColor = 0x1ccddb0;
		constexpr auto get_contentColor = 0x1ccd9c0;
		constexpr auto set_contentColor = 0x1ccdf50;
		constexpr auto get_changed = 0x1ccd890;
		constexpr auto set_changed = 0x1ccde20;
		constexpr auto get_enabled = 0x1ccda40;
		constexpr auto set_enabled = 0x1ccdfc0;
		constexpr auto get_usePageScrollbars = 0x1ccdd40;
		constexpr auto get_blendMaterial = 0x1ccd830;
		constexpr auto get_blitMaterial = 0x1ccd860;
		constexpr auto get_roundedRectMaterial = 0x1ccdb60;
		constexpr auto get_roundedRectWithColorPerBorderMaterial = 0x1ccdb90;
		constexpr auto GrabMouseControl = 0x1ccb900;
		constexpr auto HasMouseControl = 0x1ccc6f0;
		constexpr auto ReleaseMouseControl = 0x1ccce00;
		constexpr auto SetNextControlName = 0x1ccd090;
		constexpr auto InternalRepaintEditorWindow = 0x1ccca10;
		constexpr auto cctor = 0x1ccd4f0;
		constexpr auto get_scrollTroughSide = 0x1ccdbc0;
		constexpr auto set_scrollTroughSide = 0x1cce120;
		constexpr auto get_nextScrollStepTime = 0x1ccdb00;
		constexpr auto set_nextScrollStepTime = 0x1cce060;
		constexpr auto set_skin = 0x1cce1e0;
		constexpr auto get_skin = 0x1ccdce0;
		constexpr auto DoSetSkin = 0x1cc9d80;
		constexpr auto get_matrix = 0x1ccda70;
		constexpr auto set_matrix = 0x1cce000;
		constexpr auto Label = 0x1cccb30;
		constexpr auto DrawTexture = 0x1ccaf10;
		constexpr auto CalculateScaledTextureRects = 0x1cc80d0;
		constexpr auto Box = 0x1cc74c0;
		constexpr auto Button = 0x1cc7580;
		constexpr auto PasswordFieldGetStrToShow = 0x1ccccd0;
		constexpr auto DoTextField = 0x1cca200;
		constexpr auto HandleTextFieldEventForTouchscreen = 0x1ccc130;
		constexpr auto HandleTextFieldEventForDesktop = 0x1ccb940;
		constexpr auto Toggle = 0x1ccd330;
		constexpr auto SelectionGrid = 0x1cccf30;
		constexpr auto CalcTotalHorizSpacing = 0x1cc7ec0;
		constexpr auto DoControl = 0x1cc96b0;
		constexpr auto DoLabel = 0x1cc9af0;
		constexpr auto DoToggle = 0x1cca3c0;
		constexpr auto DoButton = 0x1cc9580;
		constexpr auto DoButtonGrid = 0x1cc8890;
		constexpr auto CalcMouseRects = 0x1cc79a0;
		constexpr auto HorizontalSlider = 0x1ccc800;
		constexpr auto Slider = 0x1ccd0d0;
		constexpr auto BeginGroup = 0x1cc6ea0;
		constexpr auto EndGroup = 0x1ccb8c0;
		constexpr auto get_scrollViewStates = 0x1ccdc80;
		constexpr auto CallWindowDelegate = 0x1cc8400;
		constexpr auto get_color_Injected = 0x1ccd8c0;
		constexpr auto set_color_Injected = 0x1ccde60;
		constexpr auto get_backgroundColor_Injected = 0x1ccd770;
		constexpr auto set_backgroundColor_Injected = 0x1ccdd70;
		constexpr auto get_contentColor_Injected = 0x1ccd980;
		constexpr auto set_contentColor_Injected = 0x1ccdf10;
	};

	namespace UnityEngine_GUIStyle {
		constexpr auto m_Ptr = 0x10;
		constexpr auto m_Normal = 0x18;
		constexpr auto m_Hover = 0x20;
		constexpr auto m_Active = 0x28;
		constexpr auto m_Focused = 0x30;
		constexpr auto m_OnNormal = 0x38;
		constexpr auto m_OnHover = 0x40;
		constexpr auto m_OnActive = 0x48;
		constexpr auto m_OnFocused = 0x50;
		constexpr auto m_Border = 0x58;
		constexpr auto m_Padding = 0x60;
		constexpr auto m_Margin = 0x68;
		constexpr auto m_Overflow = 0x70;
		constexpr auto m_Name = 0x78;
		constexpr auto s_None = 0x8;

		constexpr auto get_rawName = 0x1cc4a00;
		constexpr auto set_rawName = 0x1cc4dd0;
		constexpr auto get_font = 0x1cc44f0;
		constexpr auto get_imagePosition = 0x1cc4530;
		constexpr auto set_alignment = 0x1cc4c70;
		constexpr auto get_wordWrap = 0x1cc4ac0;
		constexpr auto get_contentOffset = 0x1cc4420;
		constexpr auto set_contentOffset = 0x1cc4d00;
		constexpr auto get_fixedWidth = 0x1cc44b0;
		constexpr auto get_fixedHeight = 0x1cc4470;
		constexpr auto get_stretchWidth = 0x1cc4a80;
		constexpr auto set_stretchWidth = 0x1cc4e70;
		constexpr auto get_stretchHeight = 0x1cc4a40;
		constexpr auto set_stretchHeight = 0x1cc4e20;
		constexpr auto set_fontSize = 0x1cc4d40;
		constexpr auto set_Internal_clipOffset = 0x1cc4c30;
		constexpr auto Internal_Create = 0x1cc3830;
		constexpr auto Internal_Copy = 0x1cc37e0;
		constexpr auto Internal_Destroy = 0x1cc3870;
		constexpr auto GetStyleStatePtr = 0x1cc3610;
		constexpr auto GetRectOffsetPtr = 0x1cc35d0;
		constexpr auto Internal_GetLineHeight = 0x1cc3f00;
		constexpr auto Internal_Draw = 0x1cc3c80;
		constexpr auto Internal_Draw2 = 0x1cc3920;
		constexpr auto Internal_DrawCursor = 0x1cc3a00;
		constexpr auto Internal_DrawWithTextSelection = 0x1cc3b20;
		constexpr auto Internal_GetCursorPixelPosition = 0x1cc3db0;
		constexpr auto Internal_GetCursorStringIndex = 0x1cc3ea0;
		constexpr auto Internal_GetSelectedRenderedText = 0x1cc3fb0;
		constexpr auto Internal_CalcSize = 0x1cc2520;
		constexpr auto Internal_CalcSizeWithConstraints = 0x1cc24c0;
		constexpr auto Internal_CalcHeight = 0x1cc23e0;
		constexpr auto Internal_CalcMinMaxWidth = 0x1cc36b0;
		constexpr auto SetMouseTooltip = 0x1cc40b0;
		constexpr auto Internal_GetCursorFlashOffset = 0x1cc3d10;
		constexpr auto SetDefaultFont = 0x1cc4020;
		constexpr auto ctor = 0x1cc4350;
		constexpr auto Finalize = 0x1cc33f0;
		constexpr auto get_name = 0x1cc4770;
		constexpr auto set_name = 0x1cc4d80;
		constexpr auto get_normal = 0x1cc4890;
		constexpr auto get_margin = 0x1cc46c0;
		constexpr auto get_padding = 0x1cc4950;
		constexpr auto get_lineHeight = 0x1cc4610;
		constexpr auto Draw = 0x1cc31c0;
		constexpr auto DrawCursor = 0x1cc2580;
		constexpr auto DrawWithTextSelection = 0x1cc2a40;
		constexpr auto op_Implicit = 0x1cc4b00;
		constexpr auto get_none = 0x1cc47d0;
		constexpr auto GetCursorPixelPosition = 0x1cc34f0;
		constexpr auto GetCursorStringIndex = 0x1cc3570;
		constexpr auto CalcSize = 0x1cc2520;
		constexpr auto CalcSizeWithConstraints = 0x1cc24c0;
		constexpr auto CalcHeight = 0x1cc23e0;
		constexpr auto get_isHeightDependantOnWidth = 0x1cc4570;
		constexpr auto CalcMinMaxWidth = 0x1cc2440;
		constexpr auto ToString = 0x1cc4130;
		constexpr auto cctor = 0x1cc4240;
		constexpr auto get_contentOffset_Injected = 0x1cc43d0;
		constexpr auto set_contentOffset_Injected = 0x1cc4cb0;
		constexpr auto set_Internal_clipOffset_Injected = 0x1cc4be0;
		constexpr auto Internal_Draw_Injected = 0x1cc3bf0;
		constexpr auto Internal_Draw2_Injected = 0x1cc38b0;
		constexpr auto Internal_DrawCursor_Injected = 0x1cc3990;
		constexpr auto Internal_DrawWithTextSelection_Injected = 0x1cc3a70;
		constexpr auto Internal_GetCursorPixelPosition_Injected = 0x1cc3d40;
		constexpr auto Internal_GetCursorStringIndex_Injected = 0x1cc3e30;
		constexpr auto Internal_GetSelectedRenderedText_Injected = 0x1cc3f40;
		constexpr auto Internal_CalcSize_Injected = 0x1cc3780;
		constexpr auto Internal_CalcSizeWithConstraints_Injected = 0x1cc3710;
		constexpr auto Internal_CalcMinMaxWidth_Injected = 0x1cc3650;
		constexpr auto SetMouseTooltip_Injected = 0x1cc4060;
	};

	namespace UnityEngine_Event {
		constexpr auto m_Ptr = 0x10;
		constexpr auto s_MasterEvent = 0x8;

		constexpr auto get_rawType = 0x1cb4120;
		constexpr auto get_mousePosition = 0x1cb4050;
		constexpr auto set_mousePosition = 0x1cb4430;
		constexpr auto get_delta = 0x1cb3dd0;
		constexpr auto get_pointerType = 0x1cb40a0;
		constexpr auto get_button = 0x1cb3bc0;
		constexpr auto get_modifiers = 0x1cb3fc0;
		constexpr auto set_modifiers = 0x1cb43a0;
		constexpr auto get_pressure = 0x1cb40e0;
		constexpr auto get_clickCount = 0x1cb3c40;
		constexpr auto get_character = 0x1cb3c00;
		constexpr auto set_character = 0x1cb41e0;
		constexpr auto get_keyCode = 0x1cb3f80;
		constexpr auto set_keyCode = 0x1cb4360;
		constexpr auto get_displayIndex = 0x1cb3e20;
		constexpr auto set_displayIndex = 0x1cb4320;
		constexpr auto get_type = 0x1cb41a0;
		constexpr auto set_type = 0x1cb4470;
		constexpr auto get_commandName = 0x1cb3c80;
		constexpr auto set_commandName = 0x1cb4230;
		constexpr auto Internal_Use = 0x1cb1aa0;
		constexpr auto Internal_Create = 0x1cb18a0;
		constexpr auto Internal_Destroy = 0x1cb18e0;
		constexpr auto Internal_Copy = 0x1cb1860;
		constexpr auto GetTypeForControl = 0x1cb1820;
		constexpr auto CopyFromPtr = 0x1cb1300;
		constexpr auto PopEvent = 0x1cb2d70;
		constexpr auto Internal_SetNativeEvent = 0x1cb1a60;
		constexpr auto Internal_MakeMasterEventCurrent = 0x1cb1920;
		constexpr auto ctor = 0x1cb3af0;
		constexpr auto Finalize = 0x1cb1610;
		constexpr auto CopyFrom = 0x1cb1350;
		constexpr auto get_shift = 0x1cb4160;
		constexpr auto get_control = 0x1cb3d00;
		constexpr auto get_alt = 0x1cb3b80;
		constexpr auto get_command = 0x1cb3cc0;
		constexpr auto get_current = 0x1cb3d40;
		constexpr auto set_current = 0x1cb4280;
		constexpr auto get_isKey = 0x1cb3ed0;
		constexpr auto get_isMouse = 0x1cb3f20;
		constexpr auto get_isDirectManipulationDevice = 0x1cb3e60;
		constexpr auto KeyboardEvent = 0x1cb1ae0;
		constexpr auto GetHashCode = 0x1cb16f0;
		constexpr auto Equals = 0x1cb13c0;
		constexpr auto ToString = 0x1cb2db0;
		constexpr auto Use = 0x1cb3890;
		constexpr auto get_mousePosition_Injected = 0x1cb4000;
		constexpr auto set_mousePosition_Injected = 0x1cb43e0;
		constexpr auto get_delta_Injected = 0x1cb3d80;
	};

	namespace UnityEngine_Input {

		constexpr auto GetKeyInt = 0x25779a0;
		constexpr auto GetKeyUpInt = 0x25779e0;
		constexpr auto GetKeyDownInt = 0x2577960;
		constexpr auto GetAxis = 0x25778e0;
		constexpr auto GetAxisRaw = 0x25778a0;
		constexpr auto GetButtonDown = 0x2577920;
		constexpr auto GetMouseButton = 0x2577aa0;
		constexpr auto GetMouseButtonDown = 0x2577a20;
		constexpr auto GetMouseButtonUp = 0x2577a60;
		constexpr auto GetTouch = 0x2577b20;
		constexpr auto GetKey = 0x25779a0;
		constexpr auto GetKeyUp = 0x25779e0;
		constexpr auto GetKeyDown = 0x2577960;
		constexpr auto get_anyKey = 0x2577bb0;
		constexpr auto get_anyKeyDown = 0x2577b80;
		constexpr auto get_mousePosition = 0x2577d00;
		constexpr auto get_mouseScrollDelta = 0x2577db0;
		constexpr auto get_imeCompositionMode = 0x2577c90;
		constexpr auto set_imeCompositionMode = 0x2578000;
		constexpr auto get_compositionString = 0x2577c60;
		constexpr auto get_compositionCursorPos = 0x2577c20;
		constexpr auto set_compositionCursorPos = 0x2577fc0;
		constexpr auto get_mousePresent = 0x2577d40;
		constexpr auto get_touchCount = 0x2577df0;
		constexpr auto get_touchSupported = 0x2577e20;
		constexpr auto get_touches = 0x2577e50;
		constexpr auto GetTouch_Injected = 0x2577ae0;
		constexpr auto get_mousePosition_Injected = 0x2577cc0;
		constexpr auto get_mouseScrollDelta_Injected = 0x2577d70;
		constexpr auto get_compositionCursorPos_Injected = 0x2577be0;
		constexpr auto set_compositionCursorPos_Injected = 0x2577f80;
	};

	namespace UnityEngine_DDraw {
		constexpr auto singleton = 0x8;
		constexpr auto list = 0x18;
		constexpr auto AutoYPosition = 0x10;
		constexpr auto LastAutoY = 0x14;
		constexpr auto lineMaterial = 0x18;
		constexpr auto _skin = 0x20;

		constexpr auto Get = 0xb525c0;
		constexpr auto Capsule = 0xb521e0;
		constexpr auto Sphere = 0xb53a60;
		constexpr auto SphereGizmo = 0xb53770;
		constexpr auto Line = 0xb52890;
		constexpr auto Arrow = 0xb512b0;
		constexpr auto ArrowPadded = 0xb50bb0;
		constexpr auto Bounds = 0xb514e0;
		constexpr auto Box = 0xb51aa0;
		constexpr auto Text = 0xb53d40;
		constexpr auto ScreenText = 0xb535d0;
		constexpr auto Awake = 0xb51470;
		constexpr auto OnPreRender = 0xb531f0;
		constexpr auto OnPostRender = 0xb52eb0;
		constexpr auto OnGUI = 0xb52ce0;
		constexpr auto CreateLineMaterial = 0xb52460;
		constexpr auto get_skin = 0xb53f50;
		constexpr auto ctor = 0xb53ee0;
		constexpr auto cctor = 0x45a520;
	};

	namespace UnityEngine_Texture2D {

		constexpr auto get_format = 0x23f0510;
		constexpr auto get_whiteTexture = 0x23f0590;
		constexpr auto get_blackTexture = 0x23f04e0;
		constexpr auto Compress = 0x23eed00;
		constexpr auto Internal_CreateImpl = 0x23ef390;
		constexpr auto Internal_Create = 0x23ef3f0;
		constexpr auto get_isReadable = 0x23f0550;
		constexpr auto ApplyImpl = 0x23eeb50;
		constexpr auto ResizeImpl = 0x23ef8c0;
		constexpr auto SetPixelImpl = 0x23efc00;
		constexpr auto GetPixelImpl = 0x23eef70;
		constexpr auto GetPixelBilinearImpl = 0x23eedb0;
		constexpr auto ResizeWithFormatImpl = 0x23ef910;
		constexpr auto ReadPixelsImpl = 0x23ef6b0;
		constexpr auto SetPixelsImpl = 0x23efe00;
		constexpr auto LoadRawTextureDataImpl = 0x23ef4c0;
		constexpr auto GetWritableImageData = 0x23ef350;
		constexpr auto GetRawImageDataSize = 0x23ef310;
		constexpr auto set_requestedMipmapLevel = 0x23f0600;
		constexpr auto set_minimumMipmapLevel = 0x23f05c0;
		constexpr auto ClearRequestedMipmapLevel = 0x23eecc0;
		constexpr auto ClearMinimumMipmapLevel = 0x23eec80;
		constexpr auto SetAllPixels32 = 0x23efae0;
		constexpr auto SetBlockOfPixels32 = 0x23efb40;
		constexpr auto GetPixels = 0x23ef210;
		constexpr auto GetPixels32 = 0x23ef110;
		constexpr auto ctor = 0x23f0320;
		constexpr auto SetPixel = 0x23efc70;
		constexpr auto SetPixels = 0x23efe60;
		constexpr auto GetPixel = 0x23eeff0;
		constexpr auto GetPixelBilinear = 0x23eee30;
		constexpr auto LoadRawTextureData = 0x23ef520;
		constexpr auto Apply = 0x23eebd0;
		constexpr auto Resize = 0x23efa40;
		constexpr auto ReadPixels = 0x23ef7f0;
		constexpr auto SetPixels32 = 0x23efae0;
		constexpr auto SetPixelImpl_Injected = 0x23efba0;
		constexpr auto GetPixelImpl_Injected = 0x23eef10;
		constexpr auto GetPixelBilinearImpl_Injected = 0x23eed50;
		constexpr auto ReadPixelsImpl_Injected = 0x23ef640;
	};

	namespace ModelState {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto waterLevel = 0x14;
		constexpr auto lookDir = 0x18;
		constexpr auto flags = 0x24;
		constexpr auto poseType = 0x28;
		constexpr auto inheritedVelocity = 0x2c;

		constexpr auto ctor = 0x227b910;
		constexpr auto HasFlag = 0x227adf0;
		constexpr auto SetFlag = 0x227b8a0;
		constexpr auto get_ducked = 0x227b960;
		constexpr auto set_ducked = 0x227ba60;
		constexpr auto get_jumped = 0x227b990;
		constexpr auto set_jumped = 0x227bac0;
		constexpr auto get_onground = 0x227b9d0;
		constexpr auto set_onground = 0x227bb40;
		constexpr auto get_sleeping = 0x227ba00;
		constexpr auto set_sleeping = 0x227bba0;
		constexpr auto get_sprinting = 0x227ba10;
		constexpr auto set_sprinting = 0x227bbc0;
		constexpr auto get_onLadder = 0x227b9b0;
		constexpr auto set_onLadder = 0x227bb00;
		constexpr auto get_flying = 0x227b970;
		constexpr auto set_flying = 0x227ba80;
		constexpr auto get_aiming = 0x227b940;
		constexpr auto set_aiming = 0x227ba20;
		constexpr auto get_prone = 0x227b9e0;
		constexpr auto set_prone = 0x227bb60;
		constexpr auto get_mounted = 0x227b9a0;
		constexpr auto set_mounted = 0x227bae0;
		constexpr auto get_relaxed = 0x227b9f0;
		constexpr auto set_relaxed = 0x227bb80;
		constexpr auto get_crawling = 0x227b950;
		constexpr auto set_crawling = 0x227ba40;
		constexpr auto get_onPhone = 0x227b9c0;
		constexpr auto set_onPhone = 0x227bb20;
		constexpr auto get_headLook = 0x227b980;
		constexpr auto set_headLook = 0x227baa0;
		constexpr auto Equal = 0x227aa90;
		constexpr auto ResetToPool = 0x227aed0;
		constexpr auto Dispose = 0x227aa10;
		constexpr auto EnterPool = 0x11ba760;
		constexpr auto LeavePool = 0x11ba790;
		constexpr auto CopyTo = 0x22796f0;
		constexpr auto Copy = 0x2279740;
		constexpr auto Deserialize = 0x227a790;
		constexpr auto DeserializeLengthDelimited = 0x22797e0;
		constexpr auto DeserializeLength = 0x2279e70;
		constexpr auto FromProto = 0x227aba0;
		constexpr auto WriteToStream = 0x227b8d0;
		constexpr auto WriteToStreamDelta = 0x227b8f0;
		constexpr auto ReadFromStream = 0x227ae00;
		constexpr auto SerializeDelta = 0x227af80;
		constexpr auto Serialize = 0x227b5e0;
		constexpr auto ToProtoBytes = 0x227b8c0;
		constexpr auto ToProto = 0x227b8d0;
		constexpr auto SerializeToBytes = 0x227b4d0;
		constexpr auto SerializeLengthDelimited = 0x227b420;
	};

	namespace ProtoBuf_PlayerProjectileUpdate {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto projectileID = 0x14;
		constexpr auto curPosition = 0x18;
		constexpr auto curVelocity = 0x24;
		constexpr auto travelTime = 0x30;

		constexpr auto ResetToPool = 0x229fad0;
		constexpr auto Dispose = 0x229f770;
		constexpr auto EnterPool = 0x11ba760;
		constexpr auto LeavePool = 0x11ba790;
		constexpr auto CopyTo = 0x229e600;
		constexpr auto Copy = 0x229e640;
		constexpr auto Deserialize = 0x229ed70;
		constexpr auto DeserializeLengthDelimited = 0x229e6e0;
		constexpr auto DeserializeLength = 0x229ece0;
		constexpr auto FromProto = 0x229f8a0;
		constexpr auto WriteToStream = 0x22a04e0;
		constexpr auto WriteToStreamDelta = 0x22a0500;
		constexpr auto ReadFromStream = 0x229fab0;
		constexpr auto SerializeDelta = 0x229fc30;
		constexpr auto Serialize = 0x22a0240;
		constexpr auto ToProtoBytes = 0x22a04d0;
		constexpr auto ToProto = 0x22a04e0;
		constexpr auto SerializeToBytes = 0x22a0130;
		constexpr auto SerializeLengthDelimited = 0x22a0080;
		constexpr auto ctor = 0x1177180;
	};

	namespace Projectile {
		constexpr auto initialVelocity = 0x18;
		constexpr auto drag = 0x24;
		constexpr auto gravityModifier = 0x28;
		constexpr auto thickness = 0x2c;
		constexpr auto initialDistance = 0x30;
		constexpr auto remainInWorld = 0x34;
		constexpr auto stickProbability = 0x38;
		constexpr auto breakProbability = 0x3c;
		constexpr auto conditionLoss = 0x40;
		constexpr auto ricochetChance = 0x44;
		constexpr auto penetrationPower = 0x48;
		constexpr auto damageProperties = 0x50;
		constexpr auto damageDistances = 0x58;
		constexpr auto damageMultipliers = 0x60;
		constexpr auto damageTypes = 0x68;
		constexpr auto rendererToScale = 0x70;
		constexpr auto firstPersonRenderer = 0x78;
		constexpr auto createDecals = 0x80;
		constexpr auto doDefaultHitEffects = 0x81;
		constexpr auto flybySound = 0x88;
		constexpr auto flybySoundDistance = 0x90;
		constexpr auto closeFlybySound = 0x98;
		constexpr auto closeFlybyDistance = 0xa0;
		constexpr auto tumbleSpeed = 0xa4;
		constexpr auto tumbleAxis = 0xa8;
		constexpr auto swimScale = 0xb4;
		constexpr auto swimSpeed = 0xc0;
		constexpr auto owner = 0xd0;
		constexpr auto sourceWeaponPrefab = 0xd8;
		constexpr auto sourceProjectilePrefab = 0xe0;
		constexpr auto mod = 0xe8;
		constexpr auto projectileID = 0xf0;
		constexpr auto seed = 0xf4;
		constexpr auto clientsideEffect = 0xf8;
		constexpr auto clientsideAttack = 0xf9;
		constexpr auto integrity = 0xfc;
		constexpr auto maxDistance = 0x100;
		constexpr auto modifier = 0x104;
		constexpr auto invisible = 0x114;
		constexpr auto currentVelocity = 0x118;
		constexpr auto currentPosition = 0x124;
		constexpr auto traveledDistance = 0x130;
		constexpr auto traveledTime = 0x134;
		constexpr auto launchTime = 0x138;
		constexpr auto sentPosition = 0x13c;
		constexpr auto previousPosition = 0x148;
		constexpr auto previousVelocity = 0x154;
		constexpr auto previousTraveledTime = 0x160;
		constexpr auto isRicochet = 0x164;
		constexpr auto isRetiring = 0x165;
		constexpr auto flybyPlayed = 0x166;
		constexpr auto wasFacingPlayer = 0x167;
		constexpr auto flybyPlane = 0x168;
		constexpr auto flybyRay = 0x178;
		constexpr auto cleanupAction = 0x190;
		constexpr auto hitTest = 0x198;
		constexpr auto swimRandom = 0x1a0;
		constexpr auto _waterMaterialID = 0x4;
		constexpr auto cachedWaterString = 0x8;

		constexpr auto CalculateDamage = 0x807ec0;
		constexpr auto get_isAuthoritative = 0x80cd00;
		constexpr auto get_isAlive = 0x80ccc0;
		constexpr auto Retire = 0x80bab0;
		constexpr auto Cleanup = 0x808410;
		constexpr auto AdjustVelocity = 0x807c50;
		constexpr auto InitializeVelocity = 0x80acf0;
		constexpr auto OnDisable = 0x80af60;
		constexpr auto Update = 0x80c920;
		constexpr auto SetEffectScale = 0x80c080;
		constexpr auto DoFlybySound = 0x808610;
		constexpr auto CalculateEffectScale = 0x808370;
		constexpr auto UpdateVelocity = 0x80c640;
		constexpr auto DoVelocityUpdate = 0x80a500;
		constexpr auto DoMovement = 0x809330;
		constexpr auto DoWaterHit = 0x80a8e0;
		constexpr auto DoRicochet = 0x80a0e0;
		constexpr auto DoHit = 0x808c20;
		constexpr auto AdditiveImpactEffect = 0x45a520;
		constexpr auto Reflect = 0x80b230;
		constexpr auto Refract = 0x80b580;
		constexpr auto RandomRotation = 0x80b130;
		constexpr auto Launch = 0x80aed0;
		constexpr auto FleshMaterialID = 0x80abf0;
		constexpr auto WaterMaterialID = 0x80ca20;
		constexpr auto IsWaterMaterial = 0x80ada0;
		constexpr auto ShouldStopProjectile = 0x80c580;
		constexpr auto ctor = 0x80cb20;
		constexpr auto cctor = 0x45a520;
	};

	namespace PlayerEyes {
		constexpr auto DuckOffset = 0xc;
		constexpr auto CrawlOffset = 0x18;
		constexpr auto thirdPersonSleepingOffset = 0x20;
		constexpr auto defaultLazyAim = 0x30;
		constexpr auto viewOffset = 0x38;
		constexpr auto bodyRotationk__BackingField = 0x44;
		constexpr auto headAnglesk__BackingField = 0x54;
		constexpr auto rotationLookk__BackingField = 0x60;
		constexpr auto IsAltLookingLegsThresholdk__BackingField = 0x70;

		constexpr auto get_worldMountedPosition = 0xc06270;
		constexpr auto get_worldStandingPosition = 0xc06460;
		constexpr auto get_worldCrouchedPosition = 0xc06170;
		constexpr auto get_worldCrawlingPosition = 0xc06070;
		constexpr auto get_position = 0xc05b30;
		constexpr auto get_BodyLeanOffset = 0xc051f0;
		constexpr auto get_center = 0xc05550;
		constexpr auto get_offset = 0xc05870;
		constexpr auto get_rotation = 0xc05fc0;
		constexpr auto set_rotation = 0xc065c0;
		constexpr auto get_bodyRotation = 0xc05470;
		constexpr auto set_bodyRotation = 0xc06590;
		constexpr auto get_headAngles = 0xc05850;
		constexpr auto set_headAngles = 0xc065a0;
		constexpr auto get_rotationLook = 0xc05fb0;
		constexpr auto set_rotationLook = 0xc065b0;
		constexpr auto get_parentRotation = 0xc059a0;
		constexpr auto get_canUpdateViewAngles = 0xc05480;
		constexpr auto get_IsAltLookingLegsThreshold = 0xc05460;
		constexpr auto set_IsAltLookingLegsThreshold = 0xc06580;
		constexpr auto FrameUpdate = 0xc03d80;
		constexpr auto UpdateAltLegsThreshold = 0xc04e10;
		constexpr auto UpdateCamera = 0xc04e80;
		constexpr auto DoFirstPersonCamera = 0xc01dc0;
		constexpr auto DoInEyeCamera = 0xc02410;
		constexpr auto DoThirdPersonCamera = 0xc02760;
		constexpr auto DoDeathCamera = 0xc017e0;
		constexpr auto ApplyCameraMoves = 0xc011b0;
		constexpr auto MovementForward = 0xc04a90;
		constexpr auto MovementRight = 0xc04c50;
		constexpr auto BodyRay = 0xc01390;
		constexpr auto BodyForward = 0xc01240;
		constexpr auto BodyRight = 0xc01540;
		constexpr auto BodyUp = 0xc01690;
		constexpr auto HeadRay = 0xc046d0;
		constexpr auto HeadForward = 0xc045e0;
		constexpr auto HeadRight = 0xc048b0;
		constexpr auto HeadUp = 0xc049a0;
		constexpr auto GetLookRotation = 0xc04460;
		constexpr auto GetAimRotation = 0xc043a0;
		constexpr auto ctor = 0xc05130;
		constexpr auto cctor = 0xc05030;
	};

	namespace ViewModel {
		constexpr auto viewModelPrefab = 0x18;
		constexpr auto targetEntity = 0x20;
		constexpr auto instance = 0x28;

		constexpr auto Deploy = 0xbf9a50;
		constexpr auto OnDisable = 0xbf9dc0;
		constexpr auto Holster = 0xbf9d50;
		constexpr auto Clear = 0xbf98e0;
		constexpr auto OnFrame = 0xbf9e30;
		constexpr auto Play = 0xbf9f90;
		constexpr auto ResetTrigger = 0xbfa0c0;
		constexpr auto Trigger = 0xbfa3d0;
		constexpr auto CrossFade = 0xbf99b0;
		constexpr auto SetBool = 0xbfa1f0;
		constexpr auto SetFloat = 0xbfa330;
		constexpr auto set_ironSights = 0xbfa4f0;
		constexpr auto ctor = 0x3ec250;
	};

	namespace BowWeapon {
		constexpr auto attackReady = 0x378;
		constexpr auto arrowBack = 0x37c;
		constexpr auto swapArrows = 0x380;
		constexpr auto wasAiming = 0x388;

		constexpr auto OnRpcMessage = 0x6ebfc0;
		constexpr auto ClientInit = 0x6eb720;
		constexpr auto OnSignal = 0x6ec0b0;
		constexpr auto UpdatePullbackThink = 0x6ec500;
		constexpr auto CancelPullbackThink = 0x6eb6b0;
		constexpr auto PullbackThink = 0x6ec3c0;
		constexpr auto OnInput = 0x6ebc40;
		constexpr auto OnHolstered = 0x6ebc00;
		constexpr auto DoAttack = 0x6eb790;
		constexpr auto IsAiming = 0x6eba30;
		constexpr auto OnViewmodelEvent = 0x6ec220;
		constexpr auto OnFrame = 0x6ebad0;
		constexpr auto PostNetworkUpdate = 0x6ec290;
		constexpr auto TryReload = 0x6ec490;
		constexpr auto ProcessSpectatorViewmodel = 0x6ec330;
		constexpr auto ctor = 0x696870;
	};

	namespace AttackEntity {
		constexpr auto deployDelay = 0x1f8;
		constexpr auto repeatDelay = 0x1fc;
		constexpr auto animationDelay = 0x200;
		constexpr auto effectiveRange = 0x204;
		constexpr auto npcDamageScale = 0x208;
		constexpr auto attackLengthMin = 0x20c;
		constexpr auto attackLengthMax = 0x210;
		constexpr auto attackSpacing = 0x214;
		constexpr auto aiAimSwayOffset = 0x218;
		constexpr auto aiAimCone = 0x21c;
		constexpr auto aiOnlyInRange = 0x220;
		constexpr auto CloseRangeAddition = 0x224;
		constexpr auto MediumRangeAddition = 0x228;
		constexpr auto LongRangeAddition = 0x22c;
		constexpr auto CanUseAtMediumRange = 0x230;
		constexpr auto CanUseAtLongRange = 0x231;
		constexpr auto reloadSounds = 0x238;
		constexpr auto thirdPersonMeleeSound = 0x240;
		constexpr auto recoilCompDelayOverride = 0x248;
		constexpr auto wantsRecoilComp = 0x24c;
		constexpr auto nextAttackTime = 0x250;
		constexpr auto lastTickTime = 0x254;
		constexpr auto nextTickTime = 0x258;
		constexpr auto timeSinceDeploy = 0x25c;
		constexpr auto lastRecoilCompTime = 0x260;
		constexpr auto startAimingDirection = 0x264;
		constexpr auto wasDoingRecoilComp = 0x270;
		constexpr auto reductionSpeed = 0x274;

		constexpr auto GetInheritedVelocity = 0x9a8060;
		constexpr auto get_NextAttackTime = 0x9a8590;
		constexpr auto GetAttackStats = 0x45a520;
		constexpr auto StartAttackCooldownRaw = 0x9a82d0;
		constexpr auto StartAttackCooldown = 0x9a8300;
		constexpr auto ResetAttackCooldown = 0x9a8270;
		constexpr auto HasAttackCooldown = 0x9a80d0;
		constexpr auto GetAttackCooldown = 0x9a7f60;
		constexpr auto GetAttackIdle = 0x9a7fe0;
		constexpr auto CalculateCooldownTime = 0x9a7390;
		constexpr auto IsFullyDeployed = 0x9a8100;
		constexpr auto ProcessInputTime = 0x9a81a0;
		constexpr auto OnInput = 0x9a8140;
		constexpr auto OnDeploy = 0x9a8120;
		constexpr auto SpectatorNotifyDeploy = 0x9a8280;
		constexpr auto SpectatorNotifyTick = 0x9a8290;
		constexpr auto RecoilCompReady = 0x9a81f0;
		constexpr auto AddPunch = 0x9a71e0;
		constexpr auto DoRecoilCompensation = 0x9a74d0;
		constexpr auto ctor = 0x9a84a0;
		constexpr auto cctor = 0x9a8430;
	};

	namespace BaseEntity {
		constexpr auto ragdoll = 0x78;
		constexpr auto positionLerp = 0x80;
		constexpr auto menuOptions = 0x88;
		constexpr auto globalBroadcastProtocol = 0x8;
		constexpr auto broadcastProtocol = 0x90;
		constexpr auto links = 0x98;
		constexpr auto linkedToNeighbours = 0xa0;
		constexpr auto QueuedFileRequests = 0x10;
		constexpr auto _fileRequestCounter = 0x18;
		constexpr auto _flushQueuedFileRequests = 0x30;
		constexpr auto _pendingFileRequests = 0xa8;
		constexpr auto updateParentingAction = 0xb0;
		constexpr auto addedToParentEntity = 0xb8;
		constexpr auto itemSkin = 0xc0;
		constexpr auto entitySlots = 0xc8;
		constexpr auto triggers = 0xd0;
		constexpr auto isVisible = 0xd8;
		constexpr auto isAnimatorVisible = 0xd9;
		constexpr auto isShadowVisible = 0xda;
		constexpr auto localOccludee = 0xe0;
		constexpr auto Weightk__BackingField = 0x100;
		constexpr auto bounds = 0x104;
		constexpr auto impactEffect = 0x120;
		constexpr auto enableSaving = 0x128;
		constexpr auto syncPosition = 0x129;
		constexpr auto model = 0x130;
		constexpr auto flags = 0x138;
		constexpr auto parentBone = 0x13c;
		constexpr auto skinID = 0x140;
		constexpr auto _components = 0x148;
		constexpr auto HasBrain = 0x150;
		constexpr auto _name = 0x158;
		constexpr auto OwnerIDk__BackingField = 0x160;

		constexpr auto OnRpcMessage = 0x832910;
		constexpr auto GetEntityMenu = 0x82dd40;
		constexpr auto GetMenuOptions = 0x45a520;
		constexpr auto get_HasMenuOptions = 0x59bd30;
		constexpr auto GetItemOptions = 0x82e500;
		constexpr auto GetMovementModify = 0x82ef50;
		constexpr auto GetExtrapolationTime = 0x82de80;
		constexpr auto GetInterpolationDelay = 0x82e350;
		constexpr auto GetInterpolationInertia = 0x82e3e0;
		constexpr auto GetInterpolationSmoothing = 0x82e470;
		constexpr auto GetAngularVelocityClient = 0x82d7e0;
		constexpr auto GetLocalVelocityClient = 0x82e750;
		constexpr auto DrawInterpolationState = 0x82b850;
		constexpr auto LerpIdleDisable = 0x831280;
		constexpr auto ClientInit = 0x82aaa0;
		constexpr auto ClientOnEnable = 0x82ab50;
		constexpr auto OnPositionalFromNetwork = 0x8325a0;
		constexpr auto StartLerping = 0x835b40;
		constexpr auto StopLerping = 0x835cc0;
		constexpr auto ShouldLerp = 0x835730;
		constexpr auto SetNetworkPosition = 0x835220;
		constexpr auto SetNetworkRotation = 0x835390;
		constexpr auto DoDestroyEffects = 0x82b830;
		constexpr auto SpawnGibs = 0x835830;
		constexpr auto DoNetworkDestroy = 0x3ee140;
		constexpr auto PostNetworkUpdate = 0x833cd0;
		constexpr auto OnBecameRagdoll = 0x8322e0;
		constexpr auto GetMenuInformation = 0x82e8d0;
		constexpr auto HideMenuItems = 0x82fca0;
		constexpr auto GetMenuItems = 0x82ebc0;
		constexpr auto OnUse = 0x833ac0;
		constexpr auto OnUseHeld = 0x8338a0;
		constexpr auto OnUseStopped = 0x45a520;
		constexpr auto OnRendered = 0x45a520;
		constexpr auto DoClientDestroy = 0x82b580;
		constexpr auto GetEyeTransform = 0x82df10;
		constexpr auto NeedsCrosshair = 0x8321d0;
		constexpr auto AlwaysShowCrosshair = 0x59bd30;
		constexpr auto ShouldDestroyWithGroup = 0x835680;
		constexpr auto DetachEffects = 0x82b170;
		constexpr auto OnVoiceData = 0x45a520;
		constexpr auto LookingAtTick = 0x45a520;
		constexpr auto get_RealisticMass = 0x6c8080;
		constexpr auto OnCollision = 0x832390;
		constexpr auto ReceiveCollisionMessages = 0x833dc0;
		constexpr auto DebugClient = 0x45a520;
		constexpr auto OnDebugStart = 0x8323e0;
		constexpr auto DebugText = 0x82b0b0;
		constexpr auto HasFlag = 0x82fc60;
		constexpr auto ParentHasFlag = 0x833c30;
		constexpr auto SetFlag = 0x835050;
		constexpr auto IsOn = 0x8302b0;
		constexpr auto IsOpen = 0x8302c0;
		constexpr auto IsOnFire = 0x8302a0;
		constexpr auto IsLocked = 0x82fff0;
		constexpr auto IsDebugging = 0x82fe00;
		constexpr auto IsDisabled = 0x82fe10;
		constexpr auto IsBroken = 0x82fdf0;
		constexpr auto IsBusy = 0x82fca0;
		constexpr auto GetLogColor = 0x82e880;
		constexpr auto OnFlagsChanged = 0x8324a0;
		constexpr auto IsOccupied = 0x8300f0;
		constexpr auto FindLink = 0x82c7b0;
		constexpr auto EntityLinkBroadcast = 0x82c290;
		constexpr auto ReceivedEntityLinkBroadcast = 0x833e50;
		constexpr auto GetEntityLinks = 0x82dd00;
		constexpr auto LinkToEntity = 0x8312b0;
		constexpr auto LinkToNeighbours = 0x831510;
		constexpr auto InitEntityLinks = 0x82fcb0;
		constexpr auto FreeEntityLinks = 0x82d700;
		constexpr auto RefreshEntityLinks = 0x833ec0;
		constexpr auto RequestFileFromServer = 0x834770;
		constexpr auto EnqueueFileRequest = 0x82bf40;
		constexpr auto RequestFileImpl = 0x834870;
		constexpr auto FlushQueuedFileRequests = 0x82ca90;
		constexpr auto CL_ReceiveFileRequest = 0x82a7b0;
		constexpr auto CompletePendingFileRequests = 0x82ad50;
		constexpr auto UpdateChildren = 0x835e80;
		constexpr auto UpdateParenting = 0x836bf0;
		constexpr auto SetParentTransform = 0x835460;
		constexpr auto UpdateDisableState = 0x8361f0;
		constexpr auto HasClientTransformOffset = 0x82fac0;
		constexpr auto RemoveClientTransformOffset = 0x8341d0;
		constexpr auto AddClientTransformOffset = 0x82a170;
		constexpr auto OnParentChangingClient = 0x45a520;
		constexpr auto GetBuildingPrivilege = 0x82dc90;
		constexpr auto ServerRPC = 0x834d10;
		constexpr auto ServerRPCStart = 0x834b60;
		constexpr auto ServerRPCSend = 0x834af0;
		constexpr auto CL_RPCMessage = 0x82a4c0;
		constexpr auto SendSignalBroadcast = 0x834a40;
		constexpr auto SignalFromServerEx = 0x835750;
		constexpr auto SignalFromServer = 0x8357e0;
		constexpr auto OnSignal = 0x45a520;
		constexpr auto OnSkinChanged = 0x833510;
		constexpr auto OnSkinRefreshStart = 0x833880;
		constexpr auto OnSkinRefreshEnd = 0x833860;
		constexpr auto PreProcess = 0x833cf0;
		constexpr auto HasAnySlot = 0x82f9e0;
		constexpr auto GetSlot = 0x82f560;
		constexpr auto GetSlotAnchorName = 0x82f420;
		constexpr auto GetSlotAnchor = 0x82f4b0;
		constexpr auto HasSlot = 0x59bd30;
		constexpr auto get_Traits = 0x59bd50;
		constexpr auto HasTrait = 0x82fc70;
		constexpr auto HasAnyTrait = 0x82fa90;
		constexpr auto EnterTrigger = 0x82c1e0;
		constexpr auto LeaveTrigger = 0x8311e0;
		constexpr auto RemoveFromTriggers = 0x834230;
		constexpr auto ForceUpdateTriggersAction = 0x82cc80;
		constexpr auto ForceUpdateTriggers = 0x82ccb0;
		constexpr auto MakeVisible = 0x8321b0;
		constexpr auto UpdateCullingSpheres = 0x836070;
		constexpr auto RegisterForCulling = 0x833fa0;
		constexpr auto OnVisibilityChanged = 0x45a520;
		constexpr auto UnregisterFromCulling = 0x835e00;
		constexpr auto UpdateCullingBounds = 0x835fa0;
		constexpr auto CheckVisibility = 0x82aa80;
		constexpr auto CalcEntityVisUpdateRate = 0x82a960;
		constexpr auto DebugDrawCullingBounds = 0x82afe0;
		constexpr auto get_Weight = 0x837410;
		constexpr auto set_Weight = 0x837430;
		constexpr auto get_Components = 0x837390;
		constexpr auto ToPlayer = 0x59bd50;
		constexpr auto get_IsNpc = 0x59bd30;
		constexpr auto InitShared = 0x823e50;
		constexpr auto DestroyShared = 0x826d60;
		constexpr auto ResetState = 0x8349d0;
		constexpr auto InheritedVelocityScale = 0x8275c0;
		constexpr auto InheritedVelocityDirection = 0x5c2350;
		constexpr auto GetInheritedProjectileVelocity = 0x82e090;
		constexpr auto GetInheritedThrowVelocity = 0x82e320;
		constexpr auto GetInheritedDropVelocity = 0x82dfb0;
		constexpr auto GetParentVelocity = 0x82f160;
		constexpr auto GetWorldVelocity = 0x82f5c0;
		constexpr auto GetLocalVelocity = 0x82e7e0;
		constexpr auto GetAngularVelocity = 0x82d870;
		constexpr auto WorldSpaceBounds = 0x837090;
		constexpr auto PivotPoint = 0x3eca40;
		constexpr auto CenterPoint = 0x82aa40;
		constexpr auto ClosestPoint = 0x82aca0;
		constexpr auto TriggerPoint = 0x82aa40;
		constexpr auto Distance = 0x82b440;
		constexpr auto SqrDistance = 0x835a00;
		constexpr auto Distance2D = 0x82b2a0;
		constexpr auto SqrDistance2D = 0x835860;
		constexpr auto IsVisible = 0x830e20;
		constexpr auto IsVisibleSpecificLayers = 0x8307d0;
		constexpr auto IsVisibleAndCanSee = 0x8305c0;
		constexpr auto IsOlderThan = 0x830200;
		constexpr auto IsOutside = 0x8302d0;
		constexpr auto WaterFactor = 0x836c00;
		constexpr auto AirFactor = 0x82a210;
		constexpr auto WaterTestFromVolumes = 0x836dd0;
		constexpr auto IsInWaterVolume = 0x82feb0;
		constexpr auto BlocksWaterFor = 0x59bd30;
		constexpr auto Health = 0x8275c0;
		constexpr auto MaxHealth = 0x8275c0;
		constexpr auto MaxVelocity = 0x8275c0;
		constexpr auto BoundsPadding = 0x82a250;
		constexpr auto PenetrationResistance = 0x6c8080;
		constexpr auto GetImpactEffect = 0x82dfa0;
		constexpr auto OnAttacked = 0x45a520;
		constexpr auto GetItem = 0x59bd50;
		constexpr auto GiveItem = 0x82f9b0;
		constexpr auto CanBeLooted = 0x5c2350;
		constexpr auto GetEntity = 0x5a3ae0;
		constexpr auto ToString = 0x835d10;
		constexpr auto Categorize = 0x82aa10;
		constexpr auto Log = 0x831d00;
		constexpr auto SetModel = 0x835170;
		constexpr auto GetModel = 0x710010;
		constexpr auto GetBones = 0x82d910;
		constexpr auto FindBone = 0x82c640;
		constexpr auto FindBoneID = 0x82c560;
		constexpr auto FindClosestBone = 0x82c6f0;
		constexpr auto get_OwnerID = 0x837400;
		constexpr auto set_OwnerID = 0x837420;
		constexpr auto ShouldBlockProjectiles = 0x5c2350;
		constexpr auto ShouldInheritNetworkGroup = 0x5c2350;
		constexpr auto SupportsChildDeployables = 0x59bd30;
		constexpr auto BroadcastEntityMessage = 0x82a260;
		constexpr auto OnEntityMessage = 0x45a520;
		constexpr auto Load = 0x831800;
		constexpr auto ctor = 0x837280;
		constexpr auto cctor = 0x8371d0;
	};

	namespace UnityEngine_Time {

		constexpr auto get_time = 0x23f1130;
		constexpr auto get_deltaTime = 0x23f0f80;
		constexpr auto get_fixedTime = 0x23f0fe0;
		constexpr auto get_unscaledTime = 0x23f1190;
		constexpr auto get_unscaledDeltaTime = 0x23f1160;
		constexpr auto get_fixedDeltaTime = 0x23f0fb0;
		constexpr auto set_fixedDeltaTime = 0x23f11c0;
		constexpr auto get_maximumDeltaTime = 0x23f1040;
		constexpr auto set_maximumDeltaTime = 0x23f1200;
		constexpr auto get_smoothDeltaTime = 0x23f10d0;
		constexpr auto get_timeScale = 0x23f1100;
		constexpr auto set_timeScale = 0x23f1240;
		constexpr auto get_frameCount = 0x23f1010;
		constexpr auto get_renderedFrameCount = 0x23f10a0;
		constexpr auto get_realtimeSinceStartup = 0x23f1070;
	};

	namespace UnityEngine_Physics {

		constexpr auto get_gravity = 0x2500ec0;
		constexpr auto get_queriesHitBackfaces = 0x2500f00;
		constexpr auto set_queriesHitBackfaces = 0x2500f70;
		constexpr auto get_defaultPhysicsScene = 0x2500e40;
		constexpr auto IgnoreCollision = 0x24fd6f0;
		constexpr auto Raycast = 0x24ff660;
		constexpr auto Linecast = 0x24fd830;
		constexpr auto CapsuleCast = 0x24fcf30;
		constexpr auto SphereCast = 0x25008d0;
		constexpr auto BoxCast = 0x24fc970;
		constexpr auto Internal_RaycastAll = 0x24fd7c0;
		constexpr auto RaycastAll = 0x24fe3a0;
		constexpr auto RaycastNonAlloc = 0x24feac0;
		constexpr auto Query_SphereCastAll = 0x24fe240;
		constexpr auto SphereCastAll = 0x2500340;
		constexpr auto SyncTransforms = 0x2500da0;
		constexpr auto get_autoSyncTransforms = 0x2500dd0;
		constexpr auto set_autoSyncTransforms = 0x2500f30;
		constexpr auto OverlapSphereNonAlloc = 0x24fe110;
		constexpr auto CheckSphere_Internal = 0x24fd510;
		constexpr auto CheckSphere = 0x24fd580;
		constexpr auto CapsuleCastNonAlloc = 0x24fccd0;
		constexpr auto SphereCastNonAlloc = 0x25004d0;
		constexpr auto CheckCapsule_Internal = 0x24fd270;
		constexpr auto CheckCapsule = 0x24fd2e0;
		constexpr auto CheckBox_Internal = 0x24fd0b0;
		constexpr auto CheckBox = 0x24fd120;
		constexpr auto OverlapBox_Internal = 0x24fddf0;
		constexpr auto OverlapBox = 0x24fde60;
		constexpr auto OverlapBoxNonAlloc = 0x24fdc90;
		constexpr auto OverlapCapsuleNonAlloc = 0x24fe020;
		constexpr auto get_gravity_Injected = 0x2500e80;
		constexpr auto get_defaultPhysicsScene_Injected = 0x2500e00;
		constexpr auto Internal_RaycastAll_Injected = 0x24fd750;
		constexpr auto Query_SphereCastAll_Injected = 0x24fe1d0;
		constexpr auto CheckSphere_Internal_Injected = 0x24fd4a0;
		constexpr auto CheckCapsule_Internal_Injected = 0x24fd200;
		constexpr auto CheckBox_Internal_Injected = 0x24fd040;
		constexpr auto OverlapBox_Internal_Injected = 0x24fdd80;
	};

	namespace AssetNameCache {
		constexpr auto lower = 0x8;
		constexpr auto upper = 0x10;

		constexpr auto LookupName = 0x9a3970;
		constexpr auto LookupNameLower = 0x9a36b0;
		constexpr auto LookupNameUpper = 0x9a3810;
		constexpr auto GetName = 0x9a35f0;
		constexpr auto GetNameLower = 0x9a3470;
		constexpr auto GetNameUpper = 0x9a3530;
		constexpr auto cctor = 0x9a3ab0;
	};

	namespace UnityEngine_Component {

		constexpr auto get_transform = 0x1aca1a0;
		constexpr auto get_gameObject = 0x1aca160;
		constexpr auto GetComponent = 0x1ac9d40;
		constexpr auto GetComponentFastPath = 0x1ac9bd0;
		constexpr auto GetComponentInChildren = 0x1ac9c30;
		constexpr auto GetComponentsInChildren = 0x1ac9e20;
		constexpr auto GetComponentInParent = 0x1ac9cc0;
		constexpr auto GetComponents = 0x1ac9e80;
		constexpr auto GetComponentsForListInternal = 0x1ac9dc0;
		constexpr auto CompareTag = 0x1ac9b50;
		constexpr auto SendMessageUpwards = 0x1ac9f70;
		constexpr auto SendMessage = 0x1aca0b0;
		constexpr auto BroadcastMessage = 0x1ac9ae0;
		constexpr auto ctor = 0x1ac4530;
	};

	namespace UnityEngine_Transform {

		constexpr auto ctor = 0x1b552a0;
		constexpr auto get_position = 0x23f3fd0;
		constexpr auto set_position = 0x23f4950;
		constexpr auto get_localPosition = 0x23f3ca0;
		constexpr auto set_localPosition = 0x23f46c0;
		constexpr auto get_eulerAngles = 0x23f39a0;
		constexpr auto set_eulerAngles = 0x23f4410;
		constexpr auto get_localEulerAngles = 0x23f3bc0;
		constexpr auto set_localEulerAngles = 0x23f45c0;
		constexpr auto get_right = 0x23f4020;
		constexpr auto set_right = 0x23f49a0;
		constexpr auto get_up = 0x23f4210;
		constexpr auto set_up = 0x23f4b90;
		constexpr auto get_forward = 0x23f3a30;
		constexpr auto set_forward = 0x23f44c0;
		constexpr auto get_rotation = 0x23f41c0;
		constexpr auto set_rotation = 0x23f4b40;
		constexpr auto get_localRotation = 0x23f3d40;
		constexpr auto set_localRotation = 0x23f4760;
		constexpr auto get_localScale = 0x23f3de0;
		constexpr auto set_localScale = 0x23f4800;
		constexpr auto get_parent = 0x23f23c0;
		constexpr auto set_parent = 0x23f4850;
		constexpr auto get_parentInternal = 0x23f23c0;
		constexpr auto set_parentInternal = 0x23f33a0;
		constexpr auto GetParent = 0x23f23c0;
		constexpr auto SetParent = 0x23f33a0;
		constexpr auto get_worldToLocalMatrix = 0x23f43b0;
		constexpr auto get_localToWorldMatrix = 0x23f3e80;
		constexpr auto SetPositionAndRotation = 0x23f3450;
		constexpr auto Translate = 0x23f3790;
		constexpr auto Rotate = 0x23f2db0;
		constexpr auto RotateAroundInternal = 0x23f2b10;
		constexpr auto RotateAround = 0x23f2b70;
		constexpr auto LookAt = 0x23f2940;
		constexpr auto Internal_LookAt = 0x23f24e0;
		constexpr auto TransformDirection = 0x23f3550;
		constexpr auto InverseTransformDirection = 0x23f25a0;
		constexpr auto TransformVector = 0x23f36d0;
		constexpr auto InverseTransformVector = 0x23f2720;
		constexpr auto TransformPoint = 0x23f3610;
		constexpr auto InverseTransformPoint = 0x23f2660;
		constexpr auto get_root = 0x23f2400;
		constexpr auto GetRoot = 0x23f2400;
		constexpr auto get_childCount = 0x23f3960;
		constexpr auto DetachChildren = 0x23f21d0;
		constexpr auto SetAsFirstSibling = 0x23f32c0;
		constexpr auto SetAsLastSibling = 0x23f3300;
		constexpr auto SetSiblingIndex = 0x23f34b0;
		constexpr auto GetSiblingIndex = 0x23f2440;
		constexpr auto FindRelativeTransformWithPath = 0x23f2210;
		constexpr auto Find = 0x23f2270;
		constexpr auto get_lossyScale = 0x23f3f30;
		constexpr auto IsChildOf = 0x23f2780;
		constexpr auto get_hasChanged = 0x23f3b80;
		constexpr auto set_hasChanged = 0x23f4570;
		constexpr auto GetEnumerator = 0x23f2350;
		constexpr auto GetChild = 0x23f2310;
		constexpr auto get_position_Injected = 0x23f3f80;
		constexpr auto set_position_Injected = 0x23f4900;
		constexpr auto get_localPosition_Injected = 0x23f3c50;
		constexpr auto set_localPosition_Injected = 0x23f4670;
		constexpr auto get_rotation_Injected = 0x23f4170;
		constexpr auto set_rotation_Injected = 0x23f4af0;
		constexpr auto get_localRotation_Injected = 0x23f3cf0;
		constexpr auto set_localRotation_Injected = 0x23f4710;
		constexpr auto get_localScale_Injected = 0x23f3d90;
		constexpr auto set_localScale_Injected = 0x23f47b0;
		constexpr auto get_worldToLocalMatrix_Injected = 0x23f4360;
		constexpr auto get_localToWorldMatrix_Injected = 0x23f3e30;
		constexpr auto SetPositionAndRotation_Injected = 0x23f33f0;
		constexpr auto RotateAroundInternal_Injected = 0x23f2ab0;
		constexpr auto Internal_LookAt_Injected = 0x23f2480;
		constexpr auto TransformDirection_Injected = 0x23f34f0;
		constexpr auto InverseTransformDirection_Injected = 0x23f2540;
		constexpr auto TransformVector_Injected = 0x23f3670;
		constexpr auto InverseTransformVector_Injected = 0x23f26c0;
		constexpr auto TransformPoint_Injected = 0x23f35b0;
		constexpr auto InverseTransformPoint_Injected = 0x23f2600;
		constexpr auto get_lossyScale_Injected = 0x23f3ee0;
	};

	namespace GameTrace {

		constexpr auto TraceAll = 0xd800b0;
		constexpr auto Trace = 0xd809b0;
	};

	namespace HitTest {
		constexpr auto type = 0x10;
		constexpr auto AttackRay = 0x14;
		constexpr auto Radius = 0x2c;
		constexpr auto Forgiveness = 0x30;
		constexpr auto MaxDistance = 0x34;
		constexpr auto RayHit = 0x38;
		constexpr auto MultiHit = 0x64;
		constexpr auto BestHit = 0x65;
		constexpr auto DidHit = 0x66;
		constexpr auto damageProperties = 0x68;
		constexpr auto gameObject = 0x70;
		constexpr auto collider = 0x78;
		constexpr auto ignoreEntity = 0x80;
		constexpr auto HitEntity = 0x88;
		constexpr auto HitPoint = 0x90;
		constexpr auto HitNormal = 0x9c;
		constexpr auto HitDistance = 0xa8;
		constexpr auto HitTransform = 0xb0;
		constexpr auto HitPart = 0xb8;
		constexpr auto HitMaterial = 0xc0;

		constexpr auto HitPointWorld = 0x7f81c0;
		constexpr auto HitNormalWorld = 0x7f80a0;
		constexpr auto BuildAttackMessage = 0x7f7810;
		constexpr auto Clear = 0x7f7fc0;
		constexpr auto ctor = 0x3ee140;
	};

	namespace UnityEngine_Quaternion {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto z = 0x18;
		constexpr auto w = 0x1c;

		constexpr auto FromToRotation = 0x1b5bac0;
		constexpr auto Inverse = 0x1b5beb0;
		constexpr auto Slerp = 0x1b5c930;
		constexpr auto SlerpUnclamped = 0x1b5c810;
		constexpr auto Lerp = 0x1b5c0e0;
		constexpr auto LerpUnclamped = 0x1b5bfc0;
		constexpr auto Internal_FromEulerRad = 0x1b5bc20;
		constexpr auto Internal_ToEulerRad = 0x1b5bdd0;
		constexpr auto AngleAxis = 0x1b5b4a0;
		constexpr auto LookRotation = 0x1b5c340;
		constexpr auto ctor = 0xfcd70;
		constexpr auto get_identity = 0x1b5ce30;
		constexpr auto op_Multiply = 0x1b5d250;
		constexpr auto IsEqualUsingDot = 0x1b5bf40;
		constexpr auto op_Equality = 0x1b5cea0;
		constexpr auto op_Inequality = 0x1b5cf60;
		constexpr auto Dot = 0x1b5b660;
		constexpr auto SetLookRotation = 0x30eb10;
		constexpr auto Angle = 0x1b5b540;
		constexpr auto Internal_MakePositive = 0x1b5bcb0;
		constexpr auto get_eulerAngles = 0x30ec30;
		constexpr auto Euler = 0x1b5b790;
		constexpr auto RotateTowards = 0x1b5c3e0;
		constexpr auto GetHashCode = 0x30eaa0;
		constexpr auto Equals = 0x30e9c0;
		constexpr auto ToString = 0x30ec20;
		constexpr auto cctor = 0x1b5cc20;
		constexpr auto FromToRotation_Injected = 0x1b5ba60;
		constexpr auto Inverse_Injected = 0x1b5be60;
		constexpr auto Slerp_Injected = 0x1b5c8c0;
		constexpr auto SlerpUnclamped_Injected = 0x1b5c7a0;
		constexpr auto Lerp_Injected = 0x1b5c070;
		constexpr auto LerpUnclamped_Injected = 0x1b5bf50;
		constexpr auto Internal_FromEulerRad_Injected = 0x1b5bbd0;
		constexpr auto Internal_ToEulerRad_Injected = 0x1b5bd80;
		constexpr auto AngleAxis_Injected = 0x1b5b440;
		constexpr auto LookRotation_Injected = 0x1b5c190;
	};

	namespace GamePhysics {
		constexpr auto hitBufferB = 0x8;
		constexpr auto colBuffer = 0x10;

		constexpr auto CheckSphere = 0x7dddd0;
		constexpr auto CheckCapsule = 0x7dd360;
		constexpr auto CheckOBB = 0x7ddca0;
		constexpr auto CheckOBBAndEntity = 0x7dda20;
		constexpr auto CheckBounds = 0x7dd200;
		constexpr auto CheckInsideNonConvexMesh = 0x7dd670;
		constexpr auto CheckInsideAnyCollider = 0x7dd4e0;
		constexpr auto OverlapSphere = 0x7df1e0;
		constexpr auto CapsuleSweep = 0x7dcf60;
		constexpr auto OverlapCapsule = 0x7def60;
		constexpr auto OverlapOBB = 0x7df090;
		constexpr auto OverlapBounds = 0x7dedc0;
		constexpr auto BufferToList = 0x7dcdc0;
		constexpr auto HitBufferToList = 0x7de010;
		constexpr auto Trace = 0x7df890;
		constexpr auto TraceAll = 0x7df7b0;
		constexpr auto TraceAllUnordered = 0x7df4c0;
		constexpr auto LineOfSightRadius = 0x7de9a0;
		constexpr auto LineOfSight = 0x7deb90;
		constexpr auto LineOfSightInternal = 0x7de180;
		constexpr auto Verify = 0x7dfaa0;
		constexpr auto CompareEntity = 0x7dde90;
		constexpr auto HandleTerrainCollision = 0x7ddf00;
		constexpr auto Sort = 0x7df3c0;
		constexpr auto cctor = 0x7dfd50;
	};

	namespace WaterLevel {

		constexpr auto Factor = 0xd691c0;
		constexpr auto Test = 0xd6b370;
		constexpr auto GetWaterDepth = 0xd69a90;
		constexpr auto GetOverallWaterDepth = 0xd69940;
		constexpr auto GetBuoyancyWaterInfo = 0xd693a0;
		constexpr auto GetWaterInfo = 0xd69e20;
		constexpr auto GetWaterInfoFromVolumes = 0xd69bd0;
	};

	namespace System_Math {
		constexpr auto roundPower10Double = 0x8;

		constexpr auto Acos = 0x183a7b0;
		constexpr auto Asin = 0x183a7c0;
		constexpr auto Atan = 0x183a7e0;
		constexpr auto Atan2 = 0x183a7d0;
		constexpr auto Ceiling = 0x183a7f0;
		constexpr auto Cos = 0x183a800;
		constexpr auto Cosh = 0x183a810;
		constexpr auto Floor = 0x183a840;
		constexpr auto InternalRound = 0x183a850;
		constexpr auto InternalTruncate = 0x183aab0;
		constexpr auto Sin = 0x183b540;
		constexpr auto Tan = 0x183b580;
		constexpr auto Sinh = 0x183b550;
		constexpr auto Round = 0x183b220;
		constexpr auto SplitFractionDouble = 0x183b560;
		constexpr auto Truncate = 0x183b590;
		constexpr auto Sqrt = 0x183b570;
		constexpr auto Log = 0x183ac80;
		constexpr auto Log10 = 0x183ab10;
		constexpr auto Exp = 0x183a830;
		constexpr auto Pow = 0x183b090;
		constexpr auto Abs = 0x183a6e0;
		constexpr auto AbsHelper = 0x183a580;
		constexpr auto Max = 0x183ad30;
		constexpr auto Min = 0x183b080;
		constexpr auto Sign = 0x183b500;
		constexpr auto DivRem = 0x183a820;
		constexpr auto cctor = 0x183b640;
	};

	namespace UnityEngine_Mathf {

		constexpr auto ClosestPowerOfTwo = 0x1b4ba50;
		constexpr auto IsPowerOfTwo = 0x1b4be70;
		constexpr auto NextPowerOfTwo = 0x1b4c640;
		constexpr auto GammaToLinearSpace = 0x1b4bd40;
		constexpr auto LinearToGammaSpace = 0x1b4c0d0;
		constexpr auto FloatToHalf = 0x1b4bc40;
		constexpr auto HalfToFloat = 0x1b4bd80;
		constexpr auto PerlinNoise = 0x1b4c680;
		constexpr auto Sin = 0x1b4c8d0;
		constexpr auto Cos = 0x1b4ba90;
		constexpr auto Tan = 0x1b4cdb0;
		constexpr auto Asin = 0x1b4b7f0;
		constexpr auto Acos = 0x1b4b6e0;
		constexpr auto Atan = 0x1b4b8d0;
		constexpr auto Atan2 = 0x1b4b850;
		constexpr auto Sqrt = 0x1b4cd50;
		constexpr auto Abs = 0x1b4b680;
		constexpr auto Min = 0x1b4c2e0;
		constexpr auto Max = 0x1b4c250;
		constexpr auto Pow = 0x1b4c6d0;
		constexpr auto Exp = 0x1b4bbe0;
		constexpr auto Log = 0x1b4c1d0;
		constexpr auto Log10 = 0x1b4c110;
		constexpr auto Ceil = 0x1b4b990;
		constexpr auto Floor = 0x1b4bce0;
		constexpr auto Round = 0x1b4c850;
		constexpr auto CeilToInt = 0x1b4b930;
		constexpr auto FloorToInt = 0x1b4bc80;
		constexpr auto RoundToInt = 0x1b4c7f0;
		constexpr auto Sign = 0x1b4c8b0;
		constexpr auto Clamp = 0x1b4ba10;
		constexpr auto Clamp01 = 0x1b4b9f0;
		constexpr auto Lerp = 0x1b4c030;
		constexpr auto LerpUnclamped = 0x1b4c010;
		constexpr auto LerpAngle = 0x1b4beb0;
		constexpr auto MoveTowards = 0x1b4c550;
		constexpr auto MoveTowardsAngle = 0x1b4c2f0;
		constexpr auto SmoothStep = 0x1b4cc90;
		constexpr auto Approximately = 0x1b4b740;
		constexpr auto SmoothDamp = 0x1b4cac0;
		constexpr auto Repeat = 0x1b4c750;
		constexpr auto InverseLerp = 0x1b4bdc0;
		constexpr auto DeltaAngle = 0x1b4baf0;
		constexpr auto cctor = 0x1b4ce10;
	};

	namespace Door {
		constexpr auto __menuOption_Menu_CloseDoor = 0x270;
		constexpr auto __menuOption_Menu_KnockDoor = 0x2c8;
		constexpr auto __menuOption_Menu_OpenDoor = 0x320;
		constexpr auto __menuOption_Menu_ToggleHatch = 0x378;
		constexpr auto knockEffect = 0x3d0;
		constexpr auto canTakeLock = 0x3d8;
		constexpr auto hasHatch = 0x3d9;
		constexpr auto canTakeCloser = 0x3da;
		constexpr auto canTakeKnocker = 0x3db;
		constexpr auto canNpcOpen = 0x3dc;
		constexpr auto canHandOpen = 0x3dd;
		constexpr auto isSecurityDoor = 0x3de;
		constexpr auto vehiclePhysBoxes = 0x3e0;
		constexpr auto checkPhysBoxesOnOpen = 0x3e8;
		constexpr auto vehicleCollisionSfx = 0x3f0;
		constexpr auto ClosedColliderRoots = 0x3f8;
		constexpr auto closeHash = 0x4;

		constexpr auto GetMenuOptions = 0xae92e0;
		constexpr auto get_HasMenuOptions = 0xaeadc0;
		constexpr auto OnRpcMessage = 0xaea710;
		constexpr auto ResetState = 0xaeab60;
		constexpr auto HasSlot = 0xae9ed0;
		constexpr auto CanPickup = 0xae9170;
		constexpr auto Menu_OpenDoor = 0xaea2c0;
		constexpr auto Menu_OpenDoor_Proxy = 0xaea1a0;
		constexpr auto Menu_OpenDoorStart = 0xaea160;
		constexpr auto Menu_OpenDoor_ShowIf = 0xaea280;
		constexpr auto Menu_CloseDoor = 0xaea070;
		constexpr auto Menu_CloseDoor_Proxy = 0xae9f50;
		constexpr auto Menu_CloseDoorStart = 0xae9f10;
		constexpr auto Menu_CloseDoor_ShowIf = 0xaea030;
		constexpr auto Menu_KnockDoor = 0xaea120;
		constexpr auto Menu_KnockDoor_ShowIf = 0xaea0b0;
		constexpr auto Menu_ToggleHatch = 0xaea310;
		constexpr auto Menu_ToggleHatch_ShowIf = 0xaea300;
		constexpr auto NeedsCrosshair = 0x5c2350;
		constexpr auto OnDoorInterrupted = 0xaea350;
		constexpr auto ReverseDoorAnimation = 0xaeab70;
		constexpr auto BoundsPadding = 0x8646a0;
		constexpr auto OnObjects = 0x45a520;
		constexpr auto OnEmpty = 0x45a520;
		constexpr auto OnFlagsChanged = 0xaea5e0;
		constexpr auto ctor = 0xaeada0;
		constexpr auto cctor = 0xaead30;
	};

	namespace UnityEngine_Object {
		constexpr auto m_CachedPtr = 0x10;

		constexpr auto GetInstanceID = 0x1b55b90;
		constexpr auto GetHashCode = 0x1b55b80;
		constexpr auto Equals = 0x1b557a0;
		constexpr auto op_Implicit = 0x1b57020;
		constexpr auto CompareBaseObjects = 0x1b554b0;
		constexpr auto IsNativeObjectAlive = 0x1b56c70;
		constexpr auto GetCachedPtr = 0x1ac2580;
		constexpr auto get_name = 0x1b56e40;
		constexpr auto set_name = 0x1b572a0;
		constexpr auto Instantiate = 0x1b566f0;
		constexpr auto Destroy = 0x1b556a0;
		constexpr auto DestroyImmediate = 0x1b55650;
		constexpr auto FindObjectsOfType = 0x1b55b40;
		constexpr auto DontDestroyOnLoad = 0x1b55760;
		constexpr auto get_hideFlags = 0x1b56e00;
		constexpr auto set_hideFlags = 0x1b57260;
		constexpr auto CheckNullArgument = 0x1b55440;
		constexpr auto FindObjectOfType = 0x1b55ab0;
		constexpr auto ToString = 0x1b56d10;
		constexpr auto op_Equality = 0x1b56eb0;
		constexpr auto op_Inequality = 0x1b570f0;
		constexpr auto GetOffsetOfInstanceIDInCPlusPlusObject = 0x1b55d00;
		constexpr auto Internal_CloneSingle = 0x1b56a30;
		constexpr auto Internal_CloneSingleWithParent = 0x1b569d0;
		constexpr auto Internal_InstantiateSingle = 0x1b56be0;
		constexpr auto Internal_InstantiateSingleWithParent = 0x1b56ae0;
		constexpr auto GetName = 0x1b55cc0;
		constexpr auto SetName = 0x1b56cc0;
		constexpr auto FindObjectFromInstanceID = 0x1b55a70;
		constexpr auto ctor = 0x3ee140;
		constexpr auto cctor = 0x1b56dc0;
		constexpr auto Internal_InstantiateSingle_Injected = 0x1b56b80;
		constexpr auto Internal_InstantiateSingleWithParent_Injected = 0x1b56a70;
	};

	namespace BaseMelee {
		constexpr auto canThrowAsProjectile = 0x280;
		constexpr auto canAiHearIt = 0x281;
		constexpr auto onlyThrowAsProjectile = 0x282;
		constexpr auto damageProperties = 0x288;
		constexpr auto damageTypes = 0x290;
		constexpr auto maxDistance = 0x298;
		constexpr auto attackRadius = 0x29c;
		constexpr auto isAutomatic = 0x2a0;
		constexpr auto blockSprintOnAttack = 0x2a1;
		constexpr auto strikeFX = 0x2a8;
		constexpr auto useStandardHitEffects = 0x2b0;
		constexpr auto aiStrikeDelay = 0x2b4;
		constexpr auto swingEffect = 0x2b8;
		constexpr auto materialStrikeFX = 0x2c0;
		constexpr auto heartStress = 0x2c8;
		constexpr auto gathering = 0x2d0;
		constexpr auto throwReady = 0x2d8;

		constexpr auto OnRpcMessage = 0xad7ea0;
		constexpr auto GetInheritedVelocity = 0x98c990;
		constexpr auto DoThrow = 0xad7190;
		constexpr auto CreateProjectile = 0xad6b50;
		constexpr auto GetAttackStats = 0xad78b0;
		constexpr auto DoAttackShared = 0xad6d00;
		constexpr auto OnInput = 0xad7ac0;
		constexpr auto get_CanAttack = 0x5c2350;
		constexpr auto get_CanThrow = 0x5c2350;
		constexpr auto ClientAttack = 0x45a520;
		constexpr auto OnHolstered = 0xad7aa0;
		constexpr auto ProcessAttack = 0xad8050;
		constexpr auto DoAttack = 0xad6f50;
		constexpr auto DoViewmodelImpact = 0xad7820;
		constexpr auto OnViewmodelEvent = 0xad7f90;
		constexpr auto ProcessSpectatorViewmodel = 0xad8390;
		constexpr auto ProcessSpectatorViewmodelEvent = 0xad82e0;
		constexpr auto GetGatherInfoFromIndex = 0xad7910;
		constexpr auto CanHit = 0x5c2350;
		constexpr auto TotalDamage = 0xad8440;
		constexpr auto CanBeUsedInWater = 0x5c2350;
		constexpr auto GetStrikeEffectPath = 0xad7940;
		constexpr auto ctor = 0xad85a0;
	};

	namespace ItemModProjectile {
		constexpr auto projectileObject = 0x18;
		constexpr auto mods = 0x20;
		constexpr auto ammoType = 0x28;
		constexpr auto numProjectiles = 0x2c;
		constexpr auto projectileSpread = 0x30;
		constexpr auto projectileVelocity = 0x34;
		constexpr auto projectileVelocitySpread = 0x38;
		constexpr auto useCurve = 0x3c;
		constexpr auto spreadScalar = 0x40;
		constexpr auto attackEffectOverride = 0x48;
		constexpr auto barrelConditionLoss = 0x50;
		constexpr auto category = 0x58;

		constexpr auto GetRandomVelocity = 0xa953c0;
		constexpr auto GetSpreadScalar = 0xa95400;
		constexpr auto GetIndexedSpreadScalar = 0xa95330;
		constexpr auto GetAverageVelocity = 0xa95320;
		constexpr auto GetMinVelocity = 0xa953b0;
		constexpr auto GetMaxVelocity = 0xa953a0;
		constexpr auto IsAmmo = 0xa95460;
		constexpr auto ServerProjectileHit = 0xa95470;
		constexpr auto ctor = 0xa95540;
	};

	namespace RecoilProperties {
		constexpr auto recoilYawMin = 0x18;
		constexpr auto recoilYawMax = 0x1c;
		constexpr auto recoilPitchMin = 0x20;
		constexpr auto recoilPitchMax = 0x24;
		constexpr auto timeToTakeMin = 0x28;
		constexpr auto timeToTakeMax = 0x2c;
		constexpr auto ADSScale = 0x30;
		constexpr auto movementPenalty = 0x34;
		constexpr auto clampPitch = 0x38;
		constexpr auto pitchCurve = 0x40;
		constexpr auto yawCurve = 0x48;
		constexpr auto useCurves = 0x50;
		constexpr auto curvesAsScalar = 0x51;
		constexpr auto shotsUntilMax = 0x54;
		constexpr auto maxRecoilRadius = 0x58;
		constexpr auto overrideAimconeWithCurve = 0x5c;
		constexpr auto aimconeCurveScale = 0x60;
		constexpr auto aimconeCurve = 0x68;
		constexpr auto aimconeProbabilityCurve = 0x70;
		constexpr auto newRecoilOverride = 0x78;

		constexpr auto GetRecoil = 0x9df310;
		constexpr auto ctor = 0x9df390;
	};

	namespace ItemDefinition {
		constexpr auto itemid = 0x18;
		constexpr auto shortname = 0x20;
		constexpr auto displayName = 0x28;
		constexpr auto displayDescription = 0x30;
		constexpr auto iconSprite = 0x38;
		constexpr auto category = 0x40;
		constexpr auto selectionPanel = 0x44;
		constexpr auto maxDraggable = 0x48;
		constexpr auto itemType = 0x4c;
		constexpr auto amountType = 0x50;
		constexpr auto occupySlots = 0x54;
		constexpr auto stackable = 0x58;
		constexpr auto quickDespawn = 0x5c;
		constexpr auto rarity = 0x60;
		constexpr auto spawnAsBlueprint = 0x64;
		constexpr auto inventoryGrabSound = 0x68;
		constexpr auto inventoryDropSound = 0x70;
		constexpr auto physImpactSoundDef = 0x78;
		constexpr auto condition = 0x80;
		constexpr auto hidden = 0x98;
		constexpr auto flags = 0x9c;
		constexpr auto steamItem = 0xa0;
		constexpr auto steamDlc = 0xa8;
		constexpr auto Parent = 0xb0;
		constexpr auto worldModelPrefab = 0xb8;
		constexpr auto isRedirectOf = 0xc0;
		constexpr auto redirectVendingBehaviour = 0xc8;
		constexpr auto itemMods = 0xd0;
		constexpr auto Traits = 0xd8;
		constexpr auto skins = 0xe0;
		constexpr auto _skins2 = 0xe8;
		constexpr auto panel = 0xf0;
		constexpr auto ItemModWearablek__BackingField = 0xf8;
		constexpr auto isHoldablek__BackingField = 0x100;
		constexpr auto isUsablek__BackingField = 0x101;
		constexpr auto CraftableWithSkink__BackingField = 0x102;
		constexpr auto Children = 0x108;

		constexpr auto get_skins2 = 0xa8beb0;
		constexpr auto InvalidateWorkshopSkinCache = 0xa8bc00;
		constexpr auto get_Blueprint = 0xa8bd10;
		constexpr auto get_craftingStackable = 0xa8bdd0;
		constexpr auto HasFlag = 0xa8b980;
		constexpr auto Initialize = 0xa8b990;
		constexpr auto GetDisplayName = 0xa8b880;
		constexpr auto GetDescriptionText = 0xa8b7b0;
		constexpr auto FindIconSprite = 0xa8b450;
		constexpr auto get_isWearable = 0xa8be50;
		constexpr auto get_ItemModWearable = 0xa8bdc0;
		constexpr auto set_ItemModWearable = 0xa8c0c0;
		constexpr auto get_isHoldable = 0xa8be30;
		constexpr auto set_isHoldable = 0xa8c0d0;
		constexpr auto get_isUsable = 0xa8be40;
		constexpr auto set_isUsable = 0xa8c0e0;
		constexpr auto get_HasSkins = 0xa8bd60;
		constexpr auto get_CraftableWithSkin = 0xa8bd50;
		constexpr auto set_CraftableWithSkin = 0xa8c0b0;
		constexpr auto ctor = 0xa8bca0;
		constexpr auto Initializeb__44_0 = 0xa8bc20;
	};

	namespace PlayerInput {
		constexpr auto state = 0x20;
		constexpr auto hadInputBuffer = 0x28;
		constexpr auto bodyRotation = 0x2c;
		constexpr auto bodyAngles = 0x3c;
		constexpr auto headRotation = 0x48;
		constexpr auto headAngles = 0x58;
		constexpr auto recoilAngles = 0x64;
		constexpr auto viewDelta = 0x70;
		constexpr auto headLerp = 0x78;
		constexpr auto mouseWheelUp = 0x7c;
		constexpr auto mouseWheelDn = 0x80;
		constexpr auto autorun = 0x84;
		constexpr auto toggleDuck = 0x85;
		constexpr auto toggleAds = 0x86;
		constexpr auto lastAdsEntity = 0x88;
		constexpr auto pendingMouseDelta = 0x8c;
		constexpr auto offsetAngles = 0x98;
		constexpr auto ignoredButtons = 0xa4;
		constexpr auto hasKeyFocus = 0xa8;

		constexpr auto OnDisable = 0xc094a0;
		constexpr auto FrameUpdate = 0xc08640;
		constexpr auto CanToggleAds = 0xc08060;
		constexpr auto Flip = 0xc084d0;
		constexpr auto ResetMouseDelta = 0xc09520;
		constexpr auto AddMouseDelta = 0xc068c0;
		constexpr auto AdjustMouseMovement = 0xc06b90;
		constexpr auto UpdateViewAngles = 0xc09720;
		constexpr auto ApplyViewAngles = 0xc06dd0;
		constexpr auto SetViewVars = 0xc09600;
		constexpr auto FinalizeRecoil = 0xc082f0;
		constexpr auto ResetOffsetAngles = 0xc09590;
		constexpr auto ClientAngles = 0xc082c0;
		constexpr auto ClientLookVars = 0xc082d0;
		constexpr auto HeadAngles = 0xc08a90;
		constexpr auto HeadLookVars = 0xc08aa0;
		constexpr auto ModifyInputState = 0xc09410;
		constexpr auto IsButtonDownNative = 0xc08f10;
		constexpr auto BuildInputState = 0xc07970;
		constexpr auto IsAiming = 0xc08dc0;
		constexpr auto UpdateButton = 0xc09690;
		constexpr auto IgnoreCurrentButtons = 0xc08ac0;
		constexpr auto get_hasOnlyPartialKeyInput = 0xc09a30;
		constexpr auto get_hasNoKeyInput = 0xc098a0;
		constexpr auto UpdateKeyFocus = 0xc09700;
		constexpr auto IgnoreCurrentKeys = 0xc08bd0;
		constexpr auto ctor = 0xc09830;
	};

	namespace PlayerModel {
		constexpr auto pm_downlimit = 0x4;
		constexpr auto pm_upspine = 0x8;
		constexpr auto pm_downspine = 0xc;
		constexpr auto pm_lookoffset = 0x10;
		constexpr auto pm_anglesmoothspeed = 0x1c;
		constexpr auto pm_nohold = 0x20;
		constexpr auto pm_ladder = 0x24;
		constexpr auto pm_minweight = 0x28;
		constexpr auto _smoothAimWeight = 0x18;
		constexpr auto _smoothVelocity = 0x1c;
		constexpr auto _smoothlookAngle = 0x20;
		constexpr auto allowMountedHeadLook = 0x2c;
		constexpr auto smoothLookDir = 0x30;
		constexpr auto lastSafeLookDir = 0x3c;
		constexpr auto Shoulders = 0x48;
		constexpr auto AdditionalSpineBones = 0x50;
		constexpr auto FinishedLegWearables = 0x30;
		constexpr auto LegParts = 0x58;
		constexpr auto fakeSpineBones = 0x60;
		constexpr auto extraLeanBack = 0x68;
		constexpr auto drawState = 0x6c;
		constexpr auto timeInArmsMode = 0x70;
		constexpr auto speed = 0x38;
		constexpr auto acceleration = 0x3c;
		constexpr auto rotationYaw = 0x40;
		constexpr auto forward = 0x44;
		constexpr auto right = 0x48;
		constexpr auto up = 0x4c;
		constexpr auto ducked = 0x50;
		constexpr auto grounded = 0x54;
		constexpr auto crawling = 0x58;
		constexpr auto waterlevel = 0x5c;
		constexpr auto attack = 0x60;
		constexpr auto attack_alt = 0x64;
		constexpr auto deploy = 0x68;
		constexpr auto reload = 0x6c;
		constexpr auto throwWeapon = 0x70;
		constexpr auto holster = 0x74;
		constexpr auto aiming = 0x78;
		constexpr auto onLadder = 0x7c;
		constexpr auto posing = 0x80;
		constexpr auto poseType = 0x84;
		constexpr auto relaxGunPose = 0x88;
		constexpr auto vehicle_aim_yaw = 0x8c;
		constexpr auto vehicle_aim_speed = 0x90;
		constexpr auto onPhone = 0x94;
		constexpr auto usePoseTransition = 0x98;
		constexpr auto leftFootIK = 0x9c;
		constexpr auto rightFootIK = 0xa0;
		constexpr auto vehicleSteering = 0xa4;
		constexpr auto sitReaction = 0xa8;
		constexpr auto forwardReaction = 0xac;
		constexpr auto rightReaction = 0xb0;
		constexpr auto collision = 0x78;
		constexpr auto censorshipCube = 0x80;
		constexpr auto censorshipCubeBreasts = 0x88;
		constexpr auto jawBone = 0x90;
		constexpr auto neckBone = 0x98;
		constexpr auto headBone = 0xa0;
		constexpr auto eyeController = 0xa8;
		constexpr auto blinkController = 0xb0;
		constexpr auto SpineBones = 0xb8;
		constexpr auto leftFootBone = 0xc0;
		constexpr auto rightFootBone = 0xc8;
		constexpr auto leftHandPropBone = 0xd0;
		constexpr auto rightHandPropBone = 0xd8;
		constexpr auto rightHandTarget = 0xe0;
		constexpr auto leftHandTargetPosition = 0xec;
		constexpr auto leftHandTargetRotation = 0xf8;
		constexpr auto rightHandTargetPosition = 0x108;
		constexpr auto rightHandTargetRotation = 0x114;
		constexpr auto steeringTargetDegrees = 0x124;
		constexpr auto rightFootTargetPosition = 0x128;
		constexpr auto rightFootTargetRotation = 0x134;
		constexpr auto leftFootTargetPosition = 0x144;
		constexpr auto leftFootTargetRotation = 0x150;
		constexpr auto CinematicAnimationController = 0x160;
		constexpr auto DefaultAvatar = 0x168;
		constexpr auto CinematicAvatar = 0x170;
		constexpr auto DefaultHoldType = 0x178;
		constexpr auto SleepGesture = 0x180;
		constexpr auto CrawlToIncapacitatedGesture = 0x188;
		constexpr auto StandToIncapacitatedGesture = 0x190;
		constexpr auto CurrentGesture = 0x198;
		constexpr auto MaleSkin = 0x1a0;
		constexpr auto FemaleSkin = 0x1a8;
		constexpr auto subsurfaceProfile = 0x1b0;
		constexpr auto voiceVolume = 0x1b8;
		constexpr auto skinColor = 0x1bc;
		constexpr auto skinNumber = 0x1c0;
		constexpr auto meshNumber = 0x1c4;
		constexpr auto hairNumber = 0x1c8;
		constexpr auto skinType = 0x1cc;
		constexpr auto movementSounds = 0x1d0;
		constexpr auto showSash = 0x1d8;
		constexpr auto tempPoseType = 0x1dc;
		constexpr auto underwearSkin = 0x1e0;
		constexpr auto overrideSkinSeedk__BackingField = 0x1e8;
		constexpr auto AimAnglesk__BackingField = 0x1f0;
		constexpr auto LookAnglesk__BackingField = 0x200;
		constexpr auto modelState = 0x210;
		constexpr auto position = 0x218;
		constexpr auto velocity = 0x224;
		constexpr auto speedOverride = 0x230;
		constexpr auto newVelocity = 0x23c;
		constexpr auto rotation = 0x248;
		constexpr auto mountedRotation = 0x258;
		constexpr auto smoothLeftFootIK = 0x268;
		constexpr auto smoothRightFootIK = 0x274;
		constexpr auto drawShadowOnly = 0x280;
		constexpr auto isIncapacitated = 0x281;
		constexpr auto flinchLocation = 0x284;
		constexpr auto visible = 0x288;
		constexpr auto nameTag = 0x290;
		constexpr auto animatorNeedsWarmup = 0x298;
		constexpr auto isLocalPlayer = 0x299;
		constexpr auto aimSoundDef = 0x2a0;
		constexpr auto aimEndSoundDef = 0x2a8;
		constexpr auto InGesture = 0x2b0;
		constexpr auto CurrentGestureConfig = 0x2b8;
		constexpr auto InCinematic = 0x2c0;
		constexpr auto defaultAnimatorController = 0x2c8;
		constexpr auto _multiMesh = 0x2d0;
		constexpr auto _animator = 0x2d8;
		constexpr auto _lodGroup = 0x2e0;
		constexpr auto _currentGesture = 0x2e8;
		constexpr auto holdTypeLock = 0x2f0;
		constexpr auto hasHeldEntity = 0x2f4;
		constexpr auto wasMountedRightAim = 0x2f5;
		constexpr auto cachedMask = 0x2f8;
		constexpr auto cachedConstructionMask = 0x2fc;
		constexpr auto WorkshopHeldEntity = 0x300;
		constexpr auto wasCrawling = 0x308;
		constexpr auto mountedSpineLookWeight = 0x30c;
		constexpr auto mountedAnimSpeed = 0x310;
		constexpr auto preserveBones = 0x314;
		constexpr auto downLimitOverride = 0x318;
		constexpr auto IsNpck__BackingField = 0x320;
		constexpr auto timeSinceReactionStart = 0x324;
		constexpr auto timeSinceLeftFootTest = 0x328;
		constexpr auto cachedLeftFootPos = 0x32c;
		constexpr auto cachedLeftFootNormal = 0x338;
		constexpr auto timeSinceRightFootTest = 0x344;
		constexpr auto cachedRightFootPos = 0x348;
		constexpr auto cachedRightFootNormal = 0x354;

		constexpr auto SetMountedLookAtOverride = 0xc15fc0;
		constexpr auto SpineIk = 0xc163e0;
		constexpr auto ParentArmsToCamera = 0xc141d0;
		constexpr auto OnAnimatorIK = 0xc13840;
		constexpr auto HandIK = 0xc11ea0;
		constexpr auto FootIK = 0xc0e6b0;
		constexpr auto HeadIK = 0xc12300;
		constexpr auto get_ShouldDoLegs = 0xc1bcd0;
		constexpr auto get_ShouldShowHands = 0xc1bd50;
		constexpr auto ClearLegs = 0xc0d520;
		constexpr auto RebuildLegs = 0xc14b80;
		constexpr auto InitializeLegSpineBones = 0xc129e0;
		constexpr auto UpdateLegsBeforeRender = 0xc17bf0;
		constexpr auto UpdateLegsDisable = 0xc18ae0;
		constexpr auto AddLegRenderer = 0xc0ca50;
		constexpr auto SwapLegBone = 0xc16dd0;
		constexpr auto GetFlat = 0xc11310;
		constexpr auto RebuildAll = 0xc14780;
		constexpr auto get_overrideSkinSeed = 0xc1c030;
		constexpr auto set_overrideSkinSeed = 0xc1c070;
		constexpr auto get_IsFemale = 0xc1bc80;
		constexpr auto get_SkinSet = 0xc1be30;
		constexpr auto get_AimAngles = 0xc1bb30;
		constexpr auto set_AimAngles = 0xc1c040;
		constexpr auto get_LookAngles = 0xc1bcc0;
		constexpr auto set_LookAngles = 0xc1c060;
		constexpr auto get_GestureAllowsSpineMovement = 0xc1bbe0;
		constexpr auto get_GestureAllowsRootMotion = 0xc1bb40;
		constexpr auto get_IsFirstPerson = 0xc1bc90;
		constexpr auto get_IsNpc = 0xc1bcb0;
		constexpr auto set_IsNpc = 0xc1c050;
		constexpr auto get_multiMesh = 0xc1bf90;
		constexpr auto get_animator = 0xc1be50;
		constexpr auto get_lodGroup = 0xc1bef0;
		constexpr auto GetTargetVelocity = 0xc11d40;
		constexpr auto Awake = 0xc0d480;
		constexpr auto OnEnable = 0xc13c60;
		constexpr auto OnDisable = 0xc13970;
		constexpr auto SetDefaultAnimatorWeights = 0xc158a0;
		constexpr auto UpdateMultiMesh = 0xc19180;
		constexpr auto UpdateCensorship = 0xc17310;
		constexpr auto UpdateCollider = 0xc17790;
		constexpr auto UpdateModelState = 0xc19130;
		constexpr auto UpdatePosition = 0xc19bf0;
		constexpr auto UpdateRotation = 0xc19d10;
		constexpr auto UpdateLocalVelocity = 0xc19060;
		constexpr auto UpdateVelocity = 0xc1a690;
		constexpr auto UpdateParameters = 0xc19310;
		constexpr auto UpdateFrom = 0xc17a00;
		constexpr auto UpdateGlobalShaderConstants = 0xc17a60;
		constexpr auto LateCycle = 0xc131c0;
		constexpr auto FrameUpdate = 0xc10920;
		constexpr auto FrameUpdate_Default = 0xc0ff40;
		constexpr auto FrameUpdate_Sleeping = 0xc10650;
		constexpr auto FrameUpdate_Incapacitated = 0xc100b0;
		constexpr auto FrameUpdate_OnLadder = 0xc10380;
		constexpr auto GetAim360 = 0xc110a0;
		constexpr auto UpdateVehicleAim360 = 0xc1a1a0;
		constexpr auto ResetCurrentState = 0xc15750;
		constexpr auto DoAimingSounds = 0xc0de50;
		constexpr auto SetAimSounds = 0xc15860;
		constexpr auto SetMountedLookAtWeight = 0xc15fd0;
		constexpr auto SetMountedAnimationSpeed = 0xc15fb0;
		constexpr auto UpdateLocalPlayerPosition = 0xc18d10;
		constexpr auto Attack = 0xc0d400;
		constexpr auto AltAttack = 0xc0d0c0;
		constexpr auto Deploy = 0xc0dda0;
		constexpr auto Reload = 0xc154d0;
		constexpr auto Holster = 0xc12960;
		constexpr auto Flinch = 0xc0e650;
		constexpr auto SetReactionAnim = 0xc15fe0;
		constexpr auto OnReactionEnded = 0xc141a0;
		constexpr auto Throw = 0xc17100;
		constexpr auto Gesture = 0xc10d10;
		constexpr auto FadeInGestureUpperBodyLayer = 0xc0e0b0;
		constexpr auto FadeOutGestureUpperBodyLayer = 0xc0e3a0;
		constexpr auto FadeInGestureFullBodyLayer = 0xc0df90;
		constexpr auto FadeOutGestureFullBodyLayer = 0xc0e1d0;
		constexpr auto AnimatorWarmup = 0xc0d170;
		constexpr auto AlwaysAnimate = 0xc0d140;
		constexpr auto SetHoldType = 0xc15c30;
		constexpr auto SetHasHeldEntity = 0xc15c20;
		constexpr auto FadeOutGestureLayer = 0xc0e330;
		constexpr auto SetGesture = 0xc159d0;
		constexpr auto FadeOutPlayerGestureLayers = 0xc0e500;
		constexpr auto StopGesture = 0xc16cd0;
		constexpr auto PlayCinematic = 0xc145f0;
		constexpr auto StopCinematic = 0xc16c70;
		constexpr auto SetSpeedOverride = 0xc163c0;
		constexpr auto GetReplacementUnderwear = 0xc11c80;
		constexpr auto RemoveUnderwearParts = 0xc15620;
		constexpr auto Clear = 0xc0d680;
		constexpr auto Rebuild = 0xc14f40;
		constexpr auto AddPart = 0xc0cde0;
		constexpr auto RemovePart = 0xc15550;
		constexpr auto HasPart = 0xc12240;
		constexpr auto IsBarefoot = 0xc13130;
		constexpr auto GetSkinColor = 0xc11cc0;
		constexpr auto SetSkinProperties = 0xc162a0;
		constexpr auto RefreshUnderwear = 0xc15140;
		constexpr auto ForceModelSeed = 0xc0fd10;
		constexpr auto FindBone = 0xc0e620;
		constexpr auto GetBones = 0xc112e0;
		constexpr auto GetFootPlacement = 0xc11350;
		constexpr auto ApplyVisibility = 0xc0d1d0;
		constexpr auto ToggleUpdateOffscreen = 0xc171a0;
		constexpr auto OnParentDestroying = 0xc140a0;
		constexpr auto WorkshopPreviewSetup = 0xc1aaa0;
		constexpr auto ctor = 0xc1b980;
		constexpr auto cctor = 0xc1b440;
	};

	namespace ProtoBuf_PlayerTeam {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto teamID = 0x18;
		constexpr auto teamName = 0x20;
		constexpr auto teamLeader = 0x28;
		constexpr auto members = 0x30;
		constexpr auto teamLifetime = 0x38;
		constexpr auto mapNote = 0x40;

		constexpr auto ResetToPool = 0x22a47e0;
		constexpr auto Dispose = 0x22a43e0;
		constexpr auto EnterPool = 0x11ba760;
		constexpr auto LeavePool = 0x11ba790;
		constexpr auto CopyTo = 0x22a28f0;
		constexpr auto Copy = 0x22a2b30;
		constexpr auto Deserialize = 0x22a38e0;
		constexpr auto DeserializeLengthDelimited = 0x22a2bb0;
		constexpr auto DeserializeLength = 0x22a3060;
		constexpr auto FromProto = 0x22a4460;
		constexpr auto WriteToStream = 0x22a56a0;
		constexpr auto WriteToStreamDelta = 0x22a56c0;
		constexpr auto ReadFromStream = 0x22a47c0;
		constexpr auto SerializeDelta = 0x22a4c90;
		constexpr auto Serialize = 0x22a52b0;
		constexpr auto ToProtoBytes = 0x22a5690;
		constexpr auto ToProto = 0x22a56a0;
		constexpr auto SerializeToBytes = 0x22a51a0;
		constexpr auto SerializeLengthDelimited = 0x22a50f0;
		constexpr auto ctor = 0x1177180;
	};

	namespace PlayerInventory {
		constexpr auto containerMain = 0x20;
		constexpr auto containerBelt = 0x28;
		constexpr auto containerWear = 0x30;
		constexpr auto crafting = 0x38;
		constexpr auto loot = 0x40;

		constexpr auto OnRpcMessage = 0xc0a890;
		constexpr auto Initialize = 0xc0a4e0;
		constexpr auto DoDestroy = 0xc09cc0;
		constexpr auto ClientInit = 0xc09c40;
		constexpr auto UpdatedItemContainer = 0xc0ace0;
		constexpr auto FindItemUID = 0xc0a300;
		constexpr auto FindItemID = 0xc0a020;
		constexpr auto FindBySubEntityID = 0xc09da0;
		constexpr auto FindItemIDs = 0xc0a210;
		constexpr auto FindContainer = 0xc09e70;
		constexpr auto GetContainer = 0xc0a460;
		constexpr auto Load = 0xc0a740;
		constexpr auto GetAmount = 0xc0a3e0;
		constexpr auto AllItems = 0xc09b70;
		constexpr auto AllItemsNoAlloc = 0xc09aa0;
		constexpr auto FindAmmo = 0xc09d50;
		constexpr auto HasAmmo = 0xc0a480;
		constexpr auto ctor = 0xc0aed0;
	};

	namespace ItemContainer {
		constexpr auto flags = 0x10;
		constexpr auto allowedContents = 0x14;
		constexpr auto onlyAllowedItems = 0x18;
		constexpr auto availableSlots = 0x20;
		constexpr auto capacity = 0x28;
		constexpr auto uid = 0x2c;
		constexpr auto dirty = 0x30;
		constexpr auto itemList = 0x38;
		constexpr auto temperature = 0x40;
		constexpr auto parent = 0x48;
		constexpr auto playerOwner = 0x50;
		constexpr auto entityOwner = 0x58;
		constexpr auto isServer = 0x60;
		constexpr auto maxStackSize = 0x64;

		constexpr auto HasFlag = 0xa897f0;
		constexpr auto SetFlag = 0xa8a8a0;
		constexpr auto IsLocked = 0xa899c0;
		constexpr auto PlayerItemInputBlocked = 0xa8a4e0;
		constexpr auto get_HasLimitedAllowedItems = 0xa8ac90;
		constexpr auto OnChanged = 0xa8a440;
		constexpr auto ClientInitialize = 0xa88920;
		constexpr auto FindItemByUID = 0xa88ed0;
		constexpr auto IsFull = 0xa89970;
		constexpr auto IsEmpty = 0xa89930;
		constexpr auto CanAccept = 0xa887f0;
		constexpr auto GetMaxTransferAmount = 0xa89490;
		constexpr auto SetOnlyAllowedItem = 0xa8a8c0;
		constexpr auto SetOnlyAllowedItems = 0xa8a980;
		constexpr auto Insert = 0xa89800;
		constexpr auto SlotTaken = 0xa8ab10;
		constexpr auto GetSlot = 0xa89650;
		constexpr auto FindPosition = 0xa891c0;
		constexpr auto Clear = 0xa88840;
		constexpr auto Kill = 0xa899d0;
		constexpr auto GetAmount = 0xa89310;
		constexpr auto FindItemByItemID = 0xa88d60;
		constexpr auto FindItemsByItemName = 0xa89070;
		constexpr auto FindBySubEntityID = 0xa88b00;
		constexpr auto FindItemsByItemID = 0xa88fc0;
		constexpr auto Save = 0xa8a4f0;
		constexpr auto Load = 0xa89c90;
		constexpr auto GetOwnerPlayer = 0x5f4a10;
		constexpr auto ContainerMaxStackSize = 0xa88960;
		constexpr auto FindAmmo = 0xa88a40;
		constexpr auto HasAmmo = 0xa89720;
		constexpr auto GetAmmoAmount = 0xa89250;
		constexpr auto TotalItemAmount = 0xa8ab30;
		constexpr auto ContentsHash = 0xa88970;
		constexpr auto FindContainer = 0xa88c70;
		constexpr auto CanAcceptItem = 0xa88380;
		constexpr auto ctor = 0xa8abe0;
	};

	namespace Item {
		constexpr auto amountOverride = 0x10;
		constexpr auto _condition = 0x18;
		constexpr auto _maxCondition = 0x1c;
		constexpr auto info = 0x20;
		constexpr auto uid = 0x28;
		constexpr auto dirty = 0x2c;
		constexpr auto amount = 0x30;
		constexpr auto position = 0x34;
		constexpr auto busyTime = 0x38;
		constexpr auto removeTime = 0x3c;
		constexpr auto fuel = 0x40;
		constexpr auto isServer = 0x44;
		constexpr auto instanceData = 0x48;
		constexpr auto skin = 0x50;
		constexpr auto name = 0x58;
		constexpr auto text = 0x60;
		constexpr auto cookTimeLeft = 0x68;
		constexpr auto progressBar = 0x6c;
		constexpr auto OnDirty = 0x70;
		constexpr auto flags = 0x78;
		constexpr auto contents = 0x80;
		constexpr auto parent = 0x88;
		constexpr auto worldEnt = 0x90;
		constexpr auto heldEntity = 0xa0;

		constexpr auto UpdateAmountDisplay = 0xa9aca0;
		constexpr auto FormatAmount = 0xa99720;
		constexpr auto set_condition = 0xa9bc60;
		constexpr auto get_condition = 0x84e3a0;
		constexpr auto set_maxCondition = 0xa9bce0;
		constexpr auto get_maxCondition = 0x84e370;
		constexpr auto get_maxConditionNormalized = 0xa9ba10;
		constexpr auto get_conditionNormalized = 0xa9b5a0;
		constexpr auto set_conditionNormalized = 0xa9bbc0;
		constexpr auto get_hasCondition = 0xa9b6a0;
		constexpr auto get_isBroken = 0xa9b8e0;
		constexpr auto get_despawnMultiplier = 0xa9b5e0;
		constexpr auto get_blueprintTargetDef = 0xa9b570;
		constexpr auto get_blueprintTarget = 0xa9b590;
		constexpr auto set_blueprintTarget = 0xa9bb30;
		constexpr auto get_blueprintAmount = 0xa9b560;
		constexpr auto set_blueprintAmount = 0xa9bb20;
		constexpr auto IsBlueprint = 0xa99c60;
		constexpr auto add_OnDirty = 0xa9b4a0;
		constexpr auto remove_OnDirty = 0xa9ba80;
		constexpr auto HasFlag = 0xa99c50;
		constexpr auto SetFlag = 0xa9a7a0;
		constexpr auto IsOn = 0xa99e90;
		constexpr auto IsOnFire = 0xa99e80;
		constexpr auto IsCooking = 0xa99e40;
		constexpr auto IsLocked = 0xa99e50;
		constexpr auto get_parentItem = 0xa9ba40;
		constexpr auto MarkDirty = 0xa9a2e0;
		constexpr auto OnChanged = 0xa9a3d0;
		constexpr auto CollectedForCrafting = 0x45a520;
		constexpr auto ReturnedFromCancelledCraft = 0x45a520;
		constexpr auto IsChildContainer = 0xa99cb0;
		constexpr auto IsBusy = 0xa99c80;
		constexpr auto BusyFor = 0xa992a0;
		constexpr auto Remove = 0xa9a580;
		constexpr auto DoRemove = 0xa99560;
		constexpr auto SwitchOnOff = 0xa9a930;
		constexpr auto LockUnlock = 0xa9a260;
		constexpr auto get_temperature = 0xa9ba60;
		constexpr auto GetOwnerPlayer = 0xa99a60;
		constexpr auto CanBeHeld = 0xa992d0;
		constexpr auto CanStack = 0xa99310;
		constexpr auto IsValid = 0xa99ea0;
		constexpr auto SetWorldEntity = 0xa9a7c0;
		constexpr auto OnMovedToWorld = 0xa9a4f0;
		constexpr auto GetWorldEntity = 0xa99b10;
		constexpr auto GetHeldEntity = 0xa99a40;
		constexpr auto BeltBarSelect = 0xa99200;
		constexpr auto GetTotalUISlots = 0xa99a80;
		constexpr auto GetFilledUISlots = 0xa999b0;
		constexpr auto HasAmmo = 0xa99b30;
		constexpr auto FindAmmo = 0xa995c0;
		constexpr auto GetAmmoAmount = 0xa99880;
		constexpr auto ToString = 0xa9a9b0;
		constexpr auto FindItem = 0xa99700;
		constexpr auto MaxStackable = 0xa9a340;
		constexpr auto get_iconSprite = 0xa9b740;
		constexpr auto get_isLoadingIconSprite = 0xa9b910;
		constexpr auto get_Traits = 0xa9b540;
		constexpr auto Save = 0xa9a5e0;
		constexpr auto Load = 0xa99eb0;
		constexpr auto ctor = 0xa9b480;
		constexpr auto cctor = 0xa9b3b0;
		constexpr auto get_iconSpriteb__97_0 = 0xa9ac90;
		constexpr auto get_isLoadingIconSpriteb__99_0 = 0xa9ac90;
	};

	namespace Model {
		constexpr auto collision = 0x18;
		constexpr auto rootBone = 0x20;
		constexpr auto headBone = 0x28;
		constexpr auto eyeBone = 0x30;
		constexpr auto animator = 0x38;
		constexpr auto skeleton = 0x40;
		constexpr auto boneTransforms = 0x48;
		constexpr auto boneNames = 0x50;
		constexpr auto boneDict = 0x58;
		constexpr auto skin = 0x60;
		constexpr auto _lodGroup = 0x68;

		constexpr auto OnEnable = 0x84d900;
		constexpr auto BuildBoneDictionary = 0x84d070;
		constexpr auto GetSkin = 0x658d40;
		constexpr auto FindBoneInternal = 0x84d160;
		constexpr auto FindBone = 0x84d1f0;
		constexpr auto FindBoneID = 0x84d120;
		constexpr auto GetBones = 0x84d400;
		constexpr auto FindClosestBone = 0x84d260;
		constexpr auto get_lodGroup = 0x84e0f0;
		constexpr auto OnDisable = 0x84d7d0;
		constexpr auto SyncBones = 0x84dcd0;
		constexpr auto Trigger = 0x84e040;
		constexpr auto GetTransform = 0x84d430;
		constexpr auto ApplyVisibility = 0x84cee0;
		constexpr auto PreProcess = 0x84d910;
		constexpr auto ctor = 0x3ec250;
	};

	namespace MedicalTool {
		constexpr auto healDurationSelf = 0x280;
		constexpr auto healDurationOther = 0x284;
		constexpr auto healDurationOtherWounded = 0x288;
		constexpr auto maxDistanceOther = 0x28c;
		constexpr auto canUseOnOther = 0x290;
		constexpr auto canRevive = 0x291;
		constexpr auto useTarget = 0x298;
		constexpr auto resetTime = 0x2a0;

		constexpr auto OnRpcMessage = 0xa54820;
		constexpr auto GetTarget = 0xa540c0;
		constexpr auto AnyPressed = 0xa53ff0;
		constexpr auto OnInput = 0xa54470;
		constexpr auto OnViewmodelEvent = 0xa54bf0;
		constexpr auto Reset = 0xa54e00;
		constexpr auto OnDeploy = 0xa54410;
		constexpr auto OnHolstered = 0xa54440;
		constexpr auto ProcessSpectatorViewmodelEvent = 0xa54d40;
		constexpr auto ctor = 0xa54e20;
	};

	namespace HeldEntity {
		constexpr auto _punches = 0x168;
		constexpr auto punchAdded = 0x170;
		constexpr auto lastPunchTime = 0x17c;
		constexpr auto worldModelAnimator = 0x180;
		constexpr auto thirdPersonDeploySound = 0x188;
		constexpr auto thirdPersonAimSound = 0x190;
		constexpr auto thirdPersonAimEndSound = 0x198;
		constexpr auto viewModel = 0x1a0;
		constexpr auto isDeployed = 0x1a8;
		constexpr auto nextExamineTime = 0x1ac;
		constexpr auto handBone = 0x1b0;
		constexpr auto HoldAnimationOverride = 0x1b8;
		constexpr auto isBuildingTool = 0x1c0;
		constexpr auto hostileScore = 0x1c4;
		constexpr auto holsterInfo = 0x1c8;
		constexpr auto HeldCameraMode = 0x1d0;
		constexpr auto FirstPersonArmOffset = 0x1d4;
		constexpr auto FirstPersonArmRotation = 0x1e0;
		constexpr auto FirstPersonRotationStrength = 0x1ec;
		constexpr auto ownerItemUID = 0x1f0;

		constexpr auto OnRpcMessage = 0x7f2a90;
		constexpr auto AddPunch = 0x7f1ce0;
		constexpr auto CL_Punch = 0x7f1db0;
		constexpr auto DoRecoilCompensation = 0x45a520;
		constexpr auto GetAddedPunch = 0x7f20e0;
		constexpr auto SimPunches = 0x7f3280;
		constexpr auto ClientInit = 0x7f1e60;
		constexpr auto GetFovOverride = 0x7f2100;
		constexpr auto DoNetworkDestroy = 0x7f1f30;
		constexpr auto PostLateClientCycle = 0x45a520;
		constexpr auto PostNetworkUpdate = 0x7f2f40;
		constexpr auto UpdateHolsteredOffset = 0x7f3750;
		constexpr auto EditViewAngles = 0x45a520;
		constexpr auto ClampPitch = 0x45a520;
		constexpr auto OnFrame = 0x7f2900;
		constexpr auto OnInput = 0x45a520;
		constexpr auto Examine = 0x7f1f70;
		constexpr auto OnDeploy = 0x7f2640;
		constexpr auto OnDeployed = 0x7f28f0;
		constexpr auto OnHolster = 0x7f2920;
		constexpr auto OnHolstered = 0x7f2a80;
		constexpr auto OnViewmodelEvent = 0x45a520;
		constexpr auto OnReliableEvent = 0x45a520;
		constexpr auto ModifyCamera = 0x45a520;
		constexpr auto ShouldDestroyImmediately = 0x5c2350;
		constexpr auto UpdatePlayerModel = 0x7f3f50;
		constexpr auto ProcessPlayerModel = 0x45a520;
		constexpr auto GetHoldAnimations = 0x7f22f0;
		constexpr auto GetMovementMultiplier = 0x5e89f0;
		constexpr auto OnSpawnedForWorkshopPreview = 0x45a520;
		constexpr auto HeldEntityBlocksMovement = 0x59bd30;
		constexpr auto ProcessSpectatorViewmodel = 0x45a520;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x7f31d0;
		constexpr auto get_hostile = 0x7f4100;
		constexpr auto LightsOn = 0x7f25d0;
		constexpr auto IsDeployed = 0x7f25c0;
		constexpr auto GetOwnerPlayer = 0x7f2500;
		constexpr auto GetOwnerConnection = 0x7f2310;
		constexpr auto CanBeUsedInWater = 0x59bd30;
		constexpr auto BlocksGestures = 0x59bd30;
		constexpr auto GetOwnerItem = 0x7f2420;
		constexpr auto GetItem = 0x7f2300;
		constexpr auto GetOwnerItemDefinition = 0x7f23a0;
		constexpr auto IsInstrument = 0x59bd30;
		constexpr auto Load = 0x7f25e0;
		constexpr auto ctor = 0x7f4010;
		constexpr auto cctor = 0x7f3fd0;
	};

	namespace UnityEngine_GUIContent {
		constexpr auto m_Text = 0x10;
		constexpr auto m_Image = 0x18;
		constexpr auto m_Tooltip = 0x20;
		constexpr auto s_Image = 0x8;
		constexpr auto s_TextImage = 0x10;
		constexpr auto none = 0x18;

		constexpr auto get_text = 0x1ac2580;
		constexpr auto set_text = 0x5e0ff0;
		constexpr auto set_image = 0x5f84d0;
		constexpr auto get_tooltip = 0x1cb53b0;
		constexpr auto set_tooltip = 0x5a5a90;
		constexpr auto ctor = 0x1cb5320;
		constexpr auto Temp = 0x1cb4c00;
		constexpr auto ClearStaticCache = 0x1cb4aa0;
		constexpr auto cctor = 0x1cb4ed0;
	};

	namespace BaseCombatEntity {
		constexpr auto __menuOption_Menu_Pickup = 0x168;
		constexpr auto skeletonProperties = 0x1c0;
		constexpr auto baseProtection = 0x1c8;
		constexpr auto startHealth = 0x1d0;
		constexpr auto pickup = 0x1d8;
		constexpr auto repair = 0x1f8;
		constexpr auto ShowHealthInfo = 0x220;
		constexpr auto lifestate = 0x224;
		constexpr auto sendsHitNotification = 0x228;
		constexpr auto sendsMeleeHitNotification = 0x229;
		constexpr auto markAttackerHostile = 0x22a;
		constexpr auto _health = 0x22c;
		constexpr auto _maxHealth = 0x230;
		constexpr auto faction = 0x234;
		constexpr auto deathTime = 0x238;
		constexpr auto lastNotifyFrame = 0x23c;

		constexpr auto GetMenuOptions = 0x827270;
		constexpr auto get_HasMenuOptions = 0x828470;
		constexpr auto OnRpcMessage = 0x8279c0;
		constexpr auto HitNotify = 0x8275e0;
		constexpr auto ClientInit = 0x826c80;
		constexpr auto DisplayHealthInfo = 0x64c810;
		constexpr auto GetEyeTransform = 0x827150;
		constexpr auto OnLifeStateChanged = 0x827990;
		constexpr auto GetPickupCount = 0x8275b0;
		constexpr auto CanPickup = 0x826be0;
		constexpr auto OnPickedUp = 0x45a520;
		constexpr auto OnPickedUpPreItemMove = 0x45a520;
		constexpr auto Menu_Pickup = 0x827860;
		constexpr auto Menu_Pickup_TimeStart = 0x45a520;
		constexpr auto Menu_Pickup_If = 0x827840;
		constexpr auto BuildCost = 0x826b10;
		constexpr auto IsDead = 0x827790;
		constexpr auto IsAlive = 0x827780;
		constexpr auto GetFaction = 0x827260;
		constexpr auto IsFriendly = 0x59bd30;
		constexpr auto get_SecondsSinceDeath = 0x828530;
		constexpr auto get_healthFraction = 0x828550;
		constexpr auto ResetState = 0x828000;
		constexpr auto DestroyShared = 0x826d60;
		constexpr auto GetThreatLevel = 0x8275c0;
		constexpr auto PenetrationResistance = 0x827f70;
		constexpr auto ScaleDamage = 0x828100;
		constexpr auto SkeletonLookup = 0x828240;
		constexpr auto Load = 0x8277a0;
		constexpr auto get_health = 0x8275d0;
		constexpr auto set_health = 0x8285a0;
		constexpr auto Health = 0x8275d0;
		constexpr auto MaxHealth = 0x6aa420;
		constexpr auto StartHealth = 0x6aa500;
		constexpr auto StartMaxHealth = 0x8282f0;
		constexpr auto SetMaxHealth = 0x8281b0;
		constexpr auto DoHitNotify = 0x826d80;
		constexpr auto OnAttacked = 0x8278a0;
		constexpr auto ctor = 0x828310;
	};

	namespace InputState {
		constexpr auto current = 0x10;
		constexpr auto previous = 0x18;
		constexpr auto SwallowedButtons = 0x20;

		constexpr auto IsDown = 0x934350;
		constexpr auto WasDown = 0x934420;
		constexpr auto IsAnyDown = 0x934320;
		constexpr auto WasJustPressed = 0x934440;
		constexpr auto WasJustReleased = 0x934480;
		constexpr auto SwallowButton = 0x934410;
		constexpr auto AimAngle = 0x9340e0;
		constexpr auto MouseDelta = 0x934380;
		constexpr auto Flip = 0x934250;
		constexpr auto Clear = 0x9341a0;
		constexpr auto ctor = 0x9344c0;
	};

	namespace InputMessage {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto buttons = 0x14;
		constexpr auto aimAngles = 0x18;
		constexpr auto mouseDelta = 0x24;

		constexpr auto ResetToPool = 0x2278de0;
		constexpr auto Dispose = 0x2278ae0;
		constexpr auto EnterPool = 0x11ba760;
		constexpr auto LeavePool = 0x11ba790;
		constexpr auto CopyTo = 0x2277b40;
		constexpr auto Copy = 0x2277b80;
		constexpr auto Deserialize = 0x2278210;
		constexpr auto DeserializeLengthDelimited = 0x2277ea0;
		constexpr auto DeserializeLength = 0x2277f20;
		constexpr auto FromProto = 0x2278b60;
		constexpr auto WriteToStream = 0x22796b0;
		constexpr auto WriteToStreamDelta = 0x22796d0;
		constexpr auto ReadFromStream = 0x2278d20;
		constexpr auto SerializeDelta = 0x2278e80;
		constexpr auto Serialize = 0x2279440;
		constexpr auto ToProtoBytes = 0x22796a0;
		constexpr auto ToProto = 0x22796b0;
		constexpr auto SerializeToBytes = 0x2279330;
		constexpr auto SerializeLengthDelimited = 0x2279280;
		constexpr auto ctor = 0x1177180;
	};

	namespace BaseMountable {
		constexpr auto __menuOption_Menu_Mount = 0x240;
		constexpr auto eyePositionOverride = 0x298;
		constexpr auto eyeCenterOverride = 0x2a0;
		constexpr auto pitchClamp = 0x2a8;
		constexpr auto yawClamp = 0x2b0;
		constexpr auto canWieldItems = 0x2b8;
		constexpr auto relativeViewAngles = 0x2b9;
		constexpr auto mountAnchor = 0x2c0;
		constexpr auto mountPose = 0x2c8;
		constexpr auto maxMountDistance = 0x2cc;
		constexpr auto dismountPositions = 0x2d0;
		constexpr auto checkPlayerLosOnMount = 0x2d8;
		constexpr auto disableMeshCullingForPlayers = 0x2d9;
		constexpr auto allowHeadLook = 0x2da;
		constexpr auto modifiesPlayerCollider = 0x2db;
		constexpr auto customPlayerCollider = 0x2dc;
		constexpr auto mountSoundDef = 0x2f0;
		constexpr auto swapSoundDef = 0x2f8;
		constexpr auto dismountSoundDef = 0x300;
		constexpr auto mountTimeStatType = 0x308;
		constexpr auto allowedGestures = 0x30c;
		constexpr auto canDrinkWhileMounted = 0x310;
		constexpr auto allowSleeperMounting = 0x311;
		constexpr auto animateClothInLocalSpace = 0x312;
		constexpr auto MountedCameraMode = 0x314;
		constexpr auto isMobile = 0x318;
		constexpr auto SideLeanAmount = 0x31c;

		constexpr auto GetMenuOptions = 0xadc710;
		constexpr auto get_HasMenuOptions = 0xade7e0;
		constexpr auto OnRpcMessage = 0xadd500;
		constexpr auto CanHoldItems = 0xadbb10;
		constexpr auto GetMountedCameraMode = 0xadca70;
		constexpr auto DirectlyMountable = 0x5c2350;
		constexpr auto GetEyeOverride = 0xadc680;
		constexpr auto GetMountedBodyAngles = 0xadca20;
		constexpr auto ModifiesThirdPersonCamera = 0x59bd30;
		constexpr auto GetPitchClamp = 0x8d28f0;
		constexpr auto GetYawClamp = 0x8d2910;
		constexpr auto IsMounted = 0xadccd0;
		constexpr auto EyePositionForPlayer = 0xadc310;
		constexpr auto EyeCenterForPlayer = 0xadc210;
		constexpr auto WaterFactorForPlayer = 0xade610;
		constexpr auto MaxVelocity = 0xadce10;
		constexpr auto PlayerIsMounted = 0xaddb00;
		constexpr auto OnClientInput = 0x45a520;
		constexpr auto ForceUpdatePlayerModel = 0x59bd30;
		constexpr auto UpdatePlayerModel = 0xade040;
		constexpr auto ProcessPlayerModel = 0x45a520;
		constexpr auto SuppressHandsAnimationLayer = 0x59bd30;
		constexpr auto GetAnimationOverride = 0x59bd50;
		constexpr auto GetSpineLookAtWeight = 0x5e89f0;
		constexpr auto GetMountedAnimationSpeed = 0x8275c0;
		constexpr auto get_DisableLegsMeshAtExtremeViewAnglesInFirstPersonWithEyes = 0x5c2350;
		constexpr auto get_FirstPersonWithArmsEyesLerp = 0x6b8ec0;
		constexpr auto ModifyThirdPersonEyeOffset = 0xadcfd0;
		constexpr auto LockThirdPersonOffset = 0xadcda0;
		constexpr auto LocalPlayerIsMounted = 0xadcce0;
		constexpr auto VehicleParent = 0xade580;
		constexpr auto get_IsSummerDlcVehicle = 0x59bd30;
		constexpr auto IsInstrument = 0x59bd30;
		constexpr auto UpdatePlayerRotation = 0xade4d0;
		constexpr auto SetNetworkPosition = 0xade010;
		constexpr auto UpdatePlayerPosition = 0xade360;
		constexpr auto GetMountedRotation = 0xadcb40;
		constexpr auto GetMountedPosition = 0xadca80;
		constexpr auto PlayerMounted = 0xaddbe0;
		constexpr auto PlayerDismounted = 0xadd620;
		constexpr auto ClientOnPlayerDismounted = 0xadbb20;
		constexpr auto ClientOnPlayerMounted = 0xadbbc0;
		constexpr auto OverrideViewAngles = 0xadd5f0;
		constexpr auto DoPlayerMovement = 0xadbda0;
		constexpr auto HoldToDismount = 0xadcc50;
		constexpr auto ClientRequestDismount = 0xadbc90;
		constexpr auto Menu_Mount = 0xadcf60;
		constexpr auto Menu_Mount_ShowIf = 0xadcec0;
		constexpr auto MountMenuVisible = 0xadcff0;
		constexpr auto NearMountPoint = 0xadd080;
		constexpr auto ConvertVector = 0xadbcd0;
		constexpr auto get_BlocksDoors = 0x5c2350;
		constexpr auto ctor = 0xade730;
		constexpr auto cctor = 0xade6c0;
		constexpr auto DoPlayerMovementb__78_0 = 0xadbc90;
	};

	namespace TOD_Sky {
		constexpr auto ColorSpace = 0x18;
		constexpr auto ColorRange = 0x1c;
		constexpr auto ColorOutput = 0x20;
		constexpr auto SkyQuality = 0x24;
		constexpr auto CloudQuality = 0x28;
		constexpr auto MeshQuality = 0x2c;
		constexpr auto StarQuality = 0x30;
		constexpr auto Cycle = 0x38;
		constexpr auto World = 0x40;
		constexpr auto Atmosphere = 0x48;
		constexpr auto Day = 0x50;
		constexpr auto Night = 0x58;
		constexpr auto Sun = 0x60;
		constexpr auto Moon = 0x68;
		constexpr auto Stars = 0x70;
		constexpr auto Clouds = 0x78;
		constexpr auto Light = 0x80;
		constexpr auto Fog = 0x88;
		constexpr auto Ambient = 0x90;
		constexpr auto Reflection = 0x98;
		constexpr auto Initializedk__BackingField = 0xa0;
		constexpr auto Componentsk__BackingField = 0xa8;
		constexpr auto Resourcesk__BackingField = 0xb0;
		constexpr auto IsDayk__BackingField = 0xb8;
		constexpr auto IsNightk__BackingField = 0xb9;
		constexpr auto LerpValuek__BackingField = 0xbc;
		constexpr auto SunZenithk__BackingField = 0xc0;
		constexpr auto SunAltitudek__BackingField = 0xc4;
		constexpr auto SunAzimuthk__BackingField = 0xc8;
		constexpr auto MoonZenithk__BackingField = 0xcc;
		constexpr auto MoonAltitudek__BackingField = 0xd0;
		constexpr auto MoonAzimuthk__BackingField = 0xd4;
		constexpr auto SunsetTimek__BackingField = 0xd8;
		constexpr auto SunriseTimek__BackingField = 0xdc;
		constexpr auto LocalSiderealTimek__BackingField = 0xe0;
		constexpr auto SunVisibilityk__BackingField = 0xe4;
		constexpr auto MoonVisibilityk__BackingField = 0xe8;
		constexpr auto SunDirectionk__BackingField = 0xec;
		constexpr auto MoonDirectionk__BackingField = 0xf8;
		constexpr auto LightDirectionk__BackingField = 0x104;
		constexpr auto LocalSunDirectionk__BackingField = 0x110;
		constexpr auto LocalMoonDirectionk__BackingField = 0x11c;
		constexpr auto LocalLightDirectionk__BackingField = 0x128;
		constexpr auto SunLightColork__BackingField = 0x134;
		constexpr auto MoonLightColork__BackingField = 0x144;
		constexpr auto SunRayColork__BackingField = 0x154;
		constexpr auto MoonRayColork__BackingField = 0x164;
		constexpr auto SunSkyColork__BackingField = 0x174;
		constexpr auto MoonSkyColork__BackingField = 0x184;
		constexpr auto SunMeshColork__BackingField = 0x194;
		constexpr auto MoonMeshColork__BackingField = 0x1a4;
		constexpr auto SunCloudColork__BackingField = 0x1b4;
		constexpr auto MoonCloudColork__BackingField = 0x1c4;
		constexpr auto FogColork__BackingField = 0x1d4;
		constexpr auto GroundColork__BackingField = 0x1e4;
		constexpr auto AmbientColork__BackingField = 0x1f4;
		constexpr auto MoonHaloColork__BackingField = 0x204;
		constexpr auto ReflectionCur = 0x218;
		constexpr auto ReflectionSrc = 0x220;
		constexpr auto ReflectionDst = 0x228;
		constexpr auto ReflectionUpdateSpeed = 0x8;
		constexpr auto ReflectionResolution = 0xc;
		constexpr auto ReflectionUpdateInterval = 0x10;
		constexpr auto ReflectionTimeSlicing = 0x14;
		constexpr auto timeSinceLightUpdate = 0x230;
		constexpr auto timeSinceAmbientUpdate = 0x234;
		constexpr auto timeSinceReflectionUpdate = 0x238;
		constexpr auto kBetaMie = 0x23c;
		constexpr auto kSun = 0x248;
		constexpr auto k4PI = 0x258;
		constexpr auto kRadius = 0x268;
		constexpr auto kScale = 0x278;

		constexpr auto get_Instances = 0x1309630;
		constexpr auto get_Instance = 0x1309560;
		constexpr auto get_Initialized = 0xd7f690;
		constexpr auto set_Initialized = 0xd7fb70;
		constexpr auto get_Headless = 0x1309540;
		constexpr auto get_Components = 0x820240;
		constexpr auto set_Components = 0x8202c0;
		constexpr auto get_Resources = 0x820210;
		constexpr auto set_Resources = 0x8202a0;
		constexpr auto get_IsDay = 0x1309690;
		constexpr auto set_IsDay = 0x1309a40;
		constexpr auto get_IsNight = 0x13096a0;
		constexpr auto set_IsNight = 0x1309a50;
		constexpr auto get_Radius = 0x1309920;
		constexpr auto get_Diameter = 0x13094e0;
		constexpr auto get_LerpValue = 0x6a8640;
		constexpr auto set_LerpValue = 0x6a8830;
		constexpr auto get_SunZenith = 0x13099e0;
		constexpr auto set_SunZenith = 0x1309c40;
		constexpr auto get_SunAltitude = 0x1309960;
		constexpr auto set_SunAltitude = 0x1309ba0;
		constexpr auto get_SunAzimuth = 0x1309970;
		constexpr auto set_SunAzimuth = 0x1309bb0;
		constexpr auto get_MoonZenith = 0x13098d0;
		constexpr auto set_MoonZenith = 0x1309b90;
		constexpr auto get_MoonAltitude = 0x1309830;
		constexpr auto set_MoonAltitude = 0x1309ae0;
		constexpr auto get_MoonAzimuth = 0x1309840;
		constexpr auto set_MoonAzimuth = 0x1309af0;
		constexpr auto get_SunsetTime = 0x1309a00;
		constexpr auto set_SunsetTime = 0x1309c60;
		constexpr auto get_SunriseTime = 0x13099f0;
		constexpr auto set_SunriseTime = 0x1309c50;
		constexpr auto get_LocalSiderealTime = 0x12bb9d0;
		constexpr auto set_LocalSiderealTime = 0x12bc1d0;
		constexpr auto get_LightZenith = 0x1309750;
		constexpr auto get_LightIntensity = 0x1309720;
		constexpr auto get_SunVisibility = 0x13099d0;
		constexpr auto set_SunVisibility = 0x1309c30;
		constexpr auto get_MoonVisibility = 0x12bb820;
		constexpr auto set_MoonVisibility = 0x1309b80;
		constexpr auto get_SunDirection = 0x1309980;
		constexpr auto set_SunDirection = 0x1309bd0;
		constexpr auto get_MoonDirection = 0x1309860;
		constexpr auto set_MoonDirection = 0x1309b10;
		constexpr auto get_LightDirection = 0x1309700;
		constexpr auto set_LightDirection = 0x1309a60;
		constexpr auto get_LocalSunDirection = 0x1309810;
		constexpr auto set_LocalSunDirection = 0x1309ac0;
		constexpr auto get_LocalMoonDirection = 0x13097f0;
		constexpr auto set_LocalMoonDirection = 0x1309aa0;
		constexpr auto get_LocalLightDirection = 0x13097d0;
		constexpr auto set_LocalLightDirection = 0x1309a80;
		constexpr auto get_SunLightColor = 0x13099a0;
		constexpr auto set_SunLightColor = 0x1309bf0;
		constexpr auto get_MoonLightColor = 0x1309890;
		constexpr auto set_MoonLightColor = 0x1309b40;
		constexpr auto get_LightColor = 0x13096b0;
		constexpr auto get_SunRayColor = 0x13099c0;
		constexpr auto set_SunRayColor = 0x1309c10;
		constexpr auto get_MoonRayColor = 0x13098b0;
		constexpr auto set_MoonRayColor = 0x1309b60;
		constexpr auto get_SunSkyColor = 0x10566b0;
		constexpr auto set_SunSkyColor = 0x1309c20;
		constexpr auto get_MoonSkyColor = 0x13098c0;
		constexpr auto set_MoonSkyColor = 0x1309b70;
		constexpr auto get_SunMeshColor = 0x13099b0;
		constexpr auto set_SunMeshColor = 0x1309c00;
		constexpr auto get_MoonMeshColor = 0x13098a0;
		constexpr auto set_MoonMeshColor = 0x1309b50;
		constexpr auto get_SunCloudColor = 0xdd5550;
		constexpr auto set_SunCloudColor = 0x1309bc0;
		constexpr auto get_MoonCloudColor = 0x1309850;
		constexpr auto set_MoonCloudColor = 0x1309b00;
		constexpr auto get_FogColor = 0x1309520;
		constexpr auto set_FogColor = 0x1309a20;
		constexpr auto get_GroundColor = 0x1309530;
		constexpr auto set_GroundColor = 0x1309a30;
		constexpr auto get_AmbientColor = 0x13094d0;
		constexpr auto set_AmbientColor = 0x1309a10;
		constexpr auto get_MoonHaloColor = 0x1309880;
		constexpr auto set_MoonHaloColor = 0x1309b30;
		constexpr auto get_Probe = 0x1309900;
		constexpr auto get_ProbeInstance = 0x13098e0;
		constexpr auto OrbitalToUnity = 0x1301f70;
		constexpr auto OrbitalToLocal = 0x1301eb0;
		constexpr auto SampleAtmosphere = 0x1302f80;
		constexpr auto RenderToSphericalHarmonics = 0x1302e20;
		constexpr auto RenderToCubemap = 0x1302080;
		constexpr auto RenderToProbe = 0x13021c0;
		constexpr auto ReflectionIsUpdating = 0x1302040;
		constexpr auto UpdateProbeBlending = 0x1306fe0;
		constexpr auto UpdateProbeProperties = 0x13070d0;
		constexpr auto SampleFogColor = 0x1303300;
		constexpr auto SampleSkyColor = 0x13035b0;
		constexpr auto SampleEquatorColor = 0x1303240;
		constexpr auto UpdateFog = 0x1306f60;
		constexpr auto UpdateAmbient = 0x1304bc0;
		constexpr auto UpdateReflection = 0x1307b00;
		constexpr auto DelayReflectionUpdate = 0x1301740;
		constexpr auto LoadParameters = 0x1301b30;
		constexpr auto SaveParameters = 0x13036c0;
		constexpr auto UpdateQualitySettings = 0x13074f0;
		constexpr auto UpdateRenderSettings = 0x1307c00;
		constexpr auto UpdateShaderKeywords = 0x13081d0;
		constexpr auto UpdateShaderProperties = 0x1308430;
		constexpr auto ShaderScale = 0x1303d20;
		constexpr auto ShaderMiePhase = 0x1303a00;
		constexpr auto ShaderRayleighPhase = 0x1303d00;
		constexpr auto ShaderNightSkyColor = 0x1303c10;
		constexpr auto ShaderMoonHaloColor = 0x1303ad0;
		constexpr auto TOD_HDR2LDR = 0x1304970;
		constexpr auto TOD_GAMMA2LINEAR = 0x1304910;
		constexpr auto TOD_LINEAR2GAMMA = 0x1304af0;
		constexpr auto ShaderScatteringColor = 0x1303dd0;
		constexpr auto Initialize = 0x1301750;
		constexpr auto Cleanup = 0x1301620;
		constexpr auto OnEnable = 0x1301e60;
		constexpr auto OnDisable = 0x1301620;
		constexpr auto LateUpdate = 0x1301850;
		constexpr auto OnValidate = 0x1301e70;
		constexpr auto UpdateScattering = 0x1308020;
		constexpr auto UpdateCelestials = 0x1305060;
		constexpr auto ctor = 0x13093c0;
		constexpr auto cctor = 0x1309300;
	};

	namespace UnityEngine_Random {

		constexpr auto InitState = 0x1b5d600;
		constexpr auto get_state = 0x1b5d8d0;
		constexpr auto set_state = 0x1b5d980;
		constexpr auto Range = 0x1b5d680;
		constexpr auto RandomRangeInt = 0x1b5d640;
		constexpr auto get_value = 0x1b5d910;
		constexpr auto get_insideUnitSphere = 0x1b5d750;
		constexpr auto GetRandomUnitCircle = 0x1b5d5c0;
		constexpr auto get_insideUnitCircle = 0x1b5d6d0;
		constexpr auto get_onUnitSphere = 0x1b5d7d0;
		constexpr auto get_rotation = 0x1b5d850;
		constexpr auto RandomRange = 0x1b5d640;
		constexpr auto ColorHSV = 0x1b5d400;
		constexpr auto get_state_Injected = 0x1b5d890;
		constexpr auto set_state_Injected = 0x1b5d940;
		constexpr auto get_insideUnitSphere_Injected = 0x1b5d710;
		constexpr auto get_onUnitSphere_Injected = 0x1b5d790;
		constexpr auto get_rotation_Injected = 0x1b5d810;
	};

	namespace UnityEngine_PhysicsScene {
		constexpr auto m_Handle = 0x10;

		constexpr auto ToString = 0x32c5a0;
		constexpr auto GetHashCode = 0x14e910;
		constexpr auto Equals = 0x32c060;
		constexpr auto Raycast = 0x32c330;
		constexpr auto Internal_RaycastTest = 0x24fb9f0;
		constexpr auto Internal_Raycast = 0x24fbad0;
		constexpr auto Internal_RaycastNonAlloc = 0x24fb910;
		constexpr auto Query_CapsuleCast = 0x24fc200;
		constexpr auto Internal_CapsuleCast = 0x24fb6f0;
		constexpr auto CapsuleCast = 0x32bfb0;
		constexpr auto Internal_CapsuleCastNonAlloc = 0x24fb650;
		constexpr auto OverlapCapsuleNonAlloc_Internal = 0x24fbf20;
		constexpr auto OverlapCapsule = 0x32c190;
		constexpr auto Query_SphereCast = 0x24fc310;
		constexpr auto Internal_SphereCast = 0x24fbc40;
		constexpr auto SphereCast = 0x32c420;
		constexpr auto Internal_SphereCastNonAlloc = 0x24fbbb0;
		constexpr auto OverlapSphereNonAlloc_Internal = 0x24fc010;
		constexpr auto OverlapSphere = 0x32c230;
		constexpr auto Query_BoxCast = 0x24fc0f0;
		constexpr auto Internal_BoxCast = 0x24fb420;
		constexpr auto BoxCast = 0x32bdc0;
		constexpr auto OverlapBoxNonAlloc_Internal = 0x24fbe30;
		constexpr auto OverlapBox = 0x32c0e0;
		constexpr auto Internal_RaycastTest_Injected = 0x24fb980;
		constexpr auto Internal_Raycast_Injected = 0x24fba60;
		constexpr auto Internal_RaycastNonAlloc_Injected = 0x24fb8a0;
		constexpr auto Query_CapsuleCast_Injected = 0x24fc190;
		constexpr auto Internal_CapsuleCastNonAlloc_Injected = 0x24fb5e0;
		constexpr auto OverlapCapsuleNonAlloc_Internal_Injected = 0x24fbeb0;
		constexpr auto Query_SphereCast_Injected = 0x24fc2a0;
		constexpr auto Internal_SphereCastNonAlloc_Injected = 0x24fbb40;
		constexpr auto OverlapSphereNonAlloc_Internal_Injected = 0x24fbfa0;
		constexpr auto Query_BoxCast_Injected = 0x24fc080;
		constexpr auto OverlapBoxNonAlloc_Internal_Injected = 0x24fbdc0;
	};

	namespace UnityEngine_GameObjectEx {

		constexpr auto ToBaseEntity = 0xb55b00;
		constexpr auto IsOnLayer = 0xb559b0;
		constexpr auto GetEntityFromRegistry = 0xb55880;
		constexpr auto GetEntityFromComponent = 0xb55780;
		constexpr auto SetHierarchyGroup = 0xb55a40;
	};

	namespace BaseHelicopter {
		constexpr auto weakspots = 0x240;
		constexpr auto rotorPivot = 0x248;
		constexpr auto mainRotor = 0x250;
		constexpr auto mainRotor_blades = 0x258;
		constexpr auto mainRotor_blur = 0x260;
		constexpr auto tailRotor = 0x268;
		constexpr auto tailRotor_blades = 0x270;
		constexpr auto tailRotor_blur = 0x278;
		constexpr auto rocket_tube_left = 0x280;
		constexpr auto rocket_tube_right = 0x288;
		constexpr auto left_gun_yaw = 0x290;
		constexpr auto left_gun_pitch = 0x298;
		constexpr auto left_gun_muzzle = 0x2a0;
		constexpr auto right_gun_yaw = 0x2a8;
		constexpr auto right_gun_pitch = 0x2b0;
		constexpr auto right_gun_muzzle = 0x2b8;
		constexpr auto spotlight_rotation = 0x2c0;
		constexpr auto rocket_fire_effect = 0x2c8;
		constexpr auto gun_fire_effect = 0x2d0;
		constexpr auto bulletEffect = 0x2d8;
		constexpr auto explosionEffect = 0x2e0;
		constexpr auto fireBall = 0x2e8;
		constexpr auto crateToDrop = 0x2f0;
		constexpr auto maxCratesToSpawn = 0x2f8;
		constexpr auto bulletSpeed = 0x2fc;
		constexpr auto bulletDamage = 0x300;
		constexpr auto servergibs = 0x308;
		constexpr auto debrisFieldMarker = 0x310;
		constexpr auto rotorWashSoundDef = 0x318;
		constexpr auto _rotorWashSound = 0x320;
		constexpr auto flightEngineSoundDef = 0x328;
		constexpr auto flightThwopsSoundDef = 0x330;
		constexpr auto flightEngineSound = 0x338;
		constexpr auto flightThwopsSound = 0x340;
		constexpr auto flightEngineGainMod = 0x348;
		constexpr auto flightThwopsGainMod = 0x350;
		constexpr auto rotorGainModSmoothing = 0x358;
		constexpr auto engineGainMin = 0x35c;
		constexpr auto engineGainMax = 0x360;
		constexpr auto thwopGainMin = 0x364;
		constexpr auto thwopGainMax = 0x368;
		constexpr auto spotlightJitterAmount = 0x36c;
		constexpr auto spotlightJitterSpeed = 0x370;
		constexpr auto nightLights = 0x378;
		constexpr auto spotlightTarget = 0x380;
		constexpr auto engineSpeed = 0x38c;
		constexpr auto targetEngineSpeed = 0x390;
		constexpr auto blur_rotationScale = 0x394;
		constexpr auto _rotorWashParticles = 0x398;
		constexpr auto myAI = 0x3a0;
		constexpr auto mapMarkerEntityPrefab = 0x3a8;
		constexpr auto client_rotorPivotIdeal = 0x3b0;
		constexpr auto nightLightsOn = 0x3c0;

		constexpr auto OnRpcMessage = 0xad2420;
		constexpr auto InitalizeWeakspots = 0xad1e80;
		constexpr auto MaxVelocity = 0x6c8080;
		constexpr auto InitShared = 0xad1df0;
		constexpr auto Load = 0xad2160;
		constexpr auto ClientInit = 0xad1810;
		constexpr auto InitializeClientsideEffects = 0xad1f00;
		constexpr auto DoClientDestroy = 0xad1830;
		constexpr auto SetLights = 0xad2870;
		constexpr auto Update = 0xad32e0;
		constexpr auto UpdateEffects = 0xad2990;
		constexpr auto UpdateRotorWashPosition = 0xad31a0;
		constexpr auto ToggleRotorWash = 0xad2910;
		constexpr auto UpdateRotorVisibility = 0xad3110;
		constexpr auto FireGun = 0xad1910;
		constexpr auto ctor = 0xad3a40;
	};

	namespace HitInfo {
		constexpr auto Initiator = 0x10;
		constexpr auto WeaponPrefab = 0x18;
		constexpr auto Weapon = 0x20;
		constexpr auto DoHitEffects = 0x28;
		constexpr auto DoDecals = 0x29;
		constexpr auto IsPredicting = 0x2a;
		constexpr auto UseProtection = 0x2b;
		constexpr auto Predicted = 0x30;
		constexpr auto DidHit = 0x38;
		constexpr auto HitEntity = 0x40;
		constexpr auto HitBone = 0x48;
		constexpr auto HitPart = 0x4c;
		constexpr auto HitMaterial = 0x50;
		constexpr auto HitPositionWorld = 0x54;
		constexpr auto HitPositionLocal = 0x60;
		constexpr auto HitNormalWorld = 0x6c;
		constexpr auto HitNormalLocal = 0x78;
		constexpr auto PointStart = 0x84;
		constexpr auto PointEnd = 0x90;
		constexpr auto ProjectileID = 0x9c;
		constexpr auto ProjectileHits = 0xa0;
		constexpr auto ProjectileDistance = 0xa4;
		constexpr auto ProjectileIntegrity = 0xa8;
		constexpr auto ProjectileTravelTime = 0xac;
		constexpr auto ProjectileTrajectoryMismatch = 0xb0;
		constexpr auto ProjectileVelocity = 0xb4;
		constexpr auto ProjectilePrefab = 0xc0;
		constexpr auto material = 0xc8;
		constexpr auto damageProperties = 0xd0;
		constexpr auto damageTypes = 0xd8;
		constexpr auto CanGather = 0xe0;
		constexpr auto DidGather = 0xe1;
		constexpr auto gatherScale = 0xe4;

		constexpr auto IsProjectile = 0x7f67e0;
		constexpr auto get_InitiatorPlayer = 0x7f7030;
		constexpr auto get_attackNormal = 0x7f70c0;
		constexpr auto get_hasDamage = 0x7f75c0;
		constexpr auto ctor = 0x7f6e50;
		constexpr auto LoadFromAttack = 0x7f67f0;
		constexpr auto get_isHeadshot = 0x7f75f0;
		constexpr auto get_bonePhrase = 0x7f7460;
		constexpr auto get_boneName = 0x7f72d0;
		constexpr auto get_boneArea = 0x7f71c0;
		constexpr auto PositionOnRay = 0x7f69f0;
		constexpr auto HitPositionOnRay = 0x7f65b0;
		constexpr auto IsNaNOrInfinity = 0x7f6600;
	};

	namespace System_Number {

		constexpr auto NumberBufferToDecimal = 0x1846000;
		constexpr auto NumberBufferToDouble = 0x1846010;
		constexpr auto FormatDecimal = 0x1845520;
		constexpr auto FormatDouble = 0x1845640;
		constexpr auto FormatInt32 = 0x18456c0;
		constexpr auto FormatUInt32 = 0x1845a20;
		constexpr auto FormatInt64 = 0x1845830;
		constexpr auto FormatUInt64 = 0x1845b80;
		constexpr auto FormatSingle = 0x18459a0;
		constexpr auto HexNumberToInt32 = 0x1845ce0;
		constexpr auto HexNumberToInt64 = 0x1845d60;
		constexpr auto HexNumberToUInt32 = 0x1845e20;
		constexpr auto HexNumberToUInt64 = 0x1845ea0;
		constexpr auto IsWhite = 0x1845f30;
		constexpr auto NumberToInt32 = 0x1846020;
		constexpr auto NumberToInt64 = 0x1846080;
		constexpr auto NumberToUInt32 = 0x1846100;
		constexpr auto NumberToUInt64 = 0x1846160;
		constexpr auto MatchChars = 0x1845f90;
		constexpr auto ParseDecimal = 0x18461d0;
		constexpr auto ParseDouble = 0x1846340;
		constexpr auto ParseInt32 = 0x18465f0;
		constexpr auto ParseInt64 = 0x1846840;
		constexpr auto ParseNumber = 0x1846ab0;
		constexpr auto ParseSingle = 0x18475a0;
		constexpr auto ParseUInt32 = 0x18478c0;
		constexpr auto ParseUInt64 = 0x1847b00;
		constexpr auto StringToNumber = 0x1847d60;
		constexpr auto TrailingZeros = 0x1847ea0;
		constexpr auto TryParseDecimal = 0x1847f00;
		constexpr auto TryParseDouble = 0x1848080;
		constexpr auto TryParseInt32 = 0x1848200;
		constexpr auto TryParseInt64 = 0x1848440;
		constexpr auto TryParseSingle = 0x1848610;
		constexpr auto TryParseUInt32 = 0x18487c0;
		constexpr auto TryParseUInt64 = 0x1848a00;
		constexpr auto TryStringToNumber = 0x1848d20;
	};

	namespace System_Globalization_NumberFormatInfo {
		constexpr auto numberGroupSizes = 0x10;
		constexpr auto currencyGroupSizes = 0x18;
		constexpr auto percentGroupSizes = 0x20;
		constexpr auto positiveSign = 0x28;
		constexpr auto negativeSign = 0x30;
		constexpr auto numberDecimalSeparator = 0x38;
		constexpr auto numberGroupSeparator = 0x40;
		constexpr auto currencyGroupSeparator = 0x48;
		constexpr auto currencyDecimalSeparator = 0x50;
		constexpr auto currencySymbol = 0x58;
		constexpr auto ansiCurrencySymbol = 0x60;
		constexpr auto nanSymbol = 0x68;
		constexpr auto positiveInfinitySymbol = 0x70;
		constexpr auto negativeInfinitySymbol = 0x78;
		constexpr auto percentDecimalSeparator = 0x80;
		constexpr auto percentGroupSeparator = 0x88;
		constexpr auto percentSymbol = 0x90;
		constexpr auto perMilleSymbol = 0x98;
		constexpr auto nativeDigits = 0xa0;
		constexpr auto m_dataItem = 0xa8;
		constexpr auto numberDecimalDigits = 0xac;
		constexpr auto currencyDecimalDigits = 0xb0;
		constexpr auto currencyPositivePattern = 0xb4;
		constexpr auto currencyNegativePattern = 0xb8;
		constexpr auto numberNegativePattern = 0xbc;
		constexpr auto percentPositivePattern = 0xc0;
		constexpr auto percentNegativePattern = 0xc4;
		constexpr auto percentDecimalDigits = 0xc8;
		constexpr auto digitSubstitution = 0xcc;
		constexpr auto isReadOnly = 0xd0;
		constexpr auto m_useUserOverride = 0xd1;
		constexpr auto m_isInvariant = 0xd2;
		constexpr auto validForParseAsNumber = 0xd3;
		constexpr auto validForParseAsCurrency = 0xd4;

		constexpr auto ctor = 0x1530cb0;
		constexpr auto OnSerializing = 0x1530310;
		constexpr auto OnDeserializing = 0x45a520;
		constexpr auto OnDeserialized = 0x45a520;
		constexpr auto get_InvariantInfo = 0x1530e40;
		constexpr auto GetInstance = 0x1530090;
		constexpr auto Clone = 0x152ff90;
		constexpr auto get_CurrencyDecimalDigits = 0x3ec610;
		constexpr auto get_CurrencyDecimalSeparator = 0x5f4a10;
		constexpr auto get_IsReadOnly = 0xf1d830;
		constexpr auto get_CurrencyGroupSizes = 0x1530cc0;
		constexpr auto get_NumberGroupSizes = 0x1530f50;
		constexpr auto get_PercentGroupSizes = 0x1530fd0;
		constexpr auto get_CurrencyGroupSeparator = 0x6a8720;
		constexpr auto get_CurrencySymbol = 0x5f4a00;
		constexpr auto get_CurrentInfo = 0x1530d40;
		constexpr auto get_NaNSymbol = 0x658d60;
		constexpr auto get_CurrencyNegativePattern = 0x1300830;
		constexpr auto get_NumberNegativePattern = 0x1300820;
		constexpr auto get_PercentPositivePattern = 0x1300810;
		constexpr auto get_PercentNegativePattern = 0xbfd610;
		constexpr auto get_NegativeInfinitySymbol = 0x6157e0;
		constexpr auto get_NegativeSign = 0x5b0d50;
		constexpr auto get_NumberDecimalDigits = 0xadebc0;
		constexpr auto get_NumberDecimalSeparator = 0x6a8680;
		constexpr auto get_NumberGroupSeparator = 0x5e0f70;
		constexpr auto get_CurrencyPositivePattern = 0x1300800;
		constexpr auto get_PositiveInfinitySymbol = 0x658d70;
		constexpr auto get_PositiveSign = 0x8f2d90;
		constexpr auto get_PercentDecimalDigits = 0xbfd630;
		constexpr auto get_PercentDecimalSeparator = 0x658d80;
		constexpr auto get_PercentGroupSeparator = 0x658d00;
		constexpr auto get_PercentSymbol = 0x611340;
		constexpr auto get_PerMilleSymbol = 0x658d10;
		constexpr auto GetFormat = 0x1530000;
		constexpr auto ReadOnly = 0x15303a0;
		constexpr auto ValidateParseStyleInteger = 0x1530520;
		constexpr auto ValidateParseStyleFloatingPoint = 0x1530450;
	};

	namespace UnityEngine_GL {

		constexpr auto Vertex3 = 0x1acf690;
		constexpr auto Vertex = 0x1acf6f0;
		constexpr auto TexCoord3 = 0x1acf630;
		constexpr auto TexCoord2 = 0x1acf5e0;
		constexpr auto MultiTexCoord3 = 0x1acf510;
		constexpr auto MultiTexCoord2 = 0x1acf4b0;
		constexpr auto ImmediateColor = 0x1acf1f0;
		constexpr auto Color = 0x1aceec0;
		constexpr auto get_sRGBWrite = 0x1acf750;
		constexpr auto set_sRGBWrite = 0x1acf780;
		constexpr auto Flush = 0x1acef50;
		constexpr auto MultMatrix = 0x1acf470;
		constexpr auto PushMatrix = 0x1acf5b0;
		constexpr auto PopMatrix = 0x1acf580;
		constexpr auto LoadIdentity = 0x1acf320;
		constexpr auto LoadOrtho = 0x1acf350;
		constexpr auto LoadPixelMatrix = 0x1acf380;
		constexpr auto LoadProjectionMatrix = 0x1acf3f0;
		constexpr auto GetGPUProjectionMatrix = 0x1acf180;
		constexpr auto GLLoadPixelMatrixScript = 0x1acf0a0;
		constexpr auto GLIssuePluginEvent = 0x1acf060;
		constexpr auto IssuePluginEvent = 0x1acf270;
		constexpr auto Begin = 0x1acedd0;
		constexpr auto End = 0x1acef20;
		constexpr auto GLClear = 0x1aceff0;
		constexpr auto Clear = 0x1acee60;
		constexpr auto ClearWithSkybox = 0x1acee10;
		constexpr auto MultMatrix_Injected = 0x1acf430;
		constexpr auto LoadProjectionMatrix_Injected = 0x1acf3b0;
		constexpr auto GetGPUProjectionMatrix_Injected = 0x1acf120;
		constexpr auto GLClear_Injected = 0x1acef80;
	};

	namespace UnityEngine_Material {

		constexpr auto CreateWithShader = 0x1b49be0;
		constexpr auto CreateWithMaterial = 0x1b49b90;
		constexpr auto CreateWithString = 0x1b49c30;
		constexpr auto ctor = 0x1b4b190;
		constexpr auto get_shader = 0x1b4b450;
		constexpr auto set_shader = 0x1b4b5e0;
		constexpr auto get_color = 0x1b4b220;
		constexpr auto set_color = 0x1b4b490;
		constexpr auto get_mainTexture = 0x1b4b330;
		constexpr auto GetFirstPropertyNameIdByAttribute = 0x1b49f00;
		constexpr auto HasProperty = 0x1b4a410;
		constexpr auto get_renderQueue = 0x1b4b410;
		constexpr auto set_renderQueue = 0x1b4b5a0;
		constexpr auto EnableKeyword = 0x1b49cc0;
		constexpr auto DisableKeyword = 0x1b49c70;
		constexpr auto IsKeywordEnabled = 0x1b4a450;
		constexpr auto get_enableInstancing = 0x1b4b2f0;
		constexpr auto set_enableInstancing = 0x1b4b550;
		constexpr auto get_passCount = 0x1b4b3d0;
		constexpr auto GetShaderPassEnabled = 0x1b4a050;
		constexpr auto GetPassName = 0x1b49fd0;
		constexpr auto FindPass = 0x1b49d10;
		constexpr auto SetOverrideTag = 0x1b4abe0;
		constexpr auto GetTagImpl = 0x1b4a0a0;
		constexpr auto GetTag = 0x1b4a1a0;
		constexpr auto SetPass = 0x1b4ac40;
		constexpr auto CopyPropertiesFromMaterial = 0x1b49b40;
		constexpr auto GetShaderKeywords = 0x1b4a010;
		constexpr auto SetShaderKeywords = 0x1b4ac80;
		constexpr auto get_shaderKeywords = 0x1b4a010;
		constexpr auto set_shaderKeywords = 0x1b4ac80;
		constexpr auto SetFloatImpl = 0x1b4a930;
		constexpr auto SetColorImpl = 0x1b4a5a0;
		constexpr auto SetMatrixImpl = 0x1b4aaa0;
		constexpr auto SetTextureImpl = 0x1b4acd0;
		constexpr auto SetBufferImpl = 0x1b4a4a0;
		constexpr auto GetFloatImpl = 0x1b49f40;
		constexpr auto GetColorImpl = 0x1b49db0;
		constexpr auto GetTextureImpl = 0x1b4a210;
		constexpr auto SetFloatArrayImpl = 0x1b4a6a0;
		constexpr auto SetTextureOffsetImpl = 0x1b4ad70;
		constexpr auto SetTextureScaleImpl = 0x1b4ae70;
		constexpr auto SetFloatArray = 0x1b4a800;
		constexpr auto SetFloat = 0x1b4a980;
		constexpr auto SetInt = 0x1b4a9e0;
		constexpr auto SetColor = 0x1b4a640;
		constexpr auto SetVector = 0x1b4af80;
		constexpr auto SetMatrix = 0x1b4ab60;
		constexpr auto SetTexture = 0x1b4af20;
		constexpr auto SetBuffer = 0x1b4a4f0;
		constexpr auto GetFloat = 0x1b49f80;
		constexpr auto GetColor = 0x1b49e80;
		constexpr auto GetVector = 0x1b4a2a0;
		constexpr auto GetTexture = 0x1b4a250;
		constexpr auto SetTextureOffset = 0x1b4adc0;
		constexpr auto SetTextureScale = 0x1b4aec0;
		constexpr auto SetColorImpl_Injected = 0x1b4a550;
		constexpr auto SetMatrixImpl_Injected = 0x1b4aa50;
		constexpr auto GetColorImpl_Injected = 0x1b49d60;
		constexpr auto SetTextureOffsetImpl_Injected = 0x1b4ad20;
		constexpr auto SetTextureScaleImpl_Injected = 0x1b4ae20;
	};

	namespace UnityEngine_Screen {

		constexpr auto get_width = 0x1be2a10;
		constexpr auto get_height = 0x1be29b0;
		constexpr auto get_dpi = 0x1be2950;
		constexpr auto get_currentResolution = 0x1be2910;
		constexpr auto get_fullScreen = 0x1be2980;
		constexpr auto SetResolution = 0x1be2810;
		constexpr auto get_resolutions = 0x1be29e0;
		constexpr auto get_currentResolution_Injected = 0x1be28d0;
	};

	namespace TOD_AtmosphereParameters {
		constexpr auto RayleighMultiplier = 0x10;
		constexpr auto MieMultiplier = 0x14;
		constexpr auto Brightness = 0x18;
		constexpr auto Contrast = 0x1c;
		constexpr auto Directionality = 0x20;
		constexpr auto Fogginess = 0x24;

		constexpr auto ctor = 0x12fb310;
	};

	namespace TOD_MoonParameters {
		constexpr auto MeshSize = 0x10;
		constexpr auto MeshBrightness = 0x14;
		constexpr auto MeshContrast = 0x18;
		constexpr auto HaloSize = 0x1c;
		constexpr auto HaloBrightness = 0x20;
		constexpr auto Position = 0x24;

		constexpr auto ctor = 0x12ff070;
	};

	namespace TOD_CloudParameters {
		constexpr auto Size = 0x10;
		constexpr auto Opacity = 0x14;
		constexpr auto Coverage = 0x18;
		constexpr auto Sharpness = 0x1c;
		constexpr auto Coloring = 0x20;
		constexpr auto Attenuation = 0x24;
		constexpr auto Saturation = 0x28;
		constexpr auto Scattering = 0x2c;
		constexpr auto Brightness = 0x30;

		constexpr auto ctor = 0x12fc7a0;
	};

	namespace TOD_NightParameters {
		constexpr auto MoonColor = 0x10;
		constexpr auto LightColor = 0x18;
		constexpr auto RayColor = 0x20;
		constexpr auto SkyColor = 0x28;
		constexpr auto CloudColor = 0x30;
		constexpr auto FogColor = 0x38;
		constexpr auto AmbientColor = 0x40;
		constexpr auto LightIntensity = 0x48;
		constexpr auto ShadowStrength = 0x4c;
		constexpr auto AmbientMultiplier = 0x50;
		constexpr auto ReflectionMultiplier = 0x54;

		constexpr auto ctor = 0x12ff0b0;
	};

}

namespace CO {
	constexpr auto ClientUpdate = O::BasePlayer::ClientUpdate;
	constexpr auto ClientUpdate_Sleeping = O::BasePlayer::ClientUpdate_Sleeping;
	constexpr auto Refract = O::Projectile::Reflect;//private bool Refract(ref uint seed, Vector3 point, Vector3 normal, float resistance) { }
	constexpr auto SendSignalBroadcast = O::BaseEntity::SendSignalBroadcast;//public void SendSignalBroadcast(BaseEntity.Signal signal, string arg = "") { }
	constexpr auto GetJumpHeight = O::BasePlayer::GetJumpHeight;//public float GetJumpHeight() { }
	constexpr auto MathfAbs = O::UnityEngine_Mathf::Abs;//public static float Abs(float f) { }
	constexpr auto MathfMax = O::UnityEngine_Mathf::Max;//public static float Max(float a, float b) { }
	constexpr auto GetHeight = O::BasePlayer::GetHeight;//public float GetHeight(bool ducked) { }
	constexpr auto GetRadius = O::BasePlayer::GetRadius;//public float GetRadius() { }
	constexpr auto CheckCapsule = O::UnityEngine_Physics::CheckCapsule; // public static bool CheckCapsule(Vector3 start, Vector3 end, float radius, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }
	constexpr auto RebuildAll = O::PlayerModel::RebuildAll;//public static void RebuildAll() { }
	constexpr auto GetMaxSpeed = O::BasePlayer::GetMaxSpeed;
	constexpr auto DoFixedUpdate = O::PlayerWalkMovement::DoFixedUpdate;//public virtual void DoFixedUpdate(ModelState modelState) { }
	constexpr auto get_rotation = O::PlayerEyes::get_rotation; // playereyes
	constexpr auto Play = O::ViewModel::Play; // ViewModel// public void Play(string name, int layer = 0) { }
	constexpr auto GetRandomVelocity = O::ItemModProjectile::GetRandomVelocity;
	constexpr auto AddPunch = O::HeldEntity::AddPunch;
	constexpr auto get_jumped = O::ModelState::get_jumped;
	constexpr auto VisUpdateUsingCulling = O::BasePlayer::VisUpdateUsingCulling;
	constexpr auto IsDucked = O::BasePlayer::IsDucked;
	constexpr auto OnLand = O::BasePlayer::OnLand; // BasePlayer->OnLand
	constexpr auto get_position = O::PlayerEyes::get_position; // playereyes->get_position
	constexpr auto AssistPlayer = O::BasePlayer::Menu_AssistPlayer; // public void Menu_AssistPlayer(BasePlayer player) { }
	constexpr auto UpdateAmbient = O::TOD_Sky::UpdateAmbient; // public void UpdateAmbient() { } || TOD_Sky
	constexpr auto Launch = O::Projectile::Launch; // internal void Launch() { }
	constexpr auto get_isHeadshot = O::HitInfo::get_isHeadshot; // public bool get_isHeadshot() { }
	constexpr auto DoHitNotify = O::BaseCombatEntity::DoHitNotify; // public void DoHitNotify(HitInfo info) { }
	constexpr auto StartAttackCooldown = O::AttackEntity::StartAttackCooldown; // protected void StartAttackCooldown(float cooldown) { }
	constexpr auto ProcessAttack = O::BaseMelee::ProcessAttack; // protected virtual void ProcessAttack(HitTest hit) { }
	constexpr auto get_transform = O::UnityEngine_Component::get_transform; // public Transform get_transform() { } | UnityEngine::Component
	constexpr auto DoMovement = O::Projectile::DoMovement; // private void DoMovement(float deltaTime) { }
	constexpr auto DoHit = O::Projectile::DoHit; // private bool DoHit(HitTest test, Vector3 point, Vector3 normal) { }
	constexpr auto ClientInput = O::BasePlayer::ClientInput; // internal virtual void ClientInput(InputState state) { }
	constexpr auto set_flying = O::ModelState::set_flying; // public void set_flying(bool value) { }
	constexpr auto CanAttack = O::BasePlayer::CanAttack; // public bool CanAttack() { }
	constexpr auto SendClientTick = O::BasePlayer::SendClientTick; // internal void SendClientTick() { }
	constexpr auto HandleRunning = O::PlayerWalkMovement::HandleRunDuckCrawl; // private void HandleRunning(ModelState state, bool wantsRun) { }
	constexpr auto HandleJumping = O::PlayerWalkMovement::HandleJumping;
	constexpr auto CreateProjectile = O::BaseProjectile::CreateProjectile; // private Projectile CreateProjectile(string prefabPath, Vector3 pos, Vector3 forward, Vector3 velocity) { }
	constexpr auto CanHoldItems = O::BaseMountable::CanHoldItems; // public virtual bool CanHoldItems() { }
	constexpr auto SendProjectileAttack = O::BasePlayer::SendProjectileAttack; // public void SendProjectileAttack(PlayerProjectileAttack attack) { }
	constexpr auto ServerRPC = O::BaseEntity::ServerRPC;
	constexpr auto KnockDoor = O::Door::Menu_KnockDoor; // public void Menu_KnockDoor(BasePlayer player) { }
	constexpr auto OpenDoor = O::Door::Menu_OpenDoor; // public void Menu_OpenDoor(BasePlayer player) { }
	constexpr auto OpenHatch = O::Door::Menu_ToggleHatch; // public void Menu_ToggleHatch(BasePlayer player) { }

	// script.json
	constexpr auto BaseNetworkable = 56624008; // BaseNetworkable_TypeInfo
	constexpr auto ConvarGraphics = 56627016; // ConVar.Graphics_TypeInfo
	constexpr auto HitTest = 56616552; // HitTest_TypeInfo
	constexpr auto Client = 56619288; // ConVar.Client_TypeInfo

	// dump.cs
	constexpr auto IsUpgradeBlocked = 0x6F9730;
	constexpr auto get_Entity = 0x6439C0; // localplayer public static BasePlayer get_Entity() { }
	constexpr auto Magnitude2D = 0x1DB1D10;//public static float Magnitude2D(Vector3 v) { }
	constexpr auto CanAffordUpgrade = 0x6F7240;
	constexpr auto CanChangeToGrade = 0x6F7410;
	constexpr auto UpgradeToGrade = 0x6FAA30;
	constexpr auto MoveTowards = 0x23F7A80;
	constexpr auto IsBeingHacked = 0x5A6650;
	constexpr auto IsFullyHacked = 0x65E390;
	constexpr auto set_rayleigh = 0x466AC0;//public static void set_atmosphere_rayleigh(float value) { }
	constexpr auto IsHidden = 0x7F25D0; // public class StashContainer : StorageContainer
	constexpr auto GetModifiedAimConeDirection = 0xBAED30; // public static Vector3 GetModifiedAimConeDirection(float aimCone, Vector3 inputVec, bool anywhereInside = True) { }
	constexpr auto Run = 0x25172F0; // public static string Run(ConsoleSystem.Option options, string strCommand, object[] args) { }
	constexpr auto ClosestPoint = O::BaseEntity::ClosestPoint; // public Vector3 ClosestPoint(Vector3 position) { }
	//constexpr auto LineOfSight = 0x50ED80; // public static bool LineOfSight(Vector3 p0, Vector3 p1, int layerMask, float padding = 0) { }

	constexpr auto CreateEffect = 0xAF6060;//public static GameObject CreateEffect(string strPrefab, Effect effect) { }
}
