namespace O {
	namespace BaseNetworkable {
		constexpr auto JustCreatedk__BackingField = 0x18;
		constexpr auto entityDestroy = 0x20;
		constexpr auto postNetworkUpdateComponents = 0x28;
		constexpr auto parentEntity = 0x30;
		constexpr auto children = 0x40;
		constexpr auto canTriggerParent = 0x48;
		constexpr auto prefabID = 0x4c;
		constexpr auto globalBroadcast = 0x50;
		constexpr auto net = 0x58;
		constexpr auto IsDestroyedk__BackingField = 0x60;
		constexpr auto _prefabName = 0x68;
		constexpr auto _prefabNameWithoutExtension = 0x70;

		constexpr auto get_JustCreated = 0xa5efa0;
		constexpr auto set_JustCreated = 0xa5efc0;
		constexpr auto ClientSpawn = 0xaf8120;
		constexpr auto ClientOnEnable = 0xaf80a0;
		constexpr auto ClientInit = 0xaf7eb0;
		constexpr auto OnNetworkUpdate = 0xaf93d0;
		constexpr auto PreNetworkUpdate = 0x458ce0;
		constexpr auto PostNetworkUpdate = 0x458ce0;
		constexpr auto ShouldDestroyWithGroup = 0x5dbd60;
		constexpr auto ShouldDestroyImmediately = 0x591c80;
		constexpr auto NetworkDestroy = 0xaf8f60;
		constexpr auto DoClientDestroy = 0xaf84f0;
		constexpr auto DoNetworkDestroy = 0x458ce0;
		constexpr auto BroadcastOnPostNetworkUpdate = 0xaf7c90;
		constexpr auto PostProcess = 0xaf9550;
		constexpr auto GetParentEntity = 0xaf8890;
		constexpr auto HasParent = 0xaf88a0;
		constexpr auto AddChild = 0xaf7c00;
		constexpr auto OnChildAdded = 0x458ce0;
		constexpr auto RemoveChild = 0xaf95d0;
		constexpr auto OnChildRemoved = 0x458ce0;
		constexpr auto get_gameManager = 0xaf9a10;
		constexpr auto get_prefabAttribute = 0xaf9a70;
		constexpr auto get_IsDestroyed = 0xaf98f0;
		constexpr auto set_IsDestroyed = 0x7b1e60;
		constexpr auto get_PrefabName = 0xaf9900;
		constexpr auto get_ShortPrefabName = 0xaf9980;
		constexpr auto GetNetworkPosition = 0x9bb470;
		constexpr auto GetNetworkRotation = 0xaf8850;
		constexpr auto InvokeString = 0xaf88b0;
		constexpr auto LookupPrefab = 0xaf8ec0;
		constexpr auto EqualNetID = 0xaf8800;
		constexpr auto ResetState = 0xaf9640;
		constexpr auto InitShared = 0x458ce0;
		constexpr auto PreInitShared = 0x458ce0;
		constexpr auto PostInitShared = 0x458ce0;
		constexpr auto DestroyShared = 0x458ce0;
		constexpr auto OnNetworkGroupEnter = 0x458ce0;
		constexpr auto OnNetworkGroupLeave = 0x458ce0;
		constexpr auto OnNetworkGroupChange = 0xaf9290;
		constexpr auto OnNetworkSubscribersEnter = 0x458ce0;
		constexpr auto OnNetworkSubscribersLeave = 0x458ce0;
		constexpr auto EntityDestroy = 0xaf8710;
		constexpr auto DoEntityDestroy = 0xaf85b0;
		constexpr auto SpawnShared = 0xaf9690;
		constexpr auto Load = 0xaf8b00;
		constexpr auto get_isServer = 0x591c80;
		constexpr auto get_isClient = 0x5dbd60;
		constexpr auto OnRpcMessage = 0x591c80;
		constexpr auto ctor = 0xaf9850;
		constexpr auto cctor = 0xaf97a0;
	};

	namespace BasePlayer {
		constexpr auto __menuOption_Climb = 0x240;
		constexpr auto __menuOption_Drink = 0x298;
		constexpr auto __menuOption_InviteToTeam = 0x2f0;
		constexpr auto __menuOption_Menu_AssistPlayer = 0x348;
		constexpr auto __menuOption_Menu_LootPlayer = 0x3a0;
		constexpr auto __menuOption_Promote = 0x3f8;
		constexpr auto __menuOption_SaltWater = 0x450;
		constexpr auto lastOpenSoundPlay = 0x4a8;
		constexpr auto currentViewMode = 0x4ac;
		constexpr auto selectedViewMode = 0x4b0;
		constexpr auto lastRevivePoint = 0x4b4;
		constexpr auto lastReviveDirection = 0x4c0;
		constexpr auto playerModel = 0x4d0;
		constexpr auto Frozen = 0x4d8;
		constexpr auto voiceRecorder = 0x4e0;
		constexpr auto voiceSpeaker = 0x4e8;
		constexpr auto input = 0x4f0;
		constexpr auto movement = 0x4f8;
		constexpr auto collision = 0x500;
		constexpr auto emptyState = 0x8;
		constexpr auto _lookingAt = 0x508;
		constexpr auto _lookingAtEntity = 0x510;
		constexpr auto _lookingAtCollider = 0x518;
		constexpr auto lookingAtPointk__BackingField = 0x520;
		constexpr auto wakeTime = 0x52c;
		constexpr auto needsClothesRebuild = 0x530;
		constexpr auto wasSleeping = 0x531;
		constexpr auto wokeUpBefore = 0x532;
		constexpr auto wasDead = 0x533;
		constexpr auto lastClothesHash = 0x534;
		constexpr auto visiblePlayerList = 0x10;
		constexpr auto craftMode = 0x18;
		constexpr auto IsWearingDiveGogglesk__BackingField = 0x538;
		constexpr auto GestureViewModel = 0x540;
		constexpr auto timeSinceUpdatedLookingAt = 0x548;
		constexpr auto nextTopologyTestTime = 0x54c;
		constexpr auto usePressTime = 0x550;
		constexpr auto useHeldTime = 0x554;
		constexpr auto lookingAtTest = 0x558;
		constexpr auto lastDeathTimeClient = 0x1c;
		constexpr auto cachedWaterDrinkingPoint = 0x560;
		constexpr auto gestureList = 0x570;
		constexpr auto gestureFinishedTime = 0x578;
		constexpr auto blockHeldInputTimer = 0x57c;
		constexpr auto currentGesture = 0x580;
		constexpr auto disabledHeldEntity = 0x588;
		constexpr auto nextGestureMenuOpenTime = 0x590;
		constexpr auto lastGestureCancel = 0x594;
		constexpr auto client_lastHelloTime = 0x598;
		constexpr auto currentTeam = 0x5a0;
		constexpr auto MaxTeamSizeToast = 0x20;
		constexpr auto clientTeam = 0x5a8;
		constexpr auto lastReceivedTeamTime = 0x5b0;
		constexpr auto lastPresenceTeamId = 0x5b8;
		constexpr auto lastPresenceTeamSize = 0x5c0;
		constexpr auto playerGroupKey = 0x5c8;
		constexpr auto playerGroupSizeKey = 0x5d0;
		constexpr auto clActiveItem = 0x5d8;
		constexpr auto ClientCurrentMapNote = 0x5e0;
		constexpr auto ClientCurrentDeathNote = 0x5e8;
		constexpr auto missions = 0x5f0;
		constexpr auto _activeMission = 0x5f8;
		constexpr auto modelState = 0x600;
		constexpr auto mounted = 0x608;
		constexpr auto nextSeatSwapTime = 0x618;
		constexpr auto PetEntity = 0x620;
		constexpr auto lastPetCommandIssuedTime = 0x628;
		constexpr auto PetPrefabID = 0x62c;
		constexpr auto PetID = 0x630;
		constexpr auto PetWheelHasBeenOpened = 0x28;
		constexpr auto cachedBuildingPrivilegeTime = 0x634;
		constexpr auto cachedBuildingPrivilege = 0x638;
		constexpr auto maxProjectileID = 0x640;
		constexpr auto lastUpdateTime = 0x644;
		constexpr auto cachedThreatLevel = 0x648;
		constexpr auto serverTickRate = 0x64c;
		constexpr auto clientTickRate = 0x650;
		constexpr auto serverTickInterval = 0x654;
		constexpr auto clientTickInterval = 0x658;
		constexpr auto lastSentTickTime = 0x65c;
		constexpr auto lastTickStopwatch = 0x660;
		constexpr auto lastSentTick = 0x668;
		constexpr auto nextVisThink = 0x670;
		constexpr auto lastTimeSeen = 0x674;
		constexpr auto debugPrevVisible = 0x678;
		constexpr auto fallDamageEffect = 0x680;
		constexpr auto drownEffect = 0x688;
		constexpr auto playerFlags = 0x690;
		constexpr auto eyes = 0x698;
		constexpr auto inventory = 0x6a0;
		constexpr auto blueprints = 0x6a8;
		constexpr auto metabolism = 0x6b0;
		constexpr auto modifiers = 0x6b8;
		constexpr auto playerCollider = 0x6c0;
		constexpr auto Belt = 0x6c8;
		constexpr auto playerRigidbody = 0x6d0;
		constexpr auto userID = 0x6d8;
		constexpr auto UserIDString = 0x6e0;
		constexpr auto gamemodeteam = 0x6e8;
		constexpr auto reputation = 0x6ec;
		constexpr auto _displayName = 0x6f0;
		constexpr auto _lastSetName = 0x6f8;
		constexpr auto playerColliderStanding = 0x700;
		constexpr auto playerColliderDucked = 0x714;
		constexpr auto playerColliderCrawling = 0x728;
		constexpr auto playerColliderLyingDown = 0x73c;
		constexpr auto cachedProtection = 0x750;
		constexpr auto oldCameraFix = 0x29;
		constexpr auto lastHeadshotSoundTime = 0x758;
		constexpr auto nextColliderRefreshTime = 0x75c;
		constexpr auto clothingBlocksAiming = 0x760;
		constexpr auto clothingMoveSpeedReduction = 0x764;
		constexpr auto clothingWaterSpeedBonus = 0x768;
		constexpr auto clothingAccuracyBonus = 0x76c;
		constexpr auto equippingBlocked = 0x770;
		constexpr auto eggVision = 0x774;
		constexpr auto activeTelephone = 0x778;
		constexpr auto designingAIEntity = 0x780;

		constexpr auto GetMenuOptions = 0x6d4380;
		constexpr auto get_HasMenuOptions = 0x6eeea0;
		constexpr auto OnRpcMessage = 0x6dc6e0;
		constexpr auto CanBeLooted = 0x6ca1f0;
		constexpr auto get_LootPanelTitle = 0x6ef3e0;
		constexpr auto Menu_LootPlayer = 0x6db5b0;
		constexpr auto Menu_LootPlayer_ShowIf = 0x6db590;
		constexpr auto RPC_OpenLootPanel = 0x6e6fa0;
		constexpr auto PlayOpenSound = 0x6e5310;
		constexpr auto InFirstPersonMode = 0x6d72a0;
		constexpr auto UpdateViewMode = 0x6ed190;
		constexpr auto get_idealViewMode = 0x6ef550;
		constexpr auto get_shouldDrawBody = 0x6ef9b0;
		constexpr auto OnViewModeChanged = 0x6e4dd0;
		constexpr auto ModifyCamera = 0x6db620;
		constexpr auto Menu_AssistPlayer = 0x6db550;
		constexpr auto Menu_AssistPlayer_TimeStart = 0x6db510;
		constexpr auto Menu_AssistPlayer_ShowIf = 0x6db280;
		constexpr auto get_lookingAt = 0x6ef960;
		constexpr auto get_lookingAtEntity = 0x6ef8f0;
		constexpr auto get_lookingAtCollider = 0x6ef8a0;
		constexpr auto get_lookingAtPoint = 0x6ef940;
		constexpr auto set_lookingAtPoint = 0x6efd70;
		constexpr auto GetExtrapolationTime = 0x6d36d0;
		constexpr auto GetLocalVelocityClient = 0x6d4180;
		constexpr auto ClientInit = 0x6cbcf0;
		constexpr auto CreatePlayerModel = 0x6d0a10;
		constexpr auto CreatePlayerCollision = 0x6d0860;
		constexpr auto CreatePlayerMovement = 0x6d0f30;
		constexpr auto InitLocalPlayer = 0x6d73e0;
		constexpr auto InitRemotePlayer = 0x6d76c0;
		constexpr auto HasLocalControls = 0x6d6950;
		constexpr auto SetNetworkPosition = 0x6e9cd0;
		constexpr auto SetNetworkRotation = 0x6e9d80;
		constexpr auto DoClientDestroy = 0x6d13f0;
		constexpr auto PostNetworkUpdate = 0x6e5a80;
		constexpr auto OnFirstWakeUp = 0x6dc010;
		constexpr auto get_TimeAwake = 0x6ef410;
		constexpr auto CL_ClothingChanged = 0x6c97f0;
		constexpr auto ForceRebuild = 0x6d2ae0;
		constexpr auto RebuildWorldModel = 0x6e7440;
		constexpr auto SetDefaultFootstepEffects = 0x6e9460;
		constexpr auto OnSignal = 0x6e4850;
		constexpr auto FindBone = 0x6d20f0;
		constexpr auto GetBones = 0x6d2c10;
		constexpr auto ShouldLerp = 0x6ea590;
		constexpr auto get_VisiblePlayerList = 0x6ef470;
		constexpr auto ClearVisibility = 0x6cb820;
		constexpr auto RegisterForVisibility = 0x6e7be0;
		constexpr auto UnregisterFromVisibility = 0x6eaef0;
		constexpr auto FindByID_Clientside = 0x6d21f0;
		constexpr auto Find_Clientside = 0x6d23c0;
		constexpr auto GetRandomFloatBasedOnUserID = 0x6d6170;
		constexpr auto DisplayHealthInfo = 0x591c80;
		constexpr auto ShouldDestroyWithGroup = 0x6ea560;
		constexpr auto SetInheritedVelocity = 0x6e9920;
		constexpr auto GetPerformanceReport = 0x6d5eb0;
		constexpr auto GetPerformanceReport_Frametime = 0x6d5a30;
		constexpr auto OnBecameRagdoll = 0x6dba40;
		constexpr auto OnVoiceData = 0x6e52d0;
		constexpr auto RecieveAchievement = 0x6e77b0;
		constexpr auto CraftMode = 0x6d05f0;
		constexpr auto StartDesigningAI = 0x6ea8e0;
		constexpr auto OnDebugAIEventTriggeredStateChange = 0x6dbdc0;
		constexpr auto ClientOnEnable = 0x6ccc90;
		constexpr auto Client_OnRepairFailedResources = 0x6cf070;
		constexpr auto TakeDamageHit = 0x6eab50;
		constexpr auto AdminReceivedUGC = 0x6c7dc0;
		constexpr auto AdminReceivedPatternFirework = 0x6c7d00;
		constexpr auto get_IsWearingDiveGoggles = 0x6ef3d0;
		constexpr auto set_IsWearingDiveGoggles = 0x6efb60;
		constexpr auto UpdateClothesIfNeeded = 0x6eb040;
		constexpr auto MakeVisible = 0x6daf80;
		constexpr auto ClientUpdate_Sleeping = 0x6ce150;
		constexpr auto ClientUpdate = 0x6ce530;
		constexpr auto RebuildClothingItems = 0x6e7220;
		constexpr auto UpdateClothingItems = 0x6eb530;
		constexpr auto UpdateHolsterOffsets = 0x6ebc60;
		constexpr auto PostLateClientCycle = 0x6e59c0;
		constexpr auto IsLocalPlayer = 0x6d9100;
		constexpr auto ClientUpdateLocalPlayer = 0x6ccdf0;
		constexpr auto UpdateTopologyStats = 0x6ed030;
		constexpr auto ClientTick = 0x6ccd40;
		constexpr auto DoMovement = 0x6d16e0;
		constexpr auto MountableOverrideViewAngles = 0x6db710;
		constexpr auto BlockSprint = 0x6c8d30;
		constexpr auto BlockJump = 0x6c8c90;
		constexpr auto ClientInput = 0x6cc1e0;
		constexpr auto UseAction = 0x6ed4f0;
		constexpr auto GetInteractionEntity = 0x6d3c70;
		constexpr auto QuickUse = 0x6e6e00;
		constexpr auto LongUse = 0x6daec0;
		constexpr auto UseStop = 0x6ed7c0;
		constexpr auto UpdateLookingAt = 0x6ebdf0;
		constexpr auto ResetLookingAt = 0x6e8030;
		constexpr auto SetLookingAt = 0x6e9ab0;
		constexpr auto CheckLookingAtVisible = 0x6cb020;
		constexpr auto FindVehicleParentFor = 0x6d2280;
		constexpr auto OnDied = 0x6dbf30;
		constexpr auto OnRespawnInformation = 0x6dc340;
		constexpr auto RequestRespawnUpdates = 0x6e7ee0;
		constexpr auto OnLand = 0x6dc150;
		constexpr auto StartLoading = 0x6eaa70;
		constexpr auto FinishLoading = 0x6d2660;
		constexpr auto FullBlack_FadeIn = 0x6d2af0;
		constexpr auto FinishedLoadingRoutine = 0x6d27b0;
		constexpr auto DirectionalDamage = 0x6d11d0;
		constexpr auto UnlockedBlueprint = 0x6eae80;
		constexpr auto CheckForRespawnInfo = 0x6cafb0;
		constexpr auto UpdateRichPresenceState = 0x6ecd90;
		constexpr auto HandleCompanionPairingResult = 0x6d6450;
		constexpr auto UpdateWaterDrinkingPoint = 0x6ed1d0;
		constexpr auto GetWaterDrinkingPoint = 0x6d6430;
		constexpr auto Drink = 0x6d1980;
		constexpr auto Drink_ShowIf = 0x6d17a0;
		constexpr auto SaltWater = 0x458ce0;
		constexpr auto SaltWater_ShowIf = 0x6e81b0;
		constexpr auto Climb = 0x6cfd70;
		constexpr auto Climb_ShowIf = 0x6cfaa0;
		constexpr auto HasPlayerFlag = 0x6d69c0;
		constexpr auto get_IsReceivingSnapshot = 0x6ef3c0;
		constexpr auto get_IsAdmin = 0x6ef2e0;
		constexpr auto get_IsDeveloper = 0x6ef390;
		constexpr auto get_IsAiming = 0x6ef2f0;
		constexpr auto get_IsFlying = 0x6ef3a0;
		constexpr auto get_IsConnected = 0x6ef300;
		constexpr auto get_InGesture = 0x6ef230;
		constexpr auto get_CurrentGestureBlocksMovement = 0x6eed80;
		constexpr auto get_CurrentGestureIsDance = 0x6eedc0;
		constexpr auto get_CurrentGestureIsFullBody = 0x6eee00;
		constexpr auto get_InGestureCancelCooldown = 0x6ef200;
		constexpr auto SetGestureMenuOpen = 0x6e9520;
		constexpr auto RequestStartGesture = 0x6e7f80;
		constexpr auto Client_StartGesture = 0x6cf5d0;
		constexpr auto ProcessDanceAction = 0x6e6170;
		constexpr auto SayingHello = 0x6e8500;
		constexpr auto ProcessGestureStart = 0x6e6680;
		constexpr auto EndGesture = 0x6d1ca0;
		constexpr auto EndLocalGesture = 0x6d1d40;
		constexpr auto EndGestureShared = 0x6d1b30;
		constexpr auto HideHeldEntity = 0x6d7130;
		constexpr auto CancelGesture = 0x6cacd0;
		constexpr auto RemoteGestureCancel = 0x6e7cd0;
		constexpr auto CancelGestureInput = 0x6ca8b0;
		constexpr auto ClearGestureCooldown = 0x6cb6d0;
		constexpr auto ConVarRequestStartGesture = 0x6d0380;
		constexpr auto Client_RemoteCancelledGesture = 0x6cf580;
		constexpr auto IsGestureBlocked = 0x6d8950;
		constexpr auto get_clientTeamLifetime = 0x6ef4e0;
		constexpr auto CLIENT_ReceiveTeamInfo = 0x6c9320;
		constexpr auto UpdateSteamGroup = 0x6ecde0;
		constexpr auto ClearSteamGroup = 0x6cb700;
		constexpr auto CLIENT_ClearTeam = 0x6c8dd0;
		constexpr auto CLIENT_PendingInvite = 0x6c8f70;
		constexpr auto InviteToTeam = 0x6d7730;
		constexpr auto Promote = 0x6e6c70;
		constexpr auto Menu_Promote_Start = 0x458ce0;
		constexpr auto Promote_ShowIf = 0x6e68a0;
		constexpr auto LocalPlayerIsLeader = 0x6da9c0;
		constexpr auto Invite_ShowIf = 0x6d7c90;
		constexpr auto GetHeldEntity = 0x6d37c0;
		constexpr auto GetHeldItem = 0x6d3a00;
		constexpr auto GetHeldItemID = 0x6d39b0;
		constexpr auto HeldEntityViewAngles = 0x6d6f10;
		constexpr auto HeldEntityFrame = 0x6d6aa0;
		constexpr auto HeldEntityInput = 0x6d6c70;
		constexpr auto HeldItemUse = 0x6d7030;
		constexpr auto HeldEntityStart = 0x6d6e40;
		constexpr auto HeldEntityEnd = 0x6d69d0;
		constexpr auto IsHostileItem = 0x6d8d10;
		constexpr auto IsItemHoldRestricted = 0x6d8e70;
		constexpr auto MapInfoOnEnable = 0x6db030;
		constexpr auto Client_ReceiveMarkers = 0x6cf240;
		constexpr auto Client_UpdateDeathMarker = 0x6cf970;
		constexpr auto Client_AddNewDeathMarker = 0x6cef30;
		constexpr auto AddPointOfInterest = 0x6c7c20;
		constexpr auto ClearAllPointsOfInterest = 0x6cb580;
		constexpr auto ClearAllMapMarkers = 0x6cb420;
		constexpr auto HasAttemptedMission = 0x6d6500;
		constexpr auto CanAcceptMission = 0x6c9b30;
		constexpr auto IsMissionActive = 0x6d91e0;
		constexpr auto HasCompletedMission = 0x6d6670;
		constexpr auto HasFailedMission = 0x6d67e0;
		constexpr auto SetActiveMission = 0x6e9440;
		constexpr auto GetActiveMission = 0x6d2c00;
		constexpr auto HasActiveMission = 0x6d64f0;
		constexpr auto LoadMissions = 0x6d9fa0;
		constexpr auto OnModelState = 0x6dc2b0;
		constexpr auto OnModelStateChanged = 0x6dc210;
		constexpr auto get_isMounted = 0x6ef7a0;
		constexpr auto get_isMountingHidingWeapon = 0x6ef7d0;
		constexpr auto GetMounted = 0x6d54f0;
		constexpr auto GetMountedVehicle = 0x6d54a0;
		constexpr auto MarkSwapSeat = 0x6db080;
		constexpr auto SwapSeatCooldown = 0x6eab20;
		constexpr auto ClientUpdateMounted = 0x6cdc10;
		constexpr auto CLIENT_SetPetPrefabID = 0x6c9720;
		constexpr auto CLIENT_SetPetPetLoadedStateIndex = 0x6c9570;
		constexpr auto LinkPet = 0x6d9e50;
		constexpr auto SetPetMenuOpen = 0x6e9e90;
		constexpr auto ClientIssuePetCommand = 0x6ccba0;
		constexpr auto IsSleeping = 0x6d94c0;
		constexpr auto IsSpectating = 0x6d94d0;
		constexpr auto IsRelaxed = 0x6d93f0;
		constexpr auto IsServerFalling = 0x6d94b0;
		constexpr auto GetBuildingPrivilege = 0x6d3020;
		constexpr auto CanBuild = 0x6ca4c0;
		constexpr auto IsBuildingBlocked = 0x6d86e0;
		constexpr auto IsBuildingAuthed = 0x6d82a0;
		constexpr auto CanPlaceBuildingPrivilege = 0x6ca650;
		constexpr auto NewProjectileID = 0x6db7a0;
		constexpr auto NewProjectileSeed = 0x6db7b0;
		constexpr auto SendProjectileAttack = 0x6e9190;
		constexpr auto SendProjectileRicochet = 0x6e91e0;
		constexpr auto SendProjectileUpdate = 0x6e9230;
		constexpr auto Load = 0x6da560;
		constexpr auto SpectatedPlayerHeadshot = 0x6ea850;
		constexpr auto GetThreatLevel = 0x6d6410;
		constexpr auto EnsureUpdated = 0x6d1e60;
		constexpr auto SetHostileLength = 0x6e9870;
		constexpr auto SetWeaponDrawnDuration = 0x6ea4c0;
		constexpr auto ModifyInputState = 0x458ce0;
		constexpr auto ForcePositionToParentOffset = 0x6d2820;
		constexpr auto UpdateClientTickRate = 0x6eafe0;
		constexpr auto ForcePositionTo = 0x6d2950;
		constexpr auto SendVoiceData = 0x6e9280;
		constexpr auto SendClientTick = 0x6e8aa0;
		constexpr auto NotifyUnderwearChange = 0x6db810;
		constexpr auto UpdatePlayerVisibilities = 0x6eca90;
		constexpr auto TimeSinceSeen = 0x6eac80;
		constexpr auto SetNextVisThink = 0x6e9e60;
		constexpr auto WantsVisUpdate = 0x6ee300;
		constexpr auto IsAimingAt = 0x6d7ed0;
		constexpr auto UpdateCullingSpheres = 0x6eb990;
		constexpr auto VisUpdateUsingCulling = 0x6ed940;
		constexpr auto VisUpdateUsingRays = 0x6eda50;
		constexpr auto LogDebugCull = 0x6dab70;
		constexpr auto OnVisibilityChanged = 0x6e4fd0;
		constexpr auto VisUpdate = 0x6ede70;
		constexpr auto VisPlayerArmed = 0x6ed880;
		constexpr auto AnyPartVisible = 0x6c8090;
		constexpr auto CalcVisUpdateRate = 0x6c99f0;
		constexpr auto PointSeePoint = 0x6e56f0;
		constexpr auto IsWounded = 0x6d97b0;
		constexpr auto IsCrawling = 0x6d8790;
		constexpr auto IsIncapacitated = 0x6d8e60;
		constexpr auto ToPlayer = 0x5b8600;
		constexpr auto get_Connection = 0x6eed70;
		constexpr auto get_displayName = 0x6ef530;
		constexpr auto set_displayName = 0x6efb70;
		constexpr auto SanitizePlayerNameString = 0x6e8380;
		constexpr auto IsGod = 0x6d8c40;
		constexpr auto GetNetworkRotation = 0x6d5590;
		constexpr auto CanInteract = 0x6ca5f0;
		constexpr auto StartHealth = 0x6eaa50;
		constexpr auto StartMaxHealth = 0x6e5300;
		constexpr auto MaxHealth = 0x6db0c0;
		constexpr auto MaxVelocity = 0x6db170;
		constexpr auto WorldSpaceBounds = 0x6ee7e0;
		constexpr auto GetMountVelocity = 0x6d53d0;
		constexpr auto GetInheritedProjectileVelocity = 0x6d3af0;
		constexpr auto GetInheritedThrowVelocity = 0x6d3bb0;
		constexpr auto GetInheritedDropVelocity = 0x6d3a30;
		constexpr auto PreInitShared = 0x6e5d00;
		constexpr auto DestroyShared = 0x6d1150;
		constexpr auto InSafeZone = 0x6d72c0;
		constexpr auto LateClientCycle = 0x6d97c0;
		constexpr auto ClientCycle = 0x6cb9e0;
		constexpr auto GetBounds = 0x6d2ca0;
		constexpr auto GetCenter = 0x6d30f0;
		constexpr auto GetOffset = 0x6d56b0;
		constexpr auto GetSize = 0x6d6270;
		constexpr auto GetHeight = 0x6d37a0;
		constexpr auto GetRadius = 0x6d6160;
		constexpr auto GetJumpHeight = 0x6d4170;
		constexpr auto TriggerPoint = 0x6ead80;
		constexpr auto NoClipOffset = 0x6db7c0;
		constexpr auto NoClipRadius = 0x6db800;
		constexpr auto MaxDeployDistance = 0x6db0b0;
		constexpr auto ClientUpdatePersistantData = 0x6ce120;
		constexpr auto GetMinSpeed = 0x6d53a0;
		constexpr auto GetMaxSpeed = 0x6d4350;
		constexpr auto GetSpeed = 0x6d62d0;
		constexpr auto OnAttacked = 0x6db850;
		constexpr auto EnablePlayerCollider = 0x6d1ad0;
		constexpr auto DisablePlayerCollider = 0x6d1390;
		constexpr auto RefreshColliderSize = 0x6e78d0;
		constexpr auto SetPlayerRigidbodyState = 0x6ea4a0;
		constexpr auto AddPlayerRigidbody = 0x6c7aa0;
		constexpr auto RemovePlayerRigidbody = 0x6e7db0;
		constexpr auto IsEnsnared = 0x6d8860;
		constexpr auto IsAttacking = 0x6d80a0;
		constexpr auto CanAttack = 0x6c9fa0;
		constexpr auto OnLadder = 0x6dc0c0;
		constexpr auto IsSwimming = 0x6d9760;
		constexpr auto IsHeadUnderwater = 0x6d8cc0;
		constexpr auto IsOnGround = 0x6d9350;
		constexpr auto IsRunning = 0x6d9400;
		constexpr auto IsDucked = 0x6d87b0;
		constexpr auto RecentlyTeleported = 0x6e7720;
		constexpr auto ShowToast = 0x6ea5f0;
		constexpr auto ChatMessage = 0x6cada0;
		constexpr auto ConsoleMessage = 0x6d0530;
		constexpr auto PenetrationResistance = 0x6e5300;
		constexpr auto ScaleDamage = 0x6e8810;
		constexpr auto UpdateMoveSpeedFromClothing = 0x6ec6c0;
		constexpr auto UpdateProtectionFromClothing = 0x6ecc70;
		constexpr auto Categorize = 0x6cad70;
		constexpr auto ToString = 0x6eaca0;
		constexpr auto GetDebugStatus = 0x6d3380;
		constexpr auto GetItem = 0x6d40c0;
		constexpr auto get_Traits = 0x6ef450;
		constexpr auto WaterFactor = 0x6ee320;
		constexpr auto AirFactor = 0x6c7fe0;
		constexpr auto GetOxygenTime = 0x6d5700;
		constexpr auto ShouldInheritNetworkGroup = 0x6d94d0;
		constexpr auto AnyPlayersVisibleToEntity = 0x6c86d0;
		constexpr auto IsStandingOnEntity = 0x6d94e0;
		constexpr auto SetActiveTelephone = 0x6e9450;
		constexpr auto get_HasActiveTelephone = 0x6eee40;
		constexpr auto get_IsDesigningAI = 0x6ef330;
		constexpr auto ClearDesigningAIEntity = 0x6cb6b0;
		constexpr auto ctor = 0x6eebc0;
		constexpr auto cctor = 0x6eea70;
	};

	namespace BaseMovement {
		constexpr auto adminCheat = 0x18;
		constexpr auto adminSpeed = 0x1c;
		constexpr auto Ownerk__BackingField = 0x20;
		constexpr auto InheritedVelocityk__BackingField = 0x28;
		constexpr auto TargetMovementk__BackingField = 0x34;
		constexpr auto Runningk__BackingField = 0x40;
		constexpr auto Duckingk__BackingField = 0x44;
		constexpr auto Crawlingk__BackingField = 0x48;
		constexpr auto Groundedk__BackingField = 0x4c;
		constexpr auto lastTeleportedTime = 0x50;

		constexpr auto get_Owner = 0x590fb0;
		constexpr auto set_Owner = 0x590fe0;
		constexpr auto get_InheritedVelocity = 0x824d00;
		constexpr auto set_InheritedVelocity = 0x5c0ef0;
		constexpr auto get_TargetMovement = 0xaf7920;
		constexpr auto set_TargetMovement = 0x5c0ee0;
		constexpr auto get_Running = 0x5fdc90;
		constexpr auto set_Running = 0x5fdca0;
		constexpr auto get_Ducking = 0x910f30;
		constexpr auto set_Ducking = 0x97ac70;
		constexpr auto get_Crawling = 0x7b0c90;
		constexpr auto set_Crawling = 0x7b0ca0;
		constexpr auto get_Grounded = 0x5c0eb0;
		constexpr auto set_Grounded = 0x5c0f10;
		constexpr auto get_IsRunning = 0xaf78e0;
		constexpr auto get_IsDucked = 0xaf78c0;
		constexpr auto get_IsCrawling = 0xaf78b0;
		constexpr auto get_IsGrounded = 0xaf78d0;
		constexpr auto CurrentVelocity = 0xaf7630;
		constexpr auto CurrentMoveSpeed = 0x82c680;
		constexpr auto GetCollider = 0x5b1c10;
		constexpr auto Init = 0x590fe0;
		constexpr auto BlockJump = 0x458ce0;
		constexpr auto BlockSprint = 0x458ce0;
		constexpr auto get_RecentlyTeleported = 0xaf78f0;
		constexpr auto ClientInput = 0x458ce0;
		constexpr auto DoFixedUpdate = 0x458ce0;
		constexpr auto FrameUpdate = 0xaf7720;
		constexpr auto TeleportTo = 0xaf7810;
		constexpr auto Push = 0x458ce0;
		constexpr auto SetParent = 0x458ce0;
		constexpr auto FixedUpdate = 0xaf76a0;
		constexpr auto PlayerAttemptedMount = 0x458ce0;
		constexpr auto PlayerCompletedMount = 0x458ce0;
		constexpr auto ctor = 0x7b63e0;
	};

	namespace BaseProjectile {
		constexpr auto NoiseRadius = 0x280;
		constexpr auto damageScale = 0x284;
		constexpr auto distanceScale = 0x288;
		constexpr auto projectileVelocityScale = 0x28c;
		constexpr auto automatic = 0x290;
		constexpr auto usableByTurret = 0x291;
		constexpr auto turretDamageScale = 0x294;
		constexpr auto attackFX = 0x298;
		constexpr auto silencedAttack = 0x2a0;
		constexpr auto muzzleBrakeAttack = 0x2a8;
		constexpr auto MuzzlePoint = 0x2b0;
		constexpr auto reloadTime = 0x2b8;
		constexpr auto canUnloadAmmo = 0x2bc;
		constexpr auto primaryMagazine = 0x2c0;
		constexpr auto fractionalReload = 0x2c8;
		constexpr auto reloadStartDuration = 0x2cc;
		constexpr auto reloadFractionDuration = 0x2d0;
		constexpr auto reloadEndDuration = 0x2d4;
		constexpr auto aimSway = 0x2d8;
		constexpr auto aimSwaySpeed = 0x2dc;
		constexpr auto recoil = 0x2e0;
		constexpr auto aimconeCurve = 0x2e8;
		constexpr auto aimCone = 0x2f0;
		constexpr auto hipAimCone = 0x2f4;
		constexpr auto aimconePenaltyPerShot = 0x2f8;
		constexpr auto aimConePenaltyMax = 0x2fc;
		constexpr auto aimconePenaltyRecoverTime = 0x300;
		constexpr auto aimconePenaltyRecoverDelay = 0x304;
		constexpr auto stancePenaltyScale = 0x308;
		constexpr auto hasADS = 0x30c;
		constexpr auto noAimingWhileCycling = 0x30d;
		constexpr auto manualCycle = 0x30e;
		constexpr auto needsCycle = 0x30f;
		constexpr auto isCycling = 0x310;
		constexpr auto aiming = 0x311;
		constexpr auto resetDuration = 0x314;
		constexpr auto numShotsFired = 0x318;
		constexpr auto nextReloadTime = 0x31c;
		constexpr auto startReloadTime = 0x320;
		constexpr auto stancePenalty = 0x324;
		constexpr auto aimconePenalty = 0x328;
		constexpr auto cachedModHash = 0x32c;
		constexpr auto sightAimConeScale = 0x330;
		constexpr auto sightAimConeOffset = 0x334;
		constexpr auto hipAimConeScale = 0x338;
		constexpr auto hipAimConeOffset = 0x33c;
		constexpr auto isReloading = 0x340;
		constexpr auto swaySampleTime = 0x344;
		constexpr auto lastShotTime = 0x348;
		constexpr auto reloadPressTime = 0x34c;
		constexpr auto ammoTypePreReload = 0x350;
		constexpr auto fractionalReloadDesiredCount = 0x358;
		constexpr auto fractionalReloadNumAdded = 0x35c;
		constexpr auto triggerReady = 0x360;
		constexpr auto nextHeightCheckTime = 0x364;
		constexpr auto cachedUnderground = 0x368;
		constexpr auto createdProjectiles = 0x370;

		constexpr auto OnRpcMessage = 0xa24bb0;
		constexpr auto get_recoilProperties = 0xa26710;
		constexpr auto GetInheritedVelocity = 0xa221b0;
		constexpr auto GetDamageScale = 0xa22190;
		constexpr auto GetDistanceScale = 0xa221a0;
		constexpr auto GetProjectileVelocityScale = 0xa22990;
		constexpr auto StartReloadCooldown = 0xa26390;
		constexpr auto ResetReloadCooldown = 0xa257b0;
		constexpr auto HasReloadCooldown = 0xa230b0;
		constexpr auto GetReloadCooldown = 0xa229b0;
		constexpr auto GetReloadIdle = 0xa22b10;
		constexpr auto OnDrawGizmos = 0xa243f0;
		constexpr auto GetRecoil = 0xa229a0;
		constexpr auto get_isSemiAuto = 0xa26700;
		constexpr auto GetAimCone = 0xa21680;
		constexpr auto ScaleRepeatDelay = 0xa257c0;
		constexpr auto GetProjectileModifier = 0xa22350;
		constexpr auto DidAttackClientside = 0xa1fb70;
		constexpr auto GetItemOptions = 0xa22200;
		constexpr auto ClientIsReloading = 0xa1f890;
		constexpr auto NotifySpectatorReloading = 0xa243a0;
		constexpr auto EditViewAngles = 0xa20c80;
		constexpr auto OnFrame = 0xa247c0;
		constexpr auto ShotFired = 0xa25af0;
		constexpr auto SimulateAimcone = 0xa25b50;
		constexpr auto CanAttack = 0xa1f690;
		constexpr auto CanAim = 0xa1f660;
		constexpr auto OnInput = 0xa247d0;
		constexpr auto ReadyToAim = 0xa25700;
		constexpr auto ReadyToFire = 0xa25750;
		constexpr auto AmmoTypeClicked = 0xa1f540;
		constexpr auto AddAmmoOption = 0xa1f390;
		constexpr auto GetReloadMenu = 0xa22b90;
		constexpr auto PredictAmmoType = 0xa25360;
		constexpr auto HasMoreThanOneAmmoType = 0xa22e00;
		constexpr auto OnDeploy = 0xa243b0;
		constexpr auto DoReload = 0xa20700;
		constexpr auto InsertAmmoFraction = 0xa230e0;
		constexpr auto CancelFractionalReloading = 0xa1f6b0;
		constexpr auto ClientFinishFractionalReload = 0xa1f750;
		constexpr auto ClientSingleReload = 0xa1f8a0;
		constexpr auto DoAttack = 0xa1fc40;
		constexpr auto BeginCycle = 0xa1f5d0;
		constexpr auto LaunchProjectile = 0xa241b0;
		constexpr auto DryFire = 0xa20bc0;
		constexpr auto ProcessSpectatorViewmodel = 0xa256a0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0xa25590;
		constexpr auto GetReloadDuration = 0xa22a30;
		constexpr auto GetAvailableAmmo = 0xa21f80;
		constexpr auto IsSilenced = 0xa23140;
		constexpr auto FiredUnderground = 0xa215f0;
		constexpr auto OnSignal = 0xa24ca0;
		constexpr auto LaunchProjectileClientside = 0xa23320;
		constexpr auto CreateProjectile = 0xa1f9e0;
		constexpr auto UpdateAmmoDisplay = 0xa263e0;
		constexpr auto get_UsingInfiniteAmmoCheat = 0x591c80;
		constexpr auto Load = 0xa24300;
		constexpr auto ctor = 0xa26490;
	};

	namespace PlayerWalkMovement {
		constexpr auto zeroFrictionMaterial = 0x58;
		constexpr auto highFrictionMaterial = 0x60;
		constexpr auto capsuleHeight = 0x68;
		constexpr auto capsuleCenter = 0x6c;
		constexpr auto capsuleHeightDucked = 0x70;
		constexpr auto capsuleCenterDucked = 0x74;
		constexpr auto capsuleHeightCrawling = 0x78;
		constexpr auto capsuleCenterCrawling = 0x7c;
		constexpr auto gravityTestRadius = 0x80;
		constexpr auto gravityMultiplier = 0x84;
		constexpr auto gravityMultiplierSwimming = 0x88;
		constexpr auto maxAngleWalking = 0x8c;
		constexpr auto maxAngleClimbing = 0x90;
		constexpr auto maxAngleSliding = 0x94;
		constexpr auto maxStepHeight = 0x98;
		constexpr auto body = 0xa0;
		constexpr auto initialColDetectionMode = 0xa8;
		constexpr auto capsule = 0xb0;
		constexpr auto ladder = 0xb8;
		constexpr auto maxVelocity = 0xc0;
		constexpr auto groundAngle = 0xc4;
		constexpr auto groundAngleNew = 0xc8;
		constexpr auto groundTime = 0xcc;
		constexpr auto jumpTime = 0xd0;
		constexpr auto landTime = 0xd4;
		constexpr auto previousPosition = 0xd8;
		constexpr auto previousVelocity = 0xe4;
		constexpr auto previousInheritedVelocity = 0xf0;
		constexpr auto groundNormal = 0xfc;
		constexpr auto groundNormalNew = 0x108;
		constexpr auto groundVelocity = 0x114;
		constexpr auto groundVelocityNew = 0x120;
		constexpr auto nextSprintTime = 0x12c;
		constexpr auto lastSprintTime = 0x130;
		constexpr auto sprintForced = 0x134;
		constexpr auto attemptedMountTime = 0x138;
		constexpr auto modify = 0x13c;
		constexpr auto grounded = 0x140;
		constexpr auto climbing = 0x141;
		constexpr auto sliding = 0x142;
		constexpr auto swimming = 0x143;
		constexpr auto wasSwimming = 0x144;
		constexpr auto jumping = 0x145;
		constexpr auto wasJumping = 0x146;
		constexpr auto falling = 0x147;
		constexpr auto wasFalling = 0x148;
		constexpr auto flying = 0x149;
		constexpr auto wasFlying = 0x14a;
		constexpr auto forcedDuckDelta = 0x14c;

		constexpr auto Awake = 0xa3e300;
		constexpr auto GetCollider = 0x8252d0;
		constexpr auto OnDisable = 0xa431e0;
		constexpr auto Init = 0xa40a10;
		constexpr auto OnCollisionEnter = 0xa43020;
		constexpr auto OnCollisionStay = 0xa43100;
		constexpr auto GroundCheck = 0xa401d0;
		constexpr auto TeleportTo = 0xa43890;
		constexpr auto UpdateCurrentLadder = 0xa43bc0;
		constexpr auto WantsSprint = 0xa44c30;
		constexpr auto ClientInput = 0xa3e5f0;
		constexpr auto Movement_Water = 0xa42470;
		constexpr auto Movement_Mounted = 0xa41550;
		constexpr auto Movement_Ladder = 0xa40f00;
		constexpr auto Movement_Noclip = 0xa41660;
		constexpr auto Movement_Walking = 0xa41bf0;
		constexpr auto GetHeldEntityMovementMultiplier = 0xa40120;
		constexpr auto HandleGrounded = 0xa404a0;
		constexpr auto HandleRunDuckCrawl = 0xa40620;
		constexpr auto GetForcedDuck = 0xa40030;
		constexpr auto HandleJumping = 0xa404f0;
		constexpr auto CanJump = 0xa3e470;
		constexpr auto BlockJump = 0xa3e3e0;
		constexpr auto BlockSprint = 0xa3e420;
		constexpr auto SetKinematic = 0xa43660;
		constexpr auto ApplyForce = 0xa3e2c0;
		constexpr auto CanSprint = 0xa3e580;
		constexpr auto Jump = 0xa40be0;
		constexpr auto DoFixedUpdate = 0xa3e9a0;
		constexpr auto DoStepUp = 0xa3f1c0;
		constexpr auto UpdateVelocity = 0xa440e0;
		constexpr auto UpdateGravity = 0xa43d90;
		constexpr auto FrameUpdate = 0xa3fb90;
		constexpr auto TransformState = 0xa439b0;
		constexpr auto SetParent = 0xa43690;
		constexpr auto FallVelocity = 0xa3fae0;
		constexpr auto CurrentVelocity = 0xa3e960;
		constexpr auto CurrentMoveSpeed = 0xa3e910;
		constexpr auto PlayerAttemptedMount = 0xa43600;
		constexpr auto PlayerCompletedMount = 0xa43630;
		constexpr auto ctor = 0xa44cc0;
	};

	namespace UnityEngine_GUI {
		constexpr auto s_BoxHash = 0x4;
		constexpr auto s_ButonHash = 0x8;
		constexpr auto s_RepeatButtonHash = 0xc;
		constexpr auto s_ToggleHash = 0x10;
		constexpr auto s_ButtonGridHash = 0x14;
		constexpr auto s_SliderHash = 0x18;
		constexpr auto s_BeginGroupHash = 0x1c;
		constexpr auto s_ScrollviewHash = 0x20;
		constexpr auto scrollTroughSidek__BackingField = 0x24;
		constexpr auto nextScrollStepTimek__BackingField = 0x28;
		constexpr auto s_Skin = 0x30;
		constexpr auto scrollViewStatesk__BackingField = 0x38;

		constexpr auto get_color = 0x1cc84d0;
		constexpr auto set_color = 0x1cc8a70;
		constexpr auto get_backgroundColor = 0x1cc8380;
		constexpr auto set_backgroundColor = 0x1cc8980;
		constexpr auto get_contentColor = 0x1cc8590;
		constexpr auto set_contentColor = 0x1cc8b20;
		constexpr auto get_changed = 0x1cc8460;
		constexpr auto set_changed = 0x1cc89f0;
		constexpr auto get_enabled = 0x1cc8610;
		constexpr auto set_enabled = 0x1cc8b90;
		constexpr auto get_usePageScrollbars = 0x1cc8910;
		constexpr auto get_blendMaterial = 0x1cc8400;
		constexpr auto get_blitMaterial = 0x1cc8430;
		constexpr auto get_roundedRectMaterial = 0x1cc8730;
		constexpr auto get_roundedRectWithColorPerBorderMaterial = 0x1cc8760;
		constexpr auto GrabMouseControl = 0x1cc64d0;
		constexpr auto HasMouseControl = 0x1cc72c0;
		constexpr auto ReleaseMouseControl = 0x1cc79d0;
		constexpr auto SetNextControlName = 0x1cc7c60;
		constexpr auto InternalRepaintEditorWindow = 0x1cc75e0;
		constexpr auto cctor = 0x1cc80c0;
		constexpr auto get_scrollTroughSide = 0x1cc8790;
		constexpr auto set_scrollTroughSide = 0x1cc8cf0;
		constexpr auto get_nextScrollStepTime = 0x1cc86d0;
		constexpr auto set_nextScrollStepTime = 0x1cc8c30;
		constexpr auto set_skin = 0x1cc8db0;
		constexpr auto get_skin = 0x1cc88b0;
		constexpr auto DoSetSkin = 0x1cc4950;
		constexpr auto get_matrix = 0x1cc8640;
		constexpr auto set_matrix = 0x1cc8bd0;
		constexpr auto Label = 0x1cc7700;
		constexpr auto DrawTexture = 0x1cc5ae0;
		constexpr auto CalculateScaledTextureRects = 0x1cc2ca0;
		constexpr auto Box = 0x1cc2090;
		constexpr auto Button = 0x1cc2150;
		constexpr auto PasswordFieldGetStrToShow = 0x1cc78a0;
		constexpr auto DoTextField = 0x1cc4dd0;
		constexpr auto HandleTextFieldEventForTouchscreen = 0x1cc6d00;
		constexpr auto HandleTextFieldEventForDesktop = 0x1cc6510;
		constexpr auto Toggle = 0x1cc7f00;
		constexpr auto SelectionGrid = 0x1cc7b00;
		constexpr auto CalcTotalHorizSpacing = 0x1cc2a90;
		constexpr auto DoControl = 0x1cc4280;
		constexpr auto DoLabel = 0x1cc46c0;
		constexpr auto DoToggle = 0x1cc4f90;
		constexpr auto DoButton = 0x1cc4150;
		constexpr auto DoButtonGrid = 0x1cc3460;
		constexpr auto CalcMouseRects = 0x1cc2570;
		constexpr auto HorizontalSlider = 0x1cc73d0;
		constexpr auto Slider = 0x1cc7ca0;
		constexpr auto BeginGroup = 0x1cc1a70;
		constexpr auto EndGroup = 0x1cc6490;
		constexpr auto get_scrollViewStates = 0x1cc8850;
		constexpr auto CallWindowDelegate = 0x1cc2fd0;
		constexpr auto get_color_Injected = 0x1cc8490;
		constexpr auto set_color_Injected = 0x1cc8a30;
		constexpr auto get_backgroundColor_Injected = 0x1cc8340;
		constexpr auto set_backgroundColor_Injected = 0x1cc8940;
		constexpr auto get_contentColor_Injected = 0x1cc8550;
		constexpr auto set_contentColor_Injected = 0x1cc8ae0;
	};

	namespace UnityEngine_GUIStyle {
		constexpr auto m_Ptr = 0x10;
		constexpr auto m_Normal = 0x18;
		constexpr auto m_Hover = 0x20;
		constexpr auto m_Active = 0x28;
		constexpr auto m_Focused = 0x30;
		constexpr auto m_OnNormal = 0x38;
		constexpr auto m_OnHover = 0x40;
		constexpr auto m_OnActive = 0x48;
		constexpr auto m_OnFocused = 0x50;
		constexpr auto m_Border = 0x58;
		constexpr auto m_Padding = 0x60;
		constexpr auto m_Margin = 0x68;
		constexpr auto m_Overflow = 0x70;
		constexpr auto m_Name = 0x78;
		constexpr auto s_None = 0x8;

		constexpr auto get_rawName = 0x1cbf5d0;
		constexpr auto set_rawName = 0x1cbf9a0;
		constexpr auto get_font = 0x1cbf0c0;
		constexpr auto get_imagePosition = 0x1cbf100;
		constexpr auto set_alignment = 0x1cbf840;
		constexpr auto get_wordWrap = 0x1cbf690;
		constexpr auto get_contentOffset = 0x1cbeff0;
		constexpr auto set_contentOffset = 0x1cbf8d0;
		constexpr auto get_fixedWidth = 0x1cbf080;
		constexpr auto get_fixedHeight = 0x1cbf040;
		constexpr auto get_stretchWidth = 0x1cbf650;
		constexpr auto set_stretchWidth = 0x1cbfa40;
		constexpr auto get_stretchHeight = 0x1cbf610;
		constexpr auto set_stretchHeight = 0x1cbf9f0;
		constexpr auto set_fontSize = 0x1cbf910;
		constexpr auto set_Internal_clipOffset = 0x1cbf800;
		constexpr auto Internal_Create = 0x1cbe400;
		constexpr auto Internal_Copy = 0x1cbe3b0;
		constexpr auto Internal_Destroy = 0x1cbe440;
		constexpr auto GetStyleStatePtr = 0x1cbe1e0;
		constexpr auto GetRectOffsetPtr = 0x1cbe1a0;
		constexpr auto Internal_GetLineHeight = 0x1cbead0;
		constexpr auto Internal_Draw = 0x1cbe850;
		constexpr auto Internal_Draw2 = 0x1cbe4f0;
		constexpr auto Internal_DrawCursor = 0x1cbe5d0;
		constexpr auto Internal_DrawWithTextSelection = 0x1cbe6f0;
		constexpr auto Internal_GetCursorPixelPosition = 0x1cbe980;
		constexpr auto Internal_GetCursorStringIndex = 0x1cbea70;
		constexpr auto Internal_GetSelectedRenderedText = 0x1cbeb80;
		constexpr auto Internal_CalcSize = 0x1cbd0f0;
		constexpr auto Internal_CalcSizeWithConstraints = 0x1cbd090;
		constexpr auto Internal_CalcHeight = 0x1cbcfb0;
		constexpr auto Internal_CalcMinMaxWidth = 0x1cbe280;
		constexpr auto SetMouseTooltip = 0x1cbec80;
		constexpr auto Internal_GetCursorFlashOffset = 0x1cbe8e0;
		constexpr auto SetDefaultFont = 0x1cbebf0;
		constexpr auto ctor = 0x1cbef20;
		constexpr auto Finalize = 0x1cbdfc0;
		constexpr auto get_name = 0x1cbf340;
		constexpr auto set_name = 0x1cbf950;
		constexpr auto get_normal = 0x1cbf460;
		constexpr auto get_margin = 0x1cbf290;
		constexpr auto get_padding = 0x1cbf520;
		constexpr auto get_lineHeight = 0x1cbf1e0;
		constexpr auto Draw = 0x1cbdd90;
		constexpr auto DrawCursor = 0x1cbd150;
		constexpr auto DrawWithTextSelection = 0x1cbd610;
		constexpr auto op_Implicit = 0x1cbf6d0;
		constexpr auto get_none = 0x1cbf3a0;
		constexpr auto GetCursorPixelPosition = 0x1cbe0c0;
		constexpr auto GetCursorStringIndex = 0x1cbe140;
		constexpr auto CalcSize = 0x1cbd0f0;
		constexpr auto CalcSizeWithConstraints = 0x1cbd090;
		constexpr auto CalcHeight = 0x1cbcfb0;
		constexpr auto get_isHeightDependantOnWidth = 0x1cbf140;
		constexpr auto CalcMinMaxWidth = 0x1cbd010;
		constexpr auto ToString = 0x1cbed00;
		constexpr auto cctor = 0x1cbee10;
		constexpr auto get_contentOffset_Injected = 0x1cbefa0;
		constexpr auto set_contentOffset_Injected = 0x1cbf880;
		constexpr auto set_Internal_clipOffset_Injected = 0x1cbf7b0;
		constexpr auto Internal_Draw_Injected = 0x1cbe7c0;
		constexpr auto Internal_Draw2_Injected = 0x1cbe480;
		constexpr auto Internal_DrawCursor_Injected = 0x1cbe560;
		constexpr auto Internal_DrawWithTextSelection_Injected = 0x1cbe640;
		constexpr auto Internal_GetCursorPixelPosition_Injected = 0x1cbe910;
		constexpr auto Internal_GetCursorStringIndex_Injected = 0x1cbea00;
		constexpr auto Internal_GetSelectedRenderedText_Injected = 0x1cbeb10;
		constexpr auto Internal_CalcSize_Injected = 0x1cbe350;
		constexpr auto Internal_CalcSizeWithConstraints_Injected = 0x1cbe2e0;
		constexpr auto Internal_CalcMinMaxWidth_Injected = 0x1cbe220;
		constexpr auto SetMouseTooltip_Injected = 0x1cbec30;
	};

	namespace UnityEngine_Event {
		constexpr auto m_Ptr = 0x10;
		constexpr auto s_MasterEvent = 0x8;

		constexpr auto get_rawType = 0x1caecf0;
		constexpr auto get_mousePosition = 0x1caec20;
		constexpr auto set_mousePosition = 0x1caf000;
		constexpr auto get_delta = 0x1cae9a0;
		constexpr auto get_pointerType = 0x1caec70;
		constexpr auto get_button = 0x1cae790;
		constexpr auto get_modifiers = 0x1caeb90;
		constexpr auto set_modifiers = 0x1caef70;
		constexpr auto get_pressure = 0x1caecb0;
		constexpr auto get_clickCount = 0x1cae810;
		constexpr auto get_character = 0x1cae7d0;
		constexpr auto set_character = 0x1caedb0;
		constexpr auto get_keyCode = 0x1caeb50;
		constexpr auto set_keyCode = 0x1caef30;
		constexpr auto get_displayIndex = 0x1cae9f0;
		constexpr auto set_displayIndex = 0x1caeef0;
		constexpr auto get_type = 0x1caed70;
		constexpr auto set_type = 0x1caf040;
		constexpr auto get_commandName = 0x1cae850;
		constexpr auto set_commandName = 0x1caee00;
		constexpr auto Internal_Use = 0x1cac670;
		constexpr auto Internal_Create = 0x1cac470;
		constexpr auto Internal_Destroy = 0x1cac4b0;
		constexpr auto Internal_Copy = 0x1cac430;
		constexpr auto GetTypeForControl = 0x1cac3f0;
		constexpr auto CopyFromPtr = 0x1cabed0;
		constexpr auto PopEvent = 0x1cad940;
		constexpr auto Internal_SetNativeEvent = 0x1cac630;
		constexpr auto Internal_MakeMasterEventCurrent = 0x1cac4f0;
		constexpr auto ctor = 0x1cae6c0;
		constexpr auto Finalize = 0x1cac1e0;
		constexpr auto CopyFrom = 0x1cabf20;
		constexpr auto get_shift = 0x1caed30;
		constexpr auto get_control = 0x1cae8d0;
		constexpr auto get_alt = 0x1cae750;
		constexpr auto get_command = 0x1cae890;
		constexpr auto get_current = 0x1cae910;
		constexpr auto set_current = 0x1caee50;
		constexpr auto get_isKey = 0x1caeaa0;
		constexpr auto get_isMouse = 0x1caeaf0;
		constexpr auto get_isDirectManipulationDevice = 0x1caea30;
		constexpr auto KeyboardEvent = 0x1cac6b0;
		constexpr auto GetHashCode = 0x1cac2c0;
		constexpr auto Equals = 0x1cabf90;
		constexpr auto ToString = 0x1cad980;
		constexpr auto Use = 0x1cae460;
		constexpr auto get_mousePosition_Injected = 0x1caebd0;
		constexpr auto set_mousePosition_Injected = 0x1caefb0;
		constexpr auto get_delta_Injected = 0x1cae950;
	};

	namespace UnityEngine_Input {

		constexpr auto GetKeyInt = 0x256a860;
		constexpr auto GetKeyUpInt = 0x256a8a0;
		constexpr auto GetKeyDownInt = 0x256a820;
		constexpr auto GetAxis = 0x256a7a0;
		constexpr auto GetAxisRaw = 0x256a760;
		constexpr auto GetButtonDown = 0x256a7e0;
		constexpr auto GetMouseButton = 0x256a960;
		constexpr auto GetMouseButtonDown = 0x256a8e0;
		constexpr auto GetMouseButtonUp = 0x256a920;
		constexpr auto GetTouch = 0x256a9e0;
		constexpr auto GetKey = 0x256a860;
		constexpr auto GetKeyUp = 0x256a8a0;
		constexpr auto GetKeyDown = 0x256a820;
		constexpr auto get_anyKey = 0x256aa70;
		constexpr auto get_anyKeyDown = 0x256aa40;
		constexpr auto get_mousePosition = 0x256abc0;
		constexpr auto get_mouseScrollDelta = 0x256ac70;
		constexpr auto get_imeCompositionMode = 0x256ab50;
		constexpr auto set_imeCompositionMode = 0x256aec0;
		constexpr auto get_compositionString = 0x256ab20;
		constexpr auto get_compositionCursorPos = 0x256aae0;
		constexpr auto set_compositionCursorPos = 0x256ae80;
		constexpr auto get_mousePresent = 0x256ac00;
		constexpr auto get_touchCount = 0x256acb0;
		constexpr auto get_touchSupported = 0x256ace0;
		constexpr auto get_touches = 0x256ad10;
		constexpr auto GetTouch_Injected = 0x256a9a0;
		constexpr auto get_mousePosition_Injected = 0x256ab80;
		constexpr auto get_mouseScrollDelta_Injected = 0x256ac30;
		constexpr auto get_compositionCursorPos_Injected = 0x256aaa0;
		constexpr auto set_compositionCursorPos_Injected = 0x256ae40;
	};

	namespace UnityEngine_DDraw {
		constexpr auto singleton = 0x8;
		constexpr auto list = 0x18;
		constexpr auto AutoYPosition = 0x10;
		constexpr auto LastAutoY = 0x14;
		constexpr auto lineMaterial = 0x18;
		constexpr auto _skin = 0x20;

		constexpr auto Get = 0xb283d0;
		constexpr auto Capsule = 0xb27ff0;
		constexpr auto Sphere = 0xb29870;
		constexpr auto SphereGizmo = 0xb29580;
		constexpr auto Line = 0xb286a0;
		constexpr auto Arrow = 0xb270c0;
		constexpr auto ArrowPadded = 0xb269c0;
		constexpr auto Bounds = 0xb272f0;
		constexpr auto Box = 0xb278b0;
		constexpr auto Text = 0xb29b50;
		constexpr auto ScreenText = 0xb293e0;
		constexpr auto Awake = 0xb27280;
		constexpr auto OnPreRender = 0xb29000;
		constexpr auto OnPostRender = 0xb28cc0;
		constexpr auto OnGUI = 0xb28af0;
		constexpr auto CreateLineMaterial = 0xb28270;
		constexpr auto get_skin = 0xb29d60;
		constexpr auto ctor = 0xb29cf0;
		constexpr auto cctor = 0x458ce0;
	};

	namespace UnityEngine_Texture2D {

		constexpr auto get_format = 0x23e0f50;
		constexpr auto get_whiteTexture = 0x23e0fd0;
		constexpr auto get_blackTexture = 0x23e0f20;
		constexpr auto Compress = 0x23df740;
		constexpr auto Internal_CreateImpl = 0x23dfdd0;
		constexpr auto Internal_Create = 0x23dfe30;
		constexpr auto get_isReadable = 0x23e0f90;
		constexpr auto ApplyImpl = 0x23df590;
		constexpr auto ResizeImpl = 0x23e0300;
		constexpr auto SetPixelImpl = 0x23e0640;
		constexpr auto GetPixelImpl = 0x23df9b0;
		constexpr auto GetPixelBilinearImpl = 0x23df7f0;
		constexpr auto ResizeWithFormatImpl = 0x23e0350;
		constexpr auto ReadPixelsImpl = 0x23e00f0;
		constexpr auto SetPixelsImpl = 0x23e0840;
		constexpr auto LoadRawTextureDataImpl = 0x23dff00;
		constexpr auto GetWritableImageData = 0x23dfd90;
		constexpr auto GetRawImageDataSize = 0x23dfd50;
		constexpr auto set_requestedMipmapLevel = 0x23e1040;
		constexpr auto set_minimumMipmapLevel = 0x23e1000;
		constexpr auto ClearRequestedMipmapLevel = 0x23df700;
		constexpr auto ClearMinimumMipmapLevel = 0x23df6c0;
		constexpr auto SetAllPixels32 = 0x23e0520;
		constexpr auto SetBlockOfPixels32 = 0x23e0580;
		constexpr auto GetPixels = 0x23dfc50;
		constexpr auto GetPixels32 = 0x23dfb50;
		constexpr auto ctor = 0x23e0d60;
		constexpr auto SetPixel = 0x23e06b0;
		constexpr auto SetPixels = 0x23e08a0;
		constexpr auto GetPixel = 0x23dfa30;
		constexpr auto GetPixelBilinear = 0x23df870;
		constexpr auto LoadRawTextureData = 0x23dff60;
		constexpr auto Apply = 0x23df610;
		constexpr auto Resize = 0x23e0480;
		constexpr auto ReadPixels = 0x23e0230;
		constexpr auto SetPixels32 = 0x23e0520;
		constexpr auto SetPixelImpl_Injected = 0x23e05e0;
		constexpr auto GetPixelImpl_Injected = 0x23df950;
		constexpr auto GetPixelBilinearImpl_Injected = 0x23df790;
		constexpr auto ReadPixelsImpl_Injected = 0x23e0080;
	};

	namespace ModelState {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto waterLevel = 0x14;
		constexpr auto lookDir = 0x18;
		constexpr auto flags = 0x24;
		constexpr auto poseType = 0x28;
		constexpr auto inheritedVelocity = 0x2c;

		constexpr auto ctor = 0x2254680;
		constexpr auto HasFlag = 0x2253b60;
		constexpr auto SetFlag = 0x2254610;
		constexpr auto get_ducked = 0x22546d0;
		constexpr auto set_ducked = 0x22547d0;
		constexpr auto get_jumped = 0x2254700;
		constexpr auto set_jumped = 0x2254830;
		constexpr auto get_onground = 0x2254740;
		constexpr auto set_onground = 0x22548b0;
		constexpr auto get_sleeping = 0x2254770;
		constexpr auto set_sleeping = 0x2254910;
		constexpr auto get_sprinting = 0x2254780;
		constexpr auto set_sprinting = 0x2254930;
		constexpr auto get_onLadder = 0x2254720;
		constexpr auto set_onLadder = 0x2254870;
		constexpr auto get_flying = 0x22546e0;
		constexpr auto set_flying = 0x22547f0;
		constexpr auto get_aiming = 0x22546b0;
		constexpr auto set_aiming = 0x2254790;
		constexpr auto get_prone = 0x2254750;
		constexpr auto set_prone = 0x22548d0;
		constexpr auto get_mounted = 0x2254710;
		constexpr auto set_mounted = 0x2254850;
		constexpr auto get_relaxed = 0x2254760;
		constexpr auto set_relaxed = 0x22548f0;
		constexpr auto get_crawling = 0x22546c0;
		constexpr auto set_crawling = 0x22547b0;
		constexpr auto get_onPhone = 0x2254730;
		constexpr auto set_onPhone = 0x2254890;
		constexpr auto get_headLook = 0x22546f0;
		constexpr auto set_headLook = 0x2254810;
		constexpr auto Equal = 0x2253800;
		constexpr auto ResetToPool = 0x2253c40;
		constexpr auto Dispose = 0x2253780;
		constexpr auto EnterPool = 0x1203540;
		constexpr auto LeavePool = 0x1203570;
		constexpr auto CopyTo = 0x2252460;
		constexpr auto Copy = 0x22524b0;
		constexpr auto Deserialize = 0x2253500;
		constexpr auto DeserializeLengthDelimited = 0x2252550;
		constexpr auto DeserializeLength = 0x2252be0;
		constexpr auto FromProto = 0x2253910;
		constexpr auto WriteToStream = 0x2254640;
		constexpr auto WriteToStreamDelta = 0x2254660;
		constexpr auto ReadFromStream = 0x2253b70;
		constexpr auto SerializeDelta = 0x2253cf0;
		constexpr auto Serialize = 0x2254350;
		constexpr auto ToProtoBytes = 0x2254630;
		constexpr auto ToProto = 0x2254640;
		constexpr auto SerializeToBytes = 0x2254240;
		constexpr auto SerializeLengthDelimited = 0x2254190;
	};

	namespace ProtoBuf_PlayerProjectileUpdate {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto projectileID = 0x14;
		constexpr auto curPosition = 0x18;
		constexpr auto curVelocity = 0x24;
		constexpr auto travelTime = 0x30;

		constexpr auto ResetToPool = 0x2285020;
		constexpr auto Dispose = 0x2284cc0;
		constexpr auto EnterPool = 0x1203540;
		constexpr auto LeavePool = 0x1203570;
		constexpr auto CopyTo = 0x2283b50;
		constexpr auto Copy = 0x2283b90;
		constexpr auto Deserialize = 0x22842c0;
		constexpr auto DeserializeLengthDelimited = 0x2283c30;
		constexpr auto DeserializeLength = 0x2284230;
		constexpr auto FromProto = 0x2284df0;
		constexpr auto WriteToStream = 0x2285a30;
		constexpr auto WriteToStreamDelta = 0x2285a50;
		constexpr auto ReadFromStream = 0x2285000;
		constexpr auto SerializeDelta = 0x2285180;
		constexpr auto Serialize = 0x2285790;
		constexpr auto ToProtoBytes = 0x2285a20;
		constexpr auto ToProto = 0x2285a30;
		constexpr auto SerializeToBytes = 0x2285680;
		constexpr auto SerializeLengthDelimited = 0x22855d0;
		constexpr auto ctor = 0x1150f20;
	};

	namespace Projectile {
		constexpr auto initialVelocity = 0x18;
		constexpr auto drag = 0x24;
		constexpr auto gravityModifier = 0x28;
		constexpr auto thickness = 0x2c;
		constexpr auto initialDistance = 0x30;
		constexpr auto remainInWorld = 0x34;
		constexpr auto stickProbability = 0x38;
		constexpr auto breakProbability = 0x3c;
		constexpr auto conditionLoss = 0x40;
		constexpr auto ricochetChance = 0x44;
		constexpr auto penetrationPower = 0x48;
		constexpr auto damageProperties = 0x50;
		constexpr auto damageDistances = 0x58;
		constexpr auto damageMultipliers = 0x60;
		constexpr auto damageTypes = 0x68;
		constexpr auto rendererToScale = 0x70;
		constexpr auto firstPersonRenderer = 0x78;
		constexpr auto createDecals = 0x80;
		constexpr auto doDefaultHitEffects = 0x81;
		constexpr auto flybySound = 0x88;
		constexpr auto flybySoundDistance = 0x90;
		constexpr auto closeFlybySound = 0x98;
		constexpr auto closeFlybyDistance = 0xa0;
		constexpr auto tumbleSpeed = 0xa4;
		constexpr auto tumbleAxis = 0xa8;
		constexpr auto swimScale = 0xb4;
		constexpr auto swimSpeed = 0xc0;
		constexpr auto owner = 0xd0;
		constexpr auto sourceWeaponPrefab = 0xd8;
		constexpr auto sourceProjectilePrefab = 0xe0;
		constexpr auto mod = 0xe8;
		constexpr auto projectileID = 0xf0;
		constexpr auto seed = 0xf4;
		constexpr auto clientsideEffect = 0xf8;
		constexpr auto clientsideAttack = 0xf9;
		constexpr auto integrity = 0xfc;
		constexpr auto maxDistance = 0x100;
		constexpr auto modifier = 0x104;
		constexpr auto invisible = 0x114;
		constexpr auto currentVelocity = 0x118;
		constexpr auto currentPosition = 0x124;
		constexpr auto traveledDistance = 0x130;
		constexpr auto traveledTime = 0x134;
		constexpr auto launchTime = 0x138;
		constexpr auto sentPosition = 0x13c;
		constexpr auto previousPosition = 0x148;
		constexpr auto previousVelocity = 0x154;
		constexpr auto previousTraveledTime = 0x160;
		constexpr auto isRicochet = 0x164;
		constexpr auto isRetiring = 0x165;
		constexpr auto flybyPlayed = 0x166;
		constexpr auto wasFacingPlayer = 0x167;
		constexpr auto flybyPlane = 0x168;
		constexpr auto flybyRay = 0x178;
		constexpr auto cleanupAction = 0x190;
		constexpr auto hitTest = 0x198;
		constexpr auto swimRandom = 0x1a0;
		constexpr auto _waterMaterialID = 0x4;
		constexpr auto cachedWaterString = 0x8;

		constexpr auto CalculateDamage = 0x7e5fc0;
		constexpr auto get_isAuthoritative = 0x7ead70;
		constexpr auto get_isAlive = 0x7ead30;
		constexpr auto Retire = 0x7e9b20;
		constexpr auto Cleanup = 0x7e6510;
		constexpr auto AdjustVelocity = 0x7e5d50;
		constexpr auto InitializeVelocity = 0x7e8d60;
		constexpr auto OnDisable = 0x7e8fd0;
		constexpr auto Update = 0x7ea990;
		constexpr auto SetEffectScale = 0x7ea0f0;
		constexpr auto DoFlybySound = 0x7e6710;
		constexpr auto CalculateEffectScale = 0x7e6470;
		constexpr auto UpdateVelocity = 0x7ea6b0;
		constexpr auto DoVelocityUpdate = 0x7e8570;
		constexpr auto DoMovement = 0x7e7430;
		constexpr auto DoWaterHit = 0x7e8950;
		constexpr auto DoRicochet = 0x7e8150;
		constexpr auto DoHit = 0x7e6d20;
		constexpr auto AdditiveImpactEffect = 0x458ce0;
		constexpr auto Reflect = 0x7e92a0;
		constexpr auto Refract = 0x7e95f0;
		constexpr auto RandomRotation = 0x7e91a0;
		constexpr auto Launch = 0x7e8f40;
		constexpr auto FleshMaterialID = 0x7e8c60;
		constexpr auto WaterMaterialID = 0x7eaa90;
		constexpr auto IsWaterMaterial = 0x7e8e10;
		constexpr auto ShouldStopProjectile = 0x7ea5f0;
		constexpr auto ctor = 0x7eab90;
		constexpr auto cctor = 0x458ce0;
	};

	namespace PlayerEyes {
		constexpr auto DuckOffset = 0xc;
		constexpr auto CrawlOffset = 0x18;
		constexpr auto thirdPersonSleepingOffset = 0x20;
		constexpr auto defaultLazyAim = 0x30;
		constexpr auto viewOffset = 0x38;
		constexpr auto bodyRotationk__BackingField = 0x44;
		constexpr auto headAnglesk__BackingField = 0x54;
		constexpr auto rotationLookk__BackingField = 0x60;
		constexpr auto IsAltLookingLegsThresholdk__BackingField = 0x70;

		constexpr auto get_worldMountedPosition = 0xbea250;
		constexpr auto get_worldStandingPosition = 0xbea440;
		constexpr auto get_worldCrouchedPosition = 0xbea150;
		constexpr auto get_worldCrawlingPosition = 0xbea050;
		constexpr auto get_position = 0xbe9b10;
		constexpr auto get_BodyLeanOffset = 0xbe91d0;
		constexpr auto get_center = 0xbe9530;
		constexpr auto get_offset = 0xbe9850;
		constexpr auto get_rotation = 0xbe9fa0;
		constexpr auto set_rotation = 0xbea5a0;
		constexpr auto get_bodyRotation = 0xbe9450;
		constexpr auto set_bodyRotation = 0xbea570;
		constexpr auto get_headAngles = 0xbe9830;
		constexpr auto set_headAngles = 0xbea580;
		constexpr auto get_rotationLook = 0xbe9f90;
		constexpr auto set_rotationLook = 0xbea590;
		constexpr auto get_parentRotation = 0xbe9980;
		constexpr auto get_canUpdateViewAngles = 0xbe9460;
		constexpr auto get_IsAltLookingLegsThreshold = 0xbe9440;
		constexpr auto set_IsAltLookingLegsThreshold = 0xbea560;
		constexpr auto FrameUpdate = 0xbe7d60;
		constexpr auto UpdateAltLegsThreshold = 0xbe8df0;
		constexpr auto UpdateCamera = 0xbe8e60;
		constexpr auto DoFirstPersonCamera = 0xbe5e40;
		constexpr auto DoInEyeCamera = 0xbe6490;
		constexpr auto DoThirdPersonCamera = 0xbe67e0;
		constexpr auto DoDeathCamera = 0xbe5860;
		constexpr auto ApplyCameraMoves = 0xbe5230;
		constexpr auto MovementForward = 0xbe8a70;
		constexpr auto MovementRight = 0xbe8c30;
		constexpr auto BodyRay = 0xbe5410;
		constexpr auto BodyForward = 0xbe52c0;
		constexpr auto BodyRight = 0xbe55c0;
		constexpr auto BodyUp = 0xbe5710;
		constexpr auto HeadRay = 0xbe86b0;
		constexpr auto HeadForward = 0xbe85c0;
		constexpr auto HeadRight = 0xbe8890;
		constexpr auto HeadUp = 0xbe8980;
		constexpr auto GetLookRotation = 0xbe8440;
		constexpr auto GetAimRotation = 0xbe8380;
		constexpr auto ctor = 0xbe9110;
		constexpr auto cctor = 0xbe9010;
	};

	namespace ViewModel {
		constexpr auto viewModelPrefab = 0x18;
		constexpr auto targetEntity = 0x20;
		constexpr auto instance = 0x28;

		constexpr auto Deploy = 0xbddad0;
		constexpr auto OnDisable = 0xbdde40;
		constexpr auto Holster = 0xbdddd0;
		constexpr auto Clear = 0xbdd960;
		constexpr auto OnFrame = 0xbddeb0;
		constexpr auto Play = 0xbde010;
		constexpr auto ResetTrigger = 0xbde140;
		constexpr auto Trigger = 0xbde450;
		constexpr auto CrossFade = 0xbdda30;
		constexpr auto SetBool = 0xbde270;
		constexpr auto SetFloat = 0xbde3b0;
		constexpr auto set_ironSights = 0xbde570;
		constexpr auto ctor = 0x3eb250;
	};

	namespace BowWeapon {
		constexpr auto attackReady = 0x378;
		constexpr auto arrowBack = 0x37c;
		constexpr auto swapArrows = 0x380;
		constexpr auto wasAiming = 0x388;

		constexpr auto OnRpcMessage = 0x65cd50;
		constexpr auto ClientInit = 0x65c4b0;
		constexpr auto OnSignal = 0x65ce40;
		constexpr auto UpdatePullbackThink = 0x65d290;
		constexpr auto CancelPullbackThink = 0x65c440;
		constexpr auto PullbackThink = 0x65d150;
		constexpr auto OnInput = 0x65c9d0;
		constexpr auto OnHolstered = 0x65c990;
		constexpr auto DoAttack = 0x65c520;
		constexpr auto IsAiming = 0x65c7c0;
		constexpr auto OnViewmodelEvent = 0x65cfb0;
		constexpr auto OnFrame = 0x65c860;
		constexpr auto PostNetworkUpdate = 0x65d020;
		constexpr auto TryReload = 0x65d220;
		constexpr auto ProcessSpectatorViewmodel = 0x65d0c0;
		constexpr auto ctor = 0x65d380;
	};

	namespace AttackEntity {
		constexpr auto deployDelay = 0x1f8;
		constexpr auto repeatDelay = 0x1fc;
		constexpr auto animationDelay = 0x200;
		constexpr auto effectiveRange = 0x204;
		constexpr auto npcDamageScale = 0x208;
		constexpr auto attackLengthMin = 0x20c;
		constexpr auto attackLengthMax = 0x210;
		constexpr auto attackSpacing = 0x214;
		constexpr auto aiAimSwayOffset = 0x218;
		constexpr auto aiAimCone = 0x21c;
		constexpr auto aiOnlyInRange = 0x220;
		constexpr auto CloseRangeAddition = 0x224;
		constexpr auto MediumRangeAddition = 0x228;
		constexpr auto LongRangeAddition = 0x22c;
		constexpr auto CanUseAtMediumRange = 0x230;
		constexpr auto CanUseAtLongRange = 0x231;
		constexpr auto reloadSounds = 0x238;
		constexpr auto thirdPersonMeleeSound = 0x240;
		constexpr auto recoilCompDelayOverride = 0x248;
		constexpr auto wantsRecoilComp = 0x24c;
		constexpr auto nextAttackTime = 0x250;
		constexpr auto lastTickTime = 0x254;
		constexpr auto nextTickTime = 0x258;
		constexpr auto timeSinceDeploy = 0x25c;
		constexpr auto lastRecoilCompTime = 0x260;
		constexpr auto startAimingDirection = 0x264;
		constexpr auto wasDoingRecoilComp = 0x270;
		constexpr auto reductionSpeed = 0x274;

		constexpr auto GetInheritedVelocity = 0x9c26a0;
		constexpr auto get_NextAttackTime = 0x9c2bd0;
		constexpr auto GetAttackStats = 0x458ce0;
		constexpr auto StartAttackCooldownRaw = 0x9c2910;
		constexpr auto StartAttackCooldown = 0x9c2940;
		constexpr auto ResetAttackCooldown = 0x9c28b0;
		constexpr auto HasAttackCooldown = 0x9c2710;
		constexpr auto GetAttackCooldown = 0x9c25a0;
		constexpr auto GetAttackIdle = 0x9c2620;
		constexpr auto CalculateCooldownTime = 0x9c19d0;
		constexpr auto IsFullyDeployed = 0x9c2740;
		constexpr auto ProcessInputTime = 0x9c27e0;
		constexpr auto OnInput = 0x9c2780;
		constexpr auto OnDeploy = 0x9c2760;
		constexpr auto SpectatorNotifyDeploy = 0x9c28c0;
		constexpr auto SpectatorNotifyTick = 0x9c28d0;
		constexpr auto RecoilCompReady = 0x9c2830;
		constexpr auto AddPunch = 0x9c1820;
		constexpr auto DoRecoilCompensation = 0x9c1b10;
		constexpr auto ctor = 0x9c2ae0;
		constexpr auto cctor = 0x9c2a70;
	};

	namespace BaseEntity {
		constexpr auto ragdoll = 0x78;
		constexpr auto positionLerp = 0x80;
		constexpr auto menuOptions = 0x88;
		constexpr auto globalBroadcastProtocol = 0x8;
		constexpr auto broadcastProtocol = 0x90;
		constexpr auto links = 0x98;
		constexpr auto linkedToNeighbours = 0xa0;
		constexpr auto QueuedFileRequests = 0x10;
		constexpr auto _fileRequestCounter = 0x18;
		constexpr auto _flushQueuedFileRequests = 0x30;
		constexpr auto _pendingFileRequests = 0xa8;
		constexpr auto updateParentingAction = 0xb0;
		constexpr auto addedToParentEntity = 0xb8;
		constexpr auto itemSkin = 0xc0;
		constexpr auto entitySlots = 0xc8;
		constexpr auto triggers = 0xd0;
		constexpr auto isVisible = 0xd8;
		constexpr auto isAnimatorVisible = 0xd9;
		constexpr auto isShadowVisible = 0xda;
		constexpr auto localOccludee = 0xe0;
		constexpr auto Weightk__BackingField = 0x100;
		constexpr auto bounds = 0x104;
		constexpr auto impactEffect = 0x120;
		constexpr auto enableSaving = 0x128;
		constexpr auto syncPosition = 0x129;
		constexpr auto model = 0x130;
		constexpr auto flags = 0x138;
		constexpr auto parentBone = 0x13c;
		constexpr auto skinID = 0x140;
		constexpr auto _components = 0x148;
		constexpr auto HasBrain = 0x150;
		constexpr auto _name = 0x158;
		constexpr auto OwnerIDk__BackingField = 0x160;

		constexpr auto OnRpcMessage = 0x8378c0;
		constexpr auto GetEntityMenu = 0x832e00;
		constexpr auto GetMenuOptions = 0x458ce0;
		constexpr auto get_HasMenuOptions = 0x591c80;
		constexpr auto GetItemOptions = 0x8334b0;
		constexpr auto GetMovementModify = 0x833f00;
		constexpr auto GetExtrapolationTime = 0x832f40;
		constexpr auto GetInterpolationDelay = 0x833300;
		constexpr auto GetInterpolationInertia = 0x833390;
		constexpr auto GetInterpolationSmoothing = 0x833420;
		constexpr auto GetAngularVelocityClient = 0x8328a0;
		constexpr auto GetLocalVelocityClient = 0x833700;
		constexpr auto DrawInterpolationState = 0x830910;
		constexpr auto LerpIdleDisable = 0x836230;
		constexpr auto ClientInit = 0x82fb60;
		constexpr auto ClientOnEnable = 0x82fc10;
		constexpr auto OnPositionalFromNetwork = 0x837550;
		constexpr auto StartLerping = 0x83aaf0;
		constexpr auto StopLerping = 0x83ac70;
		constexpr auto ShouldLerp = 0x83a6e0;
		constexpr auto SetNetworkPosition = 0x83a1d0;
		constexpr auto SetNetworkRotation = 0x83a340;
		constexpr auto DoDestroyEffects = 0x8308f0;
		constexpr auto SpawnGibs = 0x83a7e0;
		constexpr auto DoNetworkDestroy = 0x3ed140;
		constexpr auto PostNetworkUpdate = 0x838c80;
		constexpr auto OnBecameRagdoll = 0x837290;
		constexpr auto GetMenuInformation = 0x833880;
		constexpr auto HideMenuItems = 0x834c50;
		constexpr auto GetMenuItems = 0x833b70;
		constexpr auto OnUse = 0x838a70;
		constexpr auto OnUseHeld = 0x838850;
		constexpr auto OnUseStopped = 0x458ce0;
		constexpr auto OnRendered = 0x458ce0;
		constexpr auto DoClientDestroy = 0x830640;
		constexpr auto GetEyeTransform = 0x832fd0;
		constexpr auto NeedsCrosshair = 0x837180;
		constexpr auto AlwaysShowCrosshair = 0x591c80;
		constexpr auto ShouldDestroyWithGroup = 0x83a630;
		constexpr auto DetachEffects = 0x830230;
		constexpr auto OnVoiceData = 0x458ce0;
		constexpr auto LookingAtTick = 0x458ce0;
		constexpr auto get_RealisticMass = 0x6e5300;
		constexpr auto OnCollision = 0x837340;
		constexpr auto ReceiveCollisionMessages = 0x838d70;
		constexpr auto DebugClient = 0x458ce0;
		constexpr auto OnDebugStart = 0x837390;
		constexpr auto DebugText = 0x830170;
		constexpr auto HasFlag = 0x834c10;
		constexpr auto ParentHasFlag = 0x838be0;
		constexpr auto SetFlag = 0x83a000;
		constexpr auto IsOn = 0x835260;
		constexpr auto IsOpen = 0x835270;
		constexpr auto IsOnFire = 0x835250;
		constexpr auto IsLocked = 0x834fa0;
		constexpr auto IsDebugging = 0x834db0;
		constexpr auto IsDisabled = 0x834dc0;
		constexpr auto IsBroken = 0x834da0;
		constexpr auto IsBusy = 0x834c50;
		constexpr auto GetLogColor = 0x833830;
		constexpr auto OnFlagsChanged = 0x837450;
		constexpr auto IsOccupied = 0x8350a0;
		constexpr auto FindLink = 0x831870;
		constexpr auto EntityLinkBroadcast = 0x831350;
		constexpr auto ReceivedEntityLinkBroadcast = 0x838e00;
		constexpr auto GetEntityLinks = 0x832dc0;
		constexpr auto LinkToEntity = 0x836260;
		constexpr auto LinkToNeighbours = 0x8364c0;
		constexpr auto InitEntityLinks = 0x834c60;
		constexpr auto FreeEntityLinks = 0x8327c0;
		constexpr auto RefreshEntityLinks = 0x838e70;
		constexpr auto RequestFileFromServer = 0x839720;
		constexpr auto EnqueueFileRequest = 0x831000;
		constexpr auto RequestFileImpl = 0x839820;
		constexpr auto FlushQueuedFileRequests = 0x831b50;
		constexpr auto CL_ReceiveFileRequest = 0x82f870;
		constexpr auto CompletePendingFileRequests = 0x82fe10;
		constexpr auto UpdateChildren = 0x83ae30;
		constexpr auto UpdateParenting = 0x83bba0;
		constexpr auto SetParentTransform = 0x83a410;
		constexpr auto UpdateDisableState = 0x83b1a0;
		constexpr auto HasClientTransformOffset = 0x834a70;
		constexpr auto RemoveClientTransformOffset = 0x839180;
		constexpr auto AddClientTransformOffset = 0x82f230;
		constexpr auto OnParentChangingClient = 0x458ce0;
		constexpr auto GetBuildingPrivilege = 0x832d50;
		constexpr auto ServerRPC = 0x839cc0;
		constexpr auto ServerRPCStart = 0x839b10;
		constexpr auto ServerRPCSend = 0x839aa0;
		constexpr auto CL_RPCMessage = 0x82f580;
		constexpr auto SendSignalBroadcast = 0x8399f0;
		constexpr auto SignalFromServerEx = 0x83a700;
		constexpr auto SignalFromServer = 0x83a790;
		constexpr auto OnSignal = 0x458ce0;
		constexpr auto OnSkinChanged = 0x8384c0;
		constexpr auto OnSkinRefreshStart = 0x838830;
		constexpr auto OnSkinRefreshEnd = 0x838810;
		constexpr auto PreProcess = 0x838ca0;
		constexpr auto HasAnySlot = 0x834990;
		constexpr auto GetSlot = 0x834510;
		constexpr auto GetSlotAnchorName = 0x8343d0;
		constexpr auto GetSlotAnchor = 0x834460;
		constexpr auto HasSlot = 0x591c80;
		constexpr auto get_Traits = 0x5b1c10;
		constexpr auto HasTrait = 0x834c20;
		constexpr auto HasAnyTrait = 0x834a40;
		constexpr auto EnterTrigger = 0x8312a0;
		constexpr auto LeaveTrigger = 0x836190;
		constexpr auto RemoveFromTriggers = 0x8391e0;
		constexpr auto ForceUpdateTriggersAction = 0x831d40;
		constexpr auto ForceUpdateTriggers = 0x831d70;
		constexpr auto MakeVisible = 0x837160;
		constexpr auto UpdateCullingSpheres = 0x83b020;
		constexpr auto RegisterForCulling = 0x838f50;
		constexpr auto OnVisibilityChanged = 0x458ce0;
		constexpr auto UnregisterFromCulling = 0x83adb0;
		constexpr auto UpdateCullingBounds = 0x83af50;
		constexpr auto CheckVisibility = 0x82fb40;
		constexpr auto CalcEntityVisUpdateRate = 0x82fa20;
		constexpr auto DebugDrawCullingBounds = 0x8300a0;
		constexpr auto get_Weight = 0x83c3c0;
		constexpr auto set_Weight = 0x83c3e0;
		constexpr auto get_Components = 0x83c340;
		constexpr auto ToPlayer = 0x5b1c10;
		constexpr auto get_IsNpc = 0x591c80;
		constexpr auto InitShared = 0x828f10;
		constexpr auto DestroyShared = 0x82be20;
		constexpr auto ResetState = 0x839980;
		constexpr auto InheritedVelocityScale = 0x82c680;
		constexpr auto GetInheritedProjectileVelocity = 0x833150;
		constexpr auto GetInheritedThrowVelocity = 0x8332d0;
		constexpr auto GetInheritedDropVelocity = 0x833070;
		constexpr auto GetParentVelocity = 0x834110;
		constexpr auto GetWorldVelocity = 0x834570;
		constexpr auto GetLocalVelocity = 0x833790;
		constexpr auto GetAngularVelocity = 0x832930;
		constexpr auto WorldSpaceBounds = 0x83c040;
		constexpr auto PivotPoint = 0x3eba40;
		constexpr auto CenterPoint = 0x82fb00;
		constexpr auto ClosestPoint = 0x82fd60;
		constexpr auto TriggerPoint = 0x82fb00;
		constexpr auto Distance = 0x830500;
		constexpr auto SqrDistance = 0x83a9b0;
		constexpr auto Distance2D = 0x830360;
		constexpr auto SqrDistance2D = 0x83a810;
		constexpr auto IsVisible = 0x835dd0;
		constexpr auto IsVisibleSpecificLayers = 0x835780;
		constexpr auto IsVisibleAndCanSee = 0x835570;
		constexpr auto IsOlderThan = 0x8351b0;
		constexpr auto IsOutside = 0x835280;
		constexpr auto WaterFactor = 0x83bbb0;
		constexpr auto AirFactor = 0x82f2d0;
		constexpr auto WaterTestFromVolumes = 0x83bd80;
		constexpr auto IsInWaterVolume = 0x834e60;
		constexpr auto BlocksWaterFor = 0x591c80;
		constexpr auto Health = 0x82c680;
		constexpr auto MaxHealth = 0x82c680;
		constexpr auto MaxVelocity = 0x82c680;
		constexpr auto BoundsPadding = 0x82f310;
		constexpr auto PenetrationResistance = 0x6e5300;
		constexpr auto GetImpactEffect = 0x833060;
		constexpr auto OnAttacked = 0x458ce0;
		constexpr auto GetItem = 0x5b1c10;
		constexpr auto GiveItem = 0x834960;
		constexpr auto CanBeLooted = 0x5dbd60;
		constexpr auto GetEntity = 0x5b8600;
		constexpr auto ToString = 0x83acc0;
		constexpr auto Categorize = 0x82fad0;
		constexpr auto Log = 0x836cb0;
		constexpr auto SetModel = 0x83a120;
		constexpr auto GetModel = 0x7c1e10;
		constexpr auto GetBones = 0x8329d0;
		constexpr auto FindBone = 0x831700;
		constexpr auto FindBoneID = 0x831620;
		constexpr auto FindClosestBone = 0x8317b0;
		constexpr auto get_OwnerID = 0x83c3b0;
		constexpr auto set_OwnerID = 0x83c3d0;
		constexpr auto ShouldBlockProjectiles = 0x5dbd60;
		constexpr auto ShouldInheritNetworkGroup = 0x5dbd60;
		constexpr auto SupportsChildDeployables = 0x591c80;
		constexpr auto BroadcastEntityMessage = 0x82f320;
		constexpr auto OnEntityMessage = 0x458ce0;
		constexpr auto Load = 0x8367b0;
		constexpr auto ctor = 0x83c230;
		constexpr auto cctor = 0x83c180;
	};

	namespace UnityEngine_Time {

		constexpr auto get_time = 0x23e1b70;
		constexpr auto get_deltaTime = 0x23e19c0;
		constexpr auto get_fixedTime = 0x23e1a20;
		constexpr auto get_unscaledTime = 0x23e1bd0;
		constexpr auto get_unscaledDeltaTime = 0x23e1ba0;
		constexpr auto get_fixedDeltaTime = 0x23e19f0;
		constexpr auto set_fixedDeltaTime = 0x23e1c00;
		constexpr auto get_maximumDeltaTime = 0x23e1a80;
		constexpr auto set_maximumDeltaTime = 0x23e1c40;
		constexpr auto get_smoothDeltaTime = 0x23e1b10;
		constexpr auto get_timeScale = 0x23e1b40;
		constexpr auto set_timeScale = 0x23e1c80;
		constexpr auto get_frameCount = 0x23e1a50;
		constexpr auto get_renderedFrameCount = 0x23e1ae0;
		constexpr auto get_realtimeSinceStartup = 0x23e1ab0;
	};

	namespace UnityEngine_Physics {

		constexpr auto get_gravity = 0x24f3e70;
		constexpr auto get_queriesHitBackfaces = 0x24f3eb0;
		constexpr auto set_queriesHitBackfaces = 0x24f3f20;
		constexpr auto get_defaultPhysicsScene = 0x24f3df0;
		constexpr auto IgnoreCollision = 0x24f06a0;
		constexpr auto Raycast = 0x24f2610;
		constexpr auto Linecast = 0x24f07e0;
		constexpr auto CapsuleCast = 0x24efee0;
		constexpr auto SphereCast = 0x24f3880;
		constexpr auto BoxCast = 0x24ef920;
		constexpr auto Internal_RaycastAll = 0x24f0770;
		constexpr auto RaycastAll = 0x24f1350;
		constexpr auto RaycastNonAlloc = 0x24f1a70;
		constexpr auto Query_SphereCastAll = 0x24f11f0;
		constexpr auto SphereCastAll = 0x24f32f0;
		constexpr auto SyncTransforms = 0x24f3d50;
		constexpr auto get_autoSyncTransforms = 0x24f3d80;
		constexpr auto set_autoSyncTransforms = 0x24f3ee0;
		constexpr auto OverlapSphereNonAlloc = 0x24f10c0;
		constexpr auto CheckSphere_Internal = 0x24f04c0;
		constexpr auto CheckSphere = 0x24f0530;
		constexpr auto CapsuleCastNonAlloc = 0x24efc80;
		constexpr auto SphereCastNonAlloc = 0x24f3480;
		constexpr auto CheckCapsule_Internal = 0x24f0220;
		constexpr auto CheckCapsule = 0x24f0290;
		constexpr auto CheckBox_Internal = 0x24f0060;
		constexpr auto CheckBox = 0x24f00d0;
		constexpr auto OverlapBox_Internal = 0x24f0da0;
		constexpr auto OverlapBox = 0x24f0e10;
		constexpr auto OverlapBoxNonAlloc = 0x24f0c40;
		constexpr auto OverlapCapsuleNonAlloc = 0x24f0fd0;
		constexpr auto get_gravity_Injected = 0x24f3e30;
		constexpr auto get_defaultPhysicsScene_Injected = 0x24f3db0;
		constexpr auto Internal_RaycastAll_Injected = 0x24f0700;
		constexpr auto Query_SphereCastAll_Injected = 0x24f1180;
		constexpr auto CheckSphere_Internal_Injected = 0x24f0450;
		constexpr auto CheckCapsule_Internal_Injected = 0x24f01b0;
		constexpr auto CheckBox_Internal_Injected = 0x24efff0;
		constexpr auto OverlapBox_Internal_Injected = 0x24f0d30;
	};

	namespace AssetNameCache {
		constexpr auto lower = 0x8;
		constexpr auto upper = 0x10;

		constexpr auto LookupName = 0x9bdfb0;
		constexpr auto LookupNameLower = 0x9bdcf0;
		constexpr auto LookupNameUpper = 0x9bde50;
		constexpr auto GetName = 0x9bdc30;
		constexpr auto GetNameLower = 0x9bdab0;
		constexpr auto GetNameUpper = 0x9bdb70;
		constexpr auto cctor = 0x9be0f0;
	};

	namespace UnityEngine_Component {

		constexpr auto get_transform = 0x1abf3e0;
		constexpr auto get_gameObject = 0x1abf3a0;
		constexpr auto GetComponent = 0x1abef80;
		constexpr auto GetComponentFastPath = 0x1abee10;
		constexpr auto GetComponentInChildren = 0x1abee70;
		constexpr auto GetComponentsInChildren = 0x1abf060;
		constexpr auto GetComponentInParent = 0x1abef00;
		constexpr auto GetComponents = 0x1abf0c0;
		constexpr auto GetComponentsForListInternal = 0x1abf000;
		constexpr auto CompareTag = 0x1abed90;
		constexpr auto SendMessageUpwards = 0x1abf1b0;
		constexpr auto SendMessage = 0x1abf2f0;
		constexpr auto BroadcastMessage = 0x1abed20;
		constexpr auto ctor = 0x1ab9770;
	};

	namespace UnityEngine_Transform {

		constexpr auto ctor = 0x1b8f810;
		constexpr auto get_position = 0x23e4a10;
		constexpr auto set_position = 0x23e5390;
		constexpr auto get_localPosition = 0x23e46e0;
		constexpr auto set_localPosition = 0x23e5100;
		constexpr auto get_eulerAngles = 0x23e43e0;
		constexpr auto set_eulerAngles = 0x23e4e50;
		constexpr auto get_localEulerAngles = 0x23e4600;
		constexpr auto set_localEulerAngles = 0x23e5000;
		constexpr auto get_right = 0x23e4a60;
		constexpr auto set_right = 0x23e53e0;
		constexpr auto get_up = 0x23e4c50;
		constexpr auto set_up = 0x23e55d0;
		constexpr auto get_forward = 0x23e4470;
		constexpr auto set_forward = 0x23e4f00;
		constexpr auto get_rotation = 0x23e4c00;
		constexpr auto set_rotation = 0x23e5580;
		constexpr auto get_localRotation = 0x23e4780;
		constexpr auto set_localRotation = 0x23e51a0;
		constexpr auto get_localScale = 0x23e4820;
		constexpr auto set_localScale = 0x23e5240;
		constexpr auto get_parent = 0x23e2e00;
		constexpr auto set_parent = 0x23e5290;
		constexpr auto get_parentInternal = 0x23e2e00;
		constexpr auto set_parentInternal = 0x23e3de0;
		constexpr auto GetParent = 0x23e2e00;
		constexpr auto SetParent = 0x23e3de0;
		constexpr auto get_worldToLocalMatrix = 0x23e4df0;
		constexpr auto get_localToWorldMatrix = 0x23e48c0;
		constexpr auto SetPositionAndRotation = 0x23e3e90;
		constexpr auto Translate = 0x23e41d0;
		constexpr auto Rotate = 0x23e37f0;
		constexpr auto RotateAroundInternal = 0x23e3550;
		constexpr auto RotateAround = 0x23e35b0;
		constexpr auto LookAt = 0x23e3380;
		constexpr auto Internal_LookAt = 0x23e2f20;
		constexpr auto TransformDirection = 0x23e3f90;
		constexpr auto InverseTransformDirection = 0x23e2fe0;
		constexpr auto TransformVector = 0x23e4110;
		constexpr auto InverseTransformVector = 0x23e3160;
		constexpr auto TransformPoint = 0x23e4050;
		constexpr auto InverseTransformPoint = 0x23e30a0;
		constexpr auto get_root = 0x23e2e40;
		constexpr auto GetRoot = 0x23e2e40;
		constexpr auto get_childCount = 0x23e43a0;
		constexpr auto DetachChildren = 0x23e2c10;
		constexpr auto SetAsFirstSibling = 0x23e3d00;
		constexpr auto SetAsLastSibling = 0x23e3d40;
		constexpr auto SetSiblingIndex = 0x23e3ef0;
		constexpr auto GetSiblingIndex = 0x23e2e80;
		constexpr auto FindRelativeTransformWithPath = 0x23e2c50;
		constexpr auto Find = 0x23e2cb0;
		constexpr auto get_lossyScale = 0x23e4970;
		constexpr auto IsChildOf = 0x23e31c0;
		constexpr auto get_hasChanged = 0x23e45c0;
		constexpr auto set_hasChanged = 0x23e4fb0;
		constexpr auto GetEnumerator = 0x23e2d90;
		constexpr auto GetChild = 0x23e2d50;
		constexpr auto get_position_Injected = 0x23e49c0;
		constexpr auto set_position_Injected = 0x23e5340;
		constexpr auto get_localPosition_Injected = 0x23e4690;
		constexpr auto set_localPosition_Injected = 0x23e50b0;
		constexpr auto get_rotation_Injected = 0x23e4bb0;
		constexpr auto set_rotation_Injected = 0x23e5530;
		constexpr auto get_localRotation_Injected = 0x23e4730;
		constexpr auto set_localRotation_Injected = 0x23e5150;
		constexpr auto get_localScale_Injected = 0x23e47d0;
		constexpr auto set_localScale_Injected = 0x23e51f0;
		constexpr auto get_worldToLocalMatrix_Injected = 0x23e4da0;
		constexpr auto get_localToWorldMatrix_Injected = 0x23e4870;
		constexpr auto SetPositionAndRotation_Injected = 0x23e3e30;
		constexpr auto RotateAroundInternal_Injected = 0x23e34f0;
		constexpr auto Internal_LookAt_Injected = 0x23e2ec0;
		constexpr auto TransformDirection_Injected = 0x23e3f30;
		constexpr auto InverseTransformDirection_Injected = 0x23e2f80;
		constexpr auto TransformVector_Injected = 0x23e40b0;
		constexpr auto InverseTransformVector_Injected = 0x23e3100;
		constexpr auto TransformPoint_Injected = 0x23e3ff0;
		constexpr auto InverseTransformPoint_Injected = 0x23e3040;
		constexpr auto get_lossyScale_Injected = 0x23e4920;
	};

	namespace GameTrace {

		constexpr auto TraceAll = 0xd5d2f0;
		constexpr auto Trace = 0xd5dbf0;
	};

	namespace HitTest {
		constexpr auto type = 0x10;
		constexpr auto AttackRay = 0x14;
		constexpr auto Radius = 0x2c;
		constexpr auto Forgiveness = 0x30;
		constexpr auto MaxDistance = 0x34;
		constexpr auto RayHit = 0x38;
		constexpr auto MultiHit = 0x64;
		constexpr auto BestHit = 0x65;
		constexpr auto DidHit = 0x66;
		constexpr auto damageProperties = 0x68;
		constexpr auto gameObject = 0x70;
		constexpr auto collider = 0x78;
		constexpr auto ignoreEntity = 0x80;
		constexpr auto HitEntity = 0x88;
		constexpr auto HitPoint = 0x90;
		constexpr auto HitNormal = 0x9c;
		constexpr auto HitDistance = 0xa8;
		constexpr auto HitTransform = 0xb0;
		constexpr auto HitPart = 0xb8;
		constexpr auto HitMaterial = 0xc0;

		constexpr auto HitPointWorld = 0x7d6320;
		constexpr auto HitNormalWorld = 0x7d6200;
		constexpr auto BuildAttackMessage = 0x7d5970;
		constexpr auto Clear = 0x7d6120;
		constexpr auto ctor = 0x3ed140;
	};

	namespace UnityEngine_Quaternion {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto z = 0x18;
		constexpr auto w = 0x1c;

		constexpr auto FromToRotation = 0x1b96030;
		constexpr auto Inverse = 0x1b96420;
		constexpr auto Slerp = 0x1b96ea0;
		constexpr auto SlerpUnclamped = 0x1b96d80;
		constexpr auto Lerp = 0x1b96650;
		constexpr auto LerpUnclamped = 0x1b96530;
		constexpr auto Internal_FromEulerRad = 0x1b96190;
		constexpr auto Internal_ToEulerRad = 0x1b96340;
		constexpr auto AngleAxis = 0x1b95a10;
		constexpr auto LookRotation = 0x1b968b0;
		constexpr auto ctor = 0xfc450;
		constexpr auto get_identity = 0x1b973a0;
		constexpr auto op_Multiply = 0x1b977c0;
		constexpr auto IsEqualUsingDot = 0x1b964b0;
		constexpr auto op_Equality = 0x1b97410;
		constexpr auto op_Inequality = 0x1b974d0;
		constexpr auto Dot = 0x1b95bd0;
		constexpr auto SetLookRotation = 0x3118d0;
		constexpr auto Angle = 0x1b95ab0;
		constexpr auto Internal_MakePositive = 0x1b96220;
		constexpr auto get_eulerAngles = 0x3119f0;
		constexpr auto Euler = 0x1b95d00;
		constexpr auto RotateTowards = 0x1b96950;
		constexpr auto GetHashCode = 0x311860;
		constexpr auto Equals = 0x311780;
		constexpr auto ToString = 0x3119e0;
		constexpr auto cctor = 0x1b97190;
		constexpr auto FromToRotation_Injected = 0x1b95fd0;
		constexpr auto Inverse_Injected = 0x1b963d0;
		constexpr auto Slerp_Injected = 0x1b96e30;
		constexpr auto SlerpUnclamped_Injected = 0x1b96d10;
		constexpr auto Lerp_Injected = 0x1b965e0;
		constexpr auto LerpUnclamped_Injected = 0x1b964c0;
		constexpr auto Internal_FromEulerRad_Injected = 0x1b96140;
		constexpr auto Internal_ToEulerRad_Injected = 0x1b962f0;
		constexpr auto AngleAxis_Injected = 0x1b959b0;
		constexpr auto LookRotation_Injected = 0x1b96700;
	};

	namespace GamePhysics {
		constexpr auto hitBufferB = 0x8;
		constexpr auto colBuffer = 0x10;

		constexpr auto CheckSphere = 0x81a5b0;
		constexpr auto CheckCapsule = 0x819b40;
		constexpr auto CheckOBB = 0x81a480;
		constexpr auto CheckOBBAndEntity = 0x81a200;
		constexpr auto CheckBounds = 0x8199e0;
		constexpr auto CheckInsideNonConvexMesh = 0x819e50;
		constexpr auto CheckInsideAnyCollider = 0x819cc0;
		constexpr auto OverlapSphere = 0x81b9c0;
		constexpr auto CapsuleSweep = 0x819740;
		constexpr auto OverlapCapsule = 0x81b740;
		constexpr auto OverlapOBB = 0x81b870;
		constexpr auto OverlapBounds = 0x81b5a0;
		constexpr auto BufferToList = 0x8195a0;
		constexpr auto HitBufferToList = 0x81a7f0;
		constexpr auto Trace = 0x81c070;
		constexpr auto TraceAll = 0x81bf90;
		constexpr auto TraceAllUnordered = 0x81bca0;
		constexpr auto LineOfSightRadius = 0x81b180;
		constexpr auto LineOfSight = 0x81b370;
		constexpr auto LineOfSightInternal = 0x81a960;
		constexpr auto Verify = 0x81c280;
		constexpr auto CompareEntity = 0x81a670;
		constexpr auto HandleTerrainCollision = 0x81a6e0;
		constexpr auto Sort = 0x81bba0;
		constexpr auto cctor = 0x81c530;
	};

	namespace WaterLevel {

		constexpr auto Factor = 0xd46040;
		constexpr auto Test = 0xd481f0;
		constexpr auto GetWaterDepth = 0xd46910;
		constexpr auto GetOverallWaterDepth = 0xd467c0;
		constexpr auto GetBuoyancyWaterInfo = 0xd46220;
		constexpr auto GetWaterInfo = 0xd46ca0;
		constexpr auto GetWaterInfoFromVolumes = 0xd46a50;
	};

	namespace System_Math {
		constexpr auto roundPower10Double = 0x8;

		constexpr auto Acos = 0x183e380;
		constexpr auto Asin = 0x183e390;
		constexpr auto Atan = 0x183e3b0;
		constexpr auto Atan2 = 0x183e3a0;
		constexpr auto Ceiling = 0x183e3c0;
		constexpr auto Cos = 0x183e3d0;
		constexpr auto Cosh = 0x183e3e0;
		constexpr auto Floor = 0x183e410;
		constexpr auto InternalRound = 0x183e420;
		constexpr auto InternalTruncate = 0x183e680;
		constexpr auto Sin = 0x183f110;
		constexpr auto Tan = 0x183f150;
		constexpr auto Sinh = 0x183f120;
		constexpr auto Round = 0x183edf0;
		constexpr auto SplitFractionDouble = 0x183f130;
		constexpr auto Truncate = 0x183f160;
		constexpr auto Sqrt = 0x183f140;
		constexpr auto Log = 0x183e850;
		constexpr auto Log10 = 0x183e6e0;
		constexpr auto Exp = 0x183e400;
		constexpr auto Pow = 0x183ec60;
		constexpr auto Abs = 0x183e2b0;
		constexpr auto AbsHelper = 0x183e150;
		constexpr auto Max = 0x183e900;
		constexpr auto Min = 0x183ec50;
		constexpr auto Sign = 0x183f0d0;
		constexpr auto DivRem = 0x183e3f0;
		constexpr auto cctor = 0x183f210;
	};

	namespace UnityEngine_Mathf {

		constexpr auto ClosestPowerOfTwo = 0x1b85fc0;
		constexpr auto IsPowerOfTwo = 0x1b863e0;
		constexpr auto NextPowerOfTwo = 0x1b86bb0;
		constexpr auto GammaToLinearSpace = 0x1b862b0;
		constexpr auto LinearToGammaSpace = 0x1b86640;
		constexpr auto FloatToHalf = 0x1b861b0;
		constexpr auto HalfToFloat = 0x1b862f0;
		constexpr auto PerlinNoise = 0x1b86bf0;
		constexpr auto Sin = 0x1b86e40;
		constexpr auto Cos = 0x1b86000;
		constexpr auto Tan = 0x1b87320;
		constexpr auto Asin = 0x1b85d60;
		constexpr auto Acos = 0x1b85c50;
		constexpr auto Atan = 0x1b85e40;
		constexpr auto Atan2 = 0x1b85dc0;
		constexpr auto Sqrt = 0x1b872c0;
		constexpr auto Abs = 0x1b85bf0;
		constexpr auto Min = 0x1b86850;
		constexpr auto Max = 0x1b867c0;
		constexpr auto Pow = 0x1b86c40;
		constexpr auto Exp = 0x1b86150;
		constexpr auto Log = 0x1b86740;
		constexpr auto Log10 = 0x1b86680;
		constexpr auto Ceil = 0x1b85f00;
		constexpr auto Floor = 0x1b86250;
		constexpr auto Round = 0x1b86dc0;
		constexpr auto CeilToInt = 0x1b85ea0;
		constexpr auto FloorToInt = 0x1b861f0;
		constexpr auto RoundToInt = 0x1b86d60;
		constexpr auto Sign = 0x1b86e20;
		constexpr auto Clamp = 0x1b85f80;
		constexpr auto Clamp01 = 0x1b85f60;
		constexpr auto Lerp = 0x1b865a0;
		constexpr auto LerpUnclamped = 0x1b86580;
		constexpr auto LerpAngle = 0x1b86420;
		constexpr auto MoveTowards = 0x1b86ac0;
		constexpr auto MoveTowardsAngle = 0x1b86860;
		constexpr auto SmoothStep = 0x1b87200;
		constexpr auto Approximately = 0x1b85cb0;
		constexpr auto SmoothDamp = 0x1b87030;
		constexpr auto Repeat = 0x1b86cc0;
		constexpr auto InverseLerp = 0x1b86330;
		constexpr auto DeltaAngle = 0x1b86060;
		constexpr auto cctor = 0x1b87380;
	};

	namespace Door {
		constexpr auto __menuOption_Menu_CloseDoor = 0x270;
		constexpr auto __menuOption_Menu_KnockDoor = 0x2c8;
		constexpr auto __menuOption_Menu_OpenDoor = 0x320;
		constexpr auto __menuOption_Menu_ToggleHatch = 0x378;
		constexpr auto knockEffect = 0x3d0;
		constexpr auto canTakeLock = 0x3d8;
		constexpr auto hasHatch = 0x3d9;
		constexpr auto canTakeCloser = 0x3da;
		constexpr auto canTakeKnocker = 0x3db;
		constexpr auto canNpcOpen = 0x3dc;
		constexpr auto canHandOpen = 0x3dd;
		constexpr auto isSecurityDoor = 0x3de;
		constexpr auto vehiclePhysBoxes = 0x3e0;
		constexpr auto checkPhysBoxesOnOpen = 0x3e8;
		constexpr auto vehicleCollisionSfx = 0x3f0;
		constexpr auto ClosedColliderRoots = 0x3f8;
		constexpr auto closeHash = 0x4;

		constexpr auto GetMenuOptions = 0xb73f90;
		constexpr auto get_HasMenuOptions = 0xb75a70;
		constexpr auto OnRpcMessage = 0xb753c0;
		constexpr auto ResetState = 0xb75810;
		constexpr auto HasSlot = 0xb74b80;
		constexpr auto CanPickup = 0xb73e20;
		constexpr auto Menu_OpenDoor = 0xb74f70;
		constexpr auto Menu_OpenDoor_Proxy = 0xb74e50;
		constexpr auto Menu_OpenDoorStart = 0xb74e10;
		constexpr auto Menu_OpenDoor_ShowIf = 0xb74f30;
		constexpr auto Menu_CloseDoor = 0xb74d20;
		constexpr auto Menu_CloseDoor_Proxy = 0xb74c00;
		constexpr auto Menu_CloseDoorStart = 0xb74bc0;
		constexpr auto Menu_CloseDoor_ShowIf = 0xb74ce0;
		constexpr auto Menu_KnockDoor = 0xb74dd0;
		constexpr auto Menu_KnockDoor_ShowIf = 0xb74d60;
		constexpr auto Menu_ToggleHatch = 0xb74fc0;
		constexpr auto Menu_ToggleHatch_ShowIf = 0xb74fb0;
		constexpr auto NeedsCrosshair = 0x5dbd60;
		constexpr auto OnDoorInterrupted = 0xb75000;
		constexpr auto ReverseDoorAnimation = 0xb75820;
		constexpr auto BoundsPadding = 0x8698e0;
		constexpr auto OnObjects = 0x458ce0;
		constexpr auto OnEmpty = 0x458ce0;
		constexpr auto OnFlagsChanged = 0xb75290;
		constexpr auto ctor = 0xb75a50;
		constexpr auto cctor = 0xb759e0;
	};

	namespace UnityEngine_Object {
		constexpr auto m_CachedPtr = 0x10;

		constexpr auto GetInstanceID = 0x1b90100;
		constexpr auto GetHashCode = 0x1b900f0;
		constexpr auto Equals = 0x1b8fd10;
		constexpr auto op_Implicit = 0x1b91590;
		constexpr auto CompareBaseObjects = 0x1b8fa20;
		constexpr auto IsNativeObjectAlive = 0x1b911e0;
		constexpr auto GetCachedPtr = 0x1ab77c0;
		constexpr auto get_name = 0x1b913b0;
		constexpr auto set_name = 0x1b91810;
		constexpr auto Instantiate = 0x1b90c60;
		constexpr auto Destroy = 0x1b8fc10;
		constexpr auto DestroyImmediate = 0x1b8fbc0;
		constexpr auto FindObjectsOfType = 0x1b900b0;
		constexpr auto DontDestroyOnLoad = 0x1b8fcd0;
		constexpr auto get_hideFlags = 0x1b91370;
		constexpr auto set_hideFlags = 0x1b917d0;
		constexpr auto CheckNullArgument = 0x1b8f9b0;
		constexpr auto FindObjectOfType = 0x1b90020;
		constexpr auto ToString = 0x1b91280;
		constexpr auto op_Equality = 0x1b91420;
		constexpr auto op_Inequality = 0x1b91660;
		constexpr auto GetOffsetOfInstanceIDInCPlusPlusObject = 0x1b90270;
		constexpr auto Internal_CloneSingle = 0x1b90fa0;
		constexpr auto Internal_CloneSingleWithParent = 0x1b90f40;
		constexpr auto Internal_InstantiateSingle = 0x1b91150;
		constexpr auto Internal_InstantiateSingleWithParent = 0x1b91050;
		constexpr auto GetName = 0x1b90230;
		constexpr auto SetName = 0x1b91230;
		constexpr auto FindObjectFromInstanceID = 0x1b8ffe0;
		constexpr auto ctor = 0x3ed140;
		constexpr auto cctor = 0x1b91330;
		constexpr auto Internal_InstantiateSingle_Injected = 0x1b910f0;
		constexpr auto Internal_InstantiateSingleWithParent_Injected = 0x1b90fe0;
	};

	namespace BaseMelee {
		constexpr auto canThrowAsProjectile = 0x280;
		constexpr auto canAiHearIt = 0x281;
		constexpr auto onlyThrowAsProjectile = 0x282;
		constexpr auto damageProperties = 0x288;
		constexpr auto damageTypes = 0x290;
		constexpr auto maxDistance = 0x298;
		constexpr auto attackRadius = 0x29c;
		constexpr auto isAutomatic = 0x2a0;
		constexpr auto blockSprintOnAttack = 0x2a1;
		constexpr auto strikeFX = 0x2a8;
		constexpr auto useStandardHitEffects = 0x2b0;
		constexpr auto aiStrikeDelay = 0x2b4;
		constexpr auto swingEffect = 0x2b8;
		constexpr auto materialStrikeFX = 0x2c0;
		constexpr auto heartStress = 0x2c8;
		constexpr auto gathering = 0x2d0;
		constexpr auto throwReady = 0x2d8;

		constexpr auto OnRpcMessage = 0xaf0c20;
		constexpr auto GetInheritedVelocity = 0x9796a0;
		constexpr auto DoThrow = 0xaeff40;
		constexpr auto CreateProjectile = 0xaef900;
		constexpr auto GetAttackStats = 0xaf0630;
		constexpr auto DoAttackShared = 0xaefab0;
		constexpr auto OnInput = 0xaf0840;
		constexpr auto get_CanAttack = 0x5dbd60;
		constexpr auto get_CanThrow = 0x5dbd60;
		constexpr auto ClientAttack = 0x458ce0;
		constexpr auto OnHolstered = 0xaf0820;
		constexpr auto ProcessAttack = 0xaf0dd0;
		constexpr auto DoAttack = 0xaefd00;
		constexpr auto DoViewmodelImpact = 0xaf05a0;
		constexpr auto OnViewmodelEvent = 0xaf0d10;
		constexpr auto ProcessSpectatorViewmodel = 0xaf1110;
		constexpr auto ProcessSpectatorViewmodelEvent = 0xaf1060;
		constexpr auto GetGatherInfoFromIndex = 0xaf0690;
		constexpr auto CanHit = 0x5dbd60;
		constexpr auto TotalDamage = 0xaf11c0;
		constexpr auto CanBeUsedInWater = 0x5dbd60;
		constexpr auto GetStrikeEffectPath = 0xaf06c0;
		constexpr auto ctor = 0xaf1320;
	};

	namespace ItemModProjectile {
		constexpr auto projectileObject = 0x18;
		constexpr auto mods = 0x20;
		constexpr auto ammoType = 0x28;
		constexpr auto numProjectiles = 0x2c;
		constexpr auto projectileSpread = 0x30;
		constexpr auto projectileVelocity = 0x34;
		constexpr auto projectileVelocitySpread = 0x38;
		constexpr auto useCurve = 0x3c;
		constexpr auto spreadScalar = 0x40;
		constexpr auto attackEffectOverride = 0x48;
		constexpr auto barrelConditionLoss = 0x50;
		constexpr auto category = 0x58;

		constexpr auto GetRandomVelocity = 0xab7e30;
		constexpr auto GetSpreadScalar = 0xab7e70;
		constexpr auto GetIndexedSpreadScalar = 0xab7da0;
		constexpr auto GetAverageVelocity = 0xab7d90;
		constexpr auto GetMinVelocity = 0xab7e20;
		constexpr auto GetMaxVelocity = 0xab7e10;
		constexpr auto IsAmmo = 0xab7ed0;
		constexpr auto ServerProjectileHit = 0xab7ee0;
		constexpr auto ctor = 0xab7fb0;
	};

	namespace RecoilProperties {
		constexpr auto recoilYawMin = 0x18;
		constexpr auto recoilYawMax = 0x1c;
		constexpr auto recoilPitchMin = 0x20;
		constexpr auto recoilPitchMax = 0x24;
		constexpr auto timeToTakeMin = 0x28;
		constexpr auto timeToTakeMax = 0x2c;
		constexpr auto ADSScale = 0x30;
		constexpr auto movementPenalty = 0x34;
		constexpr auto clampPitch = 0x38;
		constexpr auto pitchCurve = 0x40;
		constexpr auto yawCurve = 0x48;
		constexpr auto useCurves = 0x50;
		constexpr auto curvesAsScalar = 0x51;
		constexpr auto shotsUntilMax = 0x54;
		constexpr auto maxRecoilRadius = 0x58;
		constexpr auto overrideAimconeWithCurve = 0x5c;
		constexpr auto aimconeCurveScale = 0x60;
		constexpr auto aimconeCurve = 0x68;
		constexpr auto aimconeProbabilityCurve = 0x70;
		constexpr auto newRecoilOverride = 0x78;

		constexpr auto GetRecoil = 0xa044f0;
		constexpr auto ctor = 0xa04570;
	};

	namespace ItemDefinition {
		constexpr auto itemid = 0x18;
		constexpr auto shortname = 0x20;
		constexpr auto displayName = 0x28;
		constexpr auto displayDescription = 0x30;
		constexpr auto iconSprite = 0x38;
		constexpr auto category = 0x40;
		constexpr auto selectionPanel = 0x44;
		constexpr auto maxDraggable = 0x48;
		constexpr auto itemType = 0x4c;
		constexpr auto amountType = 0x50;
		constexpr auto occupySlots = 0x54;
		constexpr auto stackable = 0x58;
		constexpr auto quickDespawn = 0x5c;
		constexpr auto rarity = 0x60;
		constexpr auto spawnAsBlueprint = 0x64;
		constexpr auto inventorySelectSound = 0x68;
		constexpr auto inventoryGrabSound = 0x70;
		constexpr auto inventoryDropSound = 0x78;
		constexpr auto physImpactSoundDef = 0x80;
		constexpr auto condition = 0x88;
		constexpr auto hidden = 0xa0;
		constexpr auto flags = 0xa4;
		constexpr auto steamItem = 0xa8;
		constexpr auto steamDlc = 0xb0;
		constexpr auto Parent = 0xb8;
		constexpr auto worldModelPrefab = 0xc0;
		constexpr auto isRedirectOf = 0xc8;
		constexpr auto redirectVendingBehaviour = 0xd0;
		constexpr auto itemMods = 0xd8;
		constexpr auto Traits = 0xe0;
		constexpr auto skins = 0xe8;
		constexpr auto _skins2 = 0xf0;
		constexpr auto panel = 0xf8;
		constexpr auto ItemModWearablek__BackingField = 0x100;
		constexpr auto isHoldablek__BackingField = 0x108;
		constexpr auto isUsablek__BackingField = 0x109;
		constexpr auto CraftableWithSkink__BackingField = 0x10a;
		constexpr auto Children = 0x110;

		constexpr auto get_skins2 = 0xaaeb50;
		constexpr auto InvalidateWorkshopSkinCache = 0xaae8a0;
		constexpr auto get_Blueprint = 0xaae9b0;
		constexpr auto get_craftingStackable = 0xaaea70;
		constexpr auto HasFlag = 0xaae620;
		constexpr auto Initialize = 0xaae630;
		constexpr auto GetDisplayName = 0xaae520;
		constexpr auto GetDescriptionText = 0xaae450;
		constexpr auto FindIconSprite = 0xaae0f0;
		constexpr auto get_isWearable = 0xaaeaf0;
		constexpr auto get_ItemModWearable = 0xaaea60;
		constexpr auto set_ItemModWearable = 0xaaed60;
		constexpr auto get_isHoldable = 0xaaead0;
		constexpr auto set_isHoldable = 0xaaed70;
		constexpr auto get_isUsable = 0xaaeae0;
		constexpr auto set_isUsable = 0xaaed80;
		constexpr auto get_HasSkins = 0xaaea00;
		constexpr auto get_CraftableWithSkin = 0xaae9f0;
		constexpr auto set_CraftableWithSkin = 0xaaed50;
		constexpr auto ctor = 0xaae940;
		constexpr auto Initializeb__45_0 = 0xaae8c0;
	};

	namespace PlayerInput {
		constexpr auto state = 0x20;
		constexpr auto hadInputBuffer = 0x28;
		constexpr auto bodyRotation = 0x2c;
		constexpr auto bodyAngles = 0x3c;
		constexpr auto headRotation = 0x48;
		constexpr auto headAngles = 0x58;
		constexpr auto recoilAngles = 0x64;
		constexpr auto viewDelta = 0x70;
		constexpr auto headLerp = 0x78;
		constexpr auto mouseWheelUp = 0x7c;
		constexpr auto mouseWheelDn = 0x80;
		constexpr auto autorun = 0x84;
		constexpr auto toggleDuck = 0x85;
		constexpr auto toggleAds = 0x86;
		constexpr auto lastAdsEntity = 0x88;
		constexpr auto pendingMouseDelta = 0x8c;
		constexpr auto offsetAngles = 0x98;
		constexpr auto ignoredButtons = 0xa4;
		constexpr auto hasKeyFocus = 0xa8;

		constexpr auto OnDisable = 0xbed480;
		constexpr auto FrameUpdate = 0xbec620;
		constexpr auto CanToggleAds = 0xbec040;
		constexpr auto Flip = 0xbec4b0;
		constexpr auto ResetMouseDelta = 0xbed500;
		constexpr auto AddMouseDelta = 0xbea8a0;
		constexpr auto AdjustMouseMovement = 0xbeab70;
		constexpr auto UpdateViewAngles = 0xbed700;
		constexpr auto ApplyViewAngles = 0xbeadb0;
		constexpr auto SetViewVars = 0xbed5e0;
		constexpr auto FinalizeRecoil = 0xbec2d0;
		constexpr auto ResetOffsetAngles = 0xbed570;
		constexpr auto ClientAngles = 0xbec2a0;
		constexpr auto ClientLookVars = 0xbec2b0;
		constexpr auto HeadAngles = 0xbeca70;
		constexpr auto HeadLookVars = 0xbeca80;
		constexpr auto ModifyInputState = 0xbed3f0;
		constexpr auto IsButtonDownNative = 0xbecef0;
		constexpr auto BuildInputState = 0xbeb950;
		constexpr auto IsAiming = 0xbecda0;
		constexpr auto UpdateButton = 0xbed670;
		constexpr auto IgnoreCurrentButtons = 0xbecaa0;
		constexpr auto get_hasOnlyPartialKeyInput = 0xbeda10;
		constexpr auto get_hasNoKeyInput = 0xbed880;
		constexpr auto UpdateKeyFocus = 0xbed6e0;
		constexpr auto IgnoreCurrentKeys = 0xbecbb0;
		constexpr auto ctor = 0xbed810;
	};

	namespace PlayerModel {
		constexpr auto pm_downlimit = 0x4;
		constexpr auto pm_upspine = 0x8;
		constexpr auto pm_downspine = 0xc;
		constexpr auto pm_lookoffset = 0x10;
		constexpr auto pm_anglesmoothspeed = 0x1c;
		constexpr auto pm_nohold = 0x20;
		constexpr auto pm_ladder = 0x24;
		constexpr auto pm_minweight = 0x28;
		constexpr auto _smoothAimWeight = 0x18;
		constexpr auto _smoothVelocity = 0x1c;
		constexpr auto _smoothlookAngle = 0x20;
		constexpr auto allowMountedHeadLook = 0x2c;
		constexpr auto smoothLookDir = 0x30;
		constexpr auto lastSafeLookDir = 0x3c;
		constexpr auto Shoulders = 0x48;
		constexpr auto AdditionalSpineBones = 0x50;
		constexpr auto FinishedLegWearables = 0x30;
		constexpr auto LegParts = 0x58;
		constexpr auto fakeSpineBones = 0x60;
		constexpr auto extraLeanBack = 0x68;
		constexpr auto drawState = 0x6c;
		constexpr auto timeInArmsMode = 0x70;
		constexpr auto speed = 0x38;
		constexpr auto acceleration = 0x3c;
		constexpr auto rotationYaw = 0x40;
		constexpr auto forward = 0x44;
		constexpr auto right = 0x48;
		constexpr auto up = 0x4c;
		constexpr auto ducked = 0x50;
		constexpr auto grounded = 0x54;
		constexpr auto crawling = 0x58;
		constexpr auto waterlevel = 0x5c;
		constexpr auto attack = 0x60;
		constexpr auto attack_alt = 0x64;
		constexpr auto deploy = 0x68;
		constexpr auto reload = 0x6c;
		constexpr auto throwWeapon = 0x70;
		constexpr auto holster = 0x74;
		constexpr auto aiming = 0x78;
		constexpr auto onLadder = 0x7c;
		constexpr auto posing = 0x80;
		constexpr auto poseType = 0x84;
		constexpr auto relaxGunPose = 0x88;
		constexpr auto vehicle_aim_yaw = 0x8c;
		constexpr auto vehicle_aim_speed = 0x90;
		constexpr auto onPhone = 0x94;
		constexpr auto usePoseTransition = 0x98;
		constexpr auto leftFootIK = 0x9c;
		constexpr auto rightFootIK = 0xa0;
		constexpr auto vehicleSteering = 0xa4;
		constexpr auto sitReaction = 0xa8;
		constexpr auto forwardReaction = 0xac;
		constexpr auto rightReaction = 0xb0;
		constexpr auto collision = 0x78;
		constexpr auto censorshipCube = 0x80;
		constexpr auto censorshipCubeBreasts = 0x88;
		constexpr auto jawBone = 0x90;
		constexpr auto neckBone = 0x98;
		constexpr auto headBone = 0xa0;
		constexpr auto eyeController = 0xa8;
		constexpr auto blinkController = 0xb0;
		constexpr auto SpineBones = 0xb8;
		constexpr auto leftFootBone = 0xc0;
		constexpr auto rightFootBone = 0xc8;
		constexpr auto leftHandPropBone = 0xd0;
		constexpr auto rightHandPropBone = 0xd8;
		constexpr auto rightHandTarget = 0xe0;
		constexpr auto leftHandTargetPosition = 0xec;
		constexpr auto leftHandTargetRotation = 0xf8;
		constexpr auto rightHandTargetPosition = 0x108;
		constexpr auto rightHandTargetRotation = 0x114;
		constexpr auto steeringTargetDegrees = 0x124;
		constexpr auto rightFootTargetPosition = 0x128;
		constexpr auto rightFootTargetRotation = 0x134;
		constexpr auto leftFootTargetPosition = 0x144;
		constexpr auto leftFootTargetRotation = 0x150;
		constexpr auto CinematicAnimationController = 0x160;
		constexpr auto DefaultAvatar = 0x168;
		constexpr auto CinematicAvatar = 0x170;
		constexpr auto DefaultHoldType = 0x178;
		constexpr auto SleepGesture = 0x180;
		constexpr auto CrawlToIncapacitatedGesture = 0x188;
		constexpr auto StandToIncapacitatedGesture = 0x190;
		constexpr auto CurrentGesture = 0x198;
		constexpr auto MaleSkin = 0x1a0;
		constexpr auto FemaleSkin = 0x1a8;
		constexpr auto subsurfaceProfile = 0x1b0;
		constexpr auto voiceVolume = 0x1b8;
		constexpr auto skinColor = 0x1bc;
		constexpr auto skinNumber = 0x1c0;
		constexpr auto meshNumber = 0x1c4;
		constexpr auto hairNumber = 0x1c8;
		constexpr auto skinType = 0x1cc;
		constexpr auto movementSounds = 0x1d0;
		constexpr auto showSash = 0x1d8;
		constexpr auto tempPoseType = 0x1dc;
		constexpr auto underwearSkin = 0x1e0;
		constexpr auto overrideSkinSeedk__BackingField = 0x1e8;
		constexpr auto AimAnglesk__BackingField = 0x1f0;
		constexpr auto LookAnglesk__BackingField = 0x200;
		constexpr auto modelState = 0x210;
		constexpr auto position = 0x218;
		constexpr auto velocity = 0x224;
		constexpr auto speedOverride = 0x230;
		constexpr auto newVelocity = 0x23c;
		constexpr auto rotation = 0x248;
		constexpr auto mountedRotation = 0x258;
		constexpr auto smoothLeftFootIK = 0x268;
		constexpr auto smoothRightFootIK = 0x274;
		constexpr auto drawShadowOnly = 0x280;
		constexpr auto isIncapacitated = 0x281;
		constexpr auto flinchLocation = 0x284;
		constexpr auto visible = 0x288;
		constexpr auto nameTag = 0x290;
		constexpr auto animatorNeedsWarmup = 0x298;
		constexpr auto isLocalPlayer = 0x299;
		constexpr auto aimSoundDef = 0x2a0;
		constexpr auto aimEndSoundDef = 0x2a8;
		constexpr auto InGesture = 0x2b0;
		constexpr auto CurrentGestureConfig = 0x2b8;
		constexpr auto InCinematic = 0x2c0;
		constexpr auto defaultAnimatorController = 0x2c8;
		constexpr auto _multiMesh = 0x2d0;
		constexpr auto _animator = 0x2d8;
		constexpr auto _lodGroup = 0x2e0;
		constexpr auto _currentGesture = 0x2e8;
		constexpr auto holdTypeLock = 0x2f0;
		constexpr auto hasHeldEntity = 0x2f4;
		constexpr auto wasMountedRightAim = 0x2f5;
		constexpr auto cachedMask = 0x2f8;
		constexpr auto cachedConstructionMask = 0x2fc;
		constexpr auto WorkshopHeldEntity = 0x300;
		constexpr auto wasCrawling = 0x308;
		constexpr auto mountedSpineLookWeight = 0x30c;
		constexpr auto mountedAnimSpeed = 0x310;
		constexpr auto preserveBones = 0x314;
		constexpr auto downLimitOverride = 0x318;
		constexpr auto IsNpck__BackingField = 0x320;
		constexpr auto timeSinceReactionStart = 0x324;
		constexpr auto timeSinceLeftFootTest = 0x328;
		constexpr auto cachedLeftFootPos = 0x32c;
		constexpr auto cachedLeftFootNormal = 0x338;
		constexpr auto timeSinceRightFootTest = 0x344;
		constexpr auto cachedRightFootPos = 0x348;
		constexpr auto cachedRightFootNormal = 0x354;

		constexpr auto SetMountedLookAtOverride = 0xbf9fa0;
		constexpr auto SpineIk = 0xbfa3c0;
		constexpr auto ParentArmsToCamera = 0xbf81b0;
		constexpr auto OnAnimatorIK = 0xbf7820;
		constexpr auto HandIK = 0xbf5e80;
		constexpr auto FootIK = 0xbf2690;
		constexpr auto HeadIK = 0xbf62e0;
		constexpr auto get_ShouldDoLegs = 0xbffcb0;
		constexpr auto get_ShouldShowHands = 0xbffd30;
		constexpr auto ClearLegs = 0xbf1500;
		constexpr auto RebuildLegs = 0xbf8b60;
		constexpr auto InitializeLegSpineBones = 0xbf69c0;
		constexpr auto UpdateLegsBeforeRender = 0xbfbbd0;
		constexpr auto UpdateLegsDisable = 0xbfcac0;
		constexpr auto AddLegRenderer = 0xbf0a30;
		constexpr auto SwapLegBone = 0xbfadb0;
		constexpr auto GetFlat = 0xbf52f0;
		constexpr auto RebuildAll = 0xbf8760;
		constexpr auto get_overrideSkinSeed = 0xc00010;
		constexpr auto set_overrideSkinSeed = 0xc00050;
		constexpr auto get_IsFemale = 0xbffc60;
		constexpr auto get_SkinSet = 0xbffe10;
		constexpr auto get_AimAngles = 0xbffb10;
		constexpr auto set_AimAngles = 0xc00020;
		constexpr auto get_LookAngles = 0xbffca0;
		constexpr auto set_LookAngles = 0xc00040;
		constexpr auto get_GestureAllowsSpineMovement = 0xbffbc0;
		constexpr auto get_GestureAllowsRootMotion = 0xbffb20;
		constexpr auto get_IsFirstPerson = 0xbffc70;
		constexpr auto get_IsNpc = 0xbffc90;
		constexpr auto set_IsNpc = 0xc00030;
		constexpr auto get_multiMesh = 0xbfff70;
		constexpr auto get_animator = 0xbffe30;
		constexpr auto get_lodGroup = 0xbffed0;
		constexpr auto GetTargetVelocity = 0xbf5d20;
		constexpr auto Awake = 0xbf1460;
		constexpr auto OnEnable = 0xbf7c40;
		constexpr auto OnDisable = 0xbf7950;
		constexpr auto SetDefaultAnimatorWeights = 0xbf9880;
		constexpr auto UpdateMultiMesh = 0xbfd160;
		constexpr auto UpdateCensorship = 0xbfb2f0;
		constexpr auto UpdateCollider = 0xbfb770;
		constexpr auto UpdateModelState = 0xbfd110;
		constexpr auto UpdatePosition = 0xbfdbd0;
		constexpr auto UpdateRotation = 0xbfdcf0;
		constexpr auto UpdateLocalVelocity = 0xbfd040;
		constexpr auto UpdateVelocity = 0xbfe670;
		constexpr auto UpdateParameters = 0xbfd2f0;
		constexpr auto UpdateFrom = 0xbfb9e0;
		constexpr auto UpdateGlobalShaderConstants = 0xbfba40;
		constexpr auto LateCycle = 0xbf71a0;
		constexpr auto FrameUpdate = 0xbf4900;
		constexpr auto FrameUpdate_Default = 0xbf3f20;
		constexpr auto FrameUpdate_Sleeping = 0xbf4630;
		constexpr auto FrameUpdate_Incapacitated = 0xbf4090;
		constexpr auto FrameUpdate_OnLadder = 0xbf4360;
		constexpr auto GetAim360 = 0xbf5080;
		constexpr auto UpdateVehicleAim360 = 0xbfe180;
		constexpr auto ResetCurrentState = 0xbf9730;
		constexpr auto DoAimingSounds = 0xbf1e30;
		constexpr auto SetAimSounds = 0xbf9840;
		constexpr auto SetMountedLookAtWeight = 0xbf9fb0;
		constexpr auto SetMountedAnimationSpeed = 0xbf9f90;
		constexpr auto UpdateLocalPlayerPosition = 0xbfccf0;
		constexpr auto Attack = 0xbf13e0;
		constexpr auto AltAttack = 0xbf10a0;
		constexpr auto Deploy = 0xbf1d80;
		constexpr auto Reload = 0xbf94b0;
		constexpr auto Holster = 0xbf6940;
		constexpr auto Flinch = 0xbf2630;
		constexpr auto SetReactionAnim = 0xbf9fc0;
		constexpr auto OnReactionEnded = 0xbf8180;
		constexpr auto Throw = 0xbfb0e0;
		constexpr auto Gesture = 0xbf4cf0;
		constexpr auto FadeInGestureUpperBodyLayer = 0xbf2090;
		constexpr auto FadeOutGestureUpperBodyLayer = 0xbf2380;
		constexpr auto FadeInGestureFullBodyLayer = 0xbf1f70;
		constexpr auto FadeOutGestureFullBodyLayer = 0xbf21b0;
		constexpr auto AnimatorWarmup = 0xbf1150;
		constexpr auto AlwaysAnimate = 0xbf1120;
		constexpr auto SetHoldType = 0xbf9c10;
		constexpr auto SetHasHeldEntity = 0xbf9c00;
		constexpr auto FadeOutGestureLayer = 0xbf2310;
		constexpr auto SetGesture = 0xbf99b0;
		constexpr auto FadeOutPlayerGestureLayers = 0xbf24e0;
		constexpr auto StopGesture = 0xbfacb0;
		constexpr auto PlayCinematic = 0xbf85d0;
		constexpr auto StopCinematic = 0xbfac50;
		constexpr auto SetSpeedOverride = 0xbfa3a0;
		constexpr auto GetReplacementUnderwear = 0xbf5c60;
		constexpr auto RemoveUnderwearParts = 0xbf9600;
		constexpr auto Clear = 0xbf1660;
		constexpr auto Rebuild = 0xbf8f20;
		constexpr auto AddPart = 0xbf0dc0;
		constexpr auto RemovePart = 0xbf9530;
		constexpr auto HasPart = 0xbf6220;
		constexpr auto IsBarefoot = 0xbf7110;
		constexpr auto GetSkinColor = 0xbf5ca0;
		constexpr auto SetSkinProperties = 0xbfa280;
		constexpr auto RefreshUnderwear = 0xbf9120;
		constexpr auto ForceModelSeed = 0xbf3cf0;
		constexpr auto FindBone = 0xbf2600;
		constexpr auto GetBones = 0xbf52c0;
		constexpr auto GetFootPlacement = 0xbf5330;
		constexpr auto ApplyVisibility = 0xbf11b0;
		constexpr auto ToggleUpdateOffscreen = 0xbfb180;
		constexpr auto OnParentDestroying = 0xbf8080;
		constexpr auto WorkshopPreviewSetup = 0xbfea80;
		constexpr auto ctor = 0xbff960;
		constexpr auto cctor = 0xbff420;
	};

	namespace ProtoBuf_PlayerTeam {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto teamID = 0x18;
		constexpr auto teamName = 0x20;
		constexpr auto teamLeader = 0x28;
		constexpr auto members = 0x30;
		constexpr auto teamLifetime = 0x38;
		constexpr auto mapNote = 0x40;

		constexpr auto ResetToPool = 0x2289d30;
		constexpr auto Dispose = 0x2289930;
		constexpr auto EnterPool = 0x1203540;
		constexpr auto LeavePool = 0x1203570;
		constexpr auto CopyTo = 0x2287e40;
		constexpr auto Copy = 0x2288080;
		constexpr auto Deserialize = 0x2288e30;
		constexpr auto DeserializeLengthDelimited = 0x2288100;
		constexpr auto DeserializeLength = 0x22885b0;
		constexpr auto FromProto = 0x22899b0;
		constexpr auto WriteToStream = 0x228abf0;
		constexpr auto WriteToStreamDelta = 0x228ac10;
		constexpr auto ReadFromStream = 0x2289d10;
		constexpr auto SerializeDelta = 0x228a1e0;
		constexpr auto Serialize = 0x228a800;
		constexpr auto ToProtoBytes = 0x228abe0;
		constexpr auto ToProto = 0x228abf0;
		constexpr auto SerializeToBytes = 0x228a6f0;
		constexpr auto SerializeLengthDelimited = 0x228a640;
		constexpr auto ctor = 0x1150f20;
	};

	namespace PlayerInventory {
		constexpr auto containerMain = 0x20;
		constexpr auto containerBelt = 0x28;
		constexpr auto containerWear = 0x30;
		constexpr auto crafting = 0x38;
		constexpr auto loot = 0x40;

		constexpr auto OnRpcMessage = 0xbee870;
		constexpr auto Initialize = 0xbee4c0;
		constexpr auto DoDestroy = 0xbedca0;
		constexpr auto ClientInit = 0xbedc20;
		constexpr auto UpdatedItemContainer = 0xbeecc0;
		constexpr auto FindItemUID = 0xbee2e0;
		constexpr auto FindItemID = 0xbee000;
		constexpr auto FindBySubEntityID = 0xbedd80;
		constexpr auto FindItemIDs = 0xbee1f0;
		constexpr auto FindContainer = 0xbede50;
		constexpr auto GetContainer = 0xbee440;
		constexpr auto Load = 0xbee720;
		constexpr auto GetAmount = 0xbee3c0;
		constexpr auto AllItems = 0xbedb50;
		constexpr auto AllItemsNoAlloc = 0xbeda80;
		constexpr auto FindAmmo = 0xbedd30;
		constexpr auto HasAmmo = 0xbee460;
		constexpr auto ctor = 0xbeeeb0;
	};

	namespace ItemContainer {
		constexpr auto flags = 0x10;
		constexpr auto allowedContents = 0x14;
		constexpr auto onlyAllowedItems = 0x18;
		constexpr auto availableSlots = 0x20;
		constexpr auto capacity = 0x28;
		constexpr auto uid = 0x2c;
		constexpr auto dirty = 0x30;
		constexpr auto itemList = 0x38;
		constexpr auto temperature = 0x40;
		constexpr auto parent = 0x48;
		constexpr auto playerOwner = 0x50;
		constexpr auto entityOwner = 0x58;
		constexpr auto isServer = 0x60;
		constexpr auto maxStackSize = 0x64;

		constexpr auto HasFlag = 0xaac490;
		constexpr auto SetFlag = 0xaad540;
		constexpr auto IsLocked = 0xaac660;
		constexpr auto PlayerItemInputBlocked = 0xaad180;
		constexpr auto get_HasLimitedAllowedItems = 0xaad930;
		constexpr auto OnChanged = 0xaad0e0;
		constexpr auto ClientInitialize = 0xaab5c0;
		constexpr auto FindItemByUID = 0xaabb70;
		constexpr auto IsFull = 0xaac610;
		constexpr auto IsEmpty = 0xaac5d0;
		constexpr auto CanAccept = 0xaab490;
		constexpr auto GetMaxTransferAmount = 0xaac130;
		constexpr auto SetOnlyAllowedItem = 0xaad560;
		constexpr auto SetOnlyAllowedItems = 0xaad620;
		constexpr auto Insert = 0xaac4a0;
		constexpr auto SlotTaken = 0xaad7b0;
		constexpr auto GetSlot = 0xaac2f0;
		constexpr auto FindPosition = 0xaabe60;
		constexpr auto Clear = 0xaab4e0;
		constexpr auto Kill = 0xaac670;
		constexpr auto GetAmount = 0xaabfb0;
		constexpr auto FindItemByItemID = 0xaaba00;
		constexpr auto FindItemsByItemName = 0xaabd10;
		constexpr auto FindBySubEntityID = 0xaab7a0;
		constexpr auto FindItemsByItemID = 0xaabc60;
		constexpr auto Save = 0xaad190;
		constexpr auto Load = 0xaac930;
		constexpr auto GetOwnerPlayer = 0x5d4b50;
		constexpr auto ContainerMaxStackSize = 0xaab600;
		constexpr auto FindAmmo = 0xaab6e0;
		constexpr auto HasAmmo = 0xaac3c0;
		constexpr auto GetAmmoAmount = 0xaabef0;
		constexpr auto TotalItemAmount = 0xaad7d0;
		constexpr auto ContentsHash = 0xaab610;
		constexpr auto FindContainer = 0xaab910;
		constexpr auto CanAcceptItem = 0xaab020;
		constexpr auto ctor = 0xaad880;
	};

	namespace Item {
		constexpr auto amountOverride = 0x10;
		constexpr auto _condition = 0x18;
		constexpr auto _maxCondition = 0x1c;
		constexpr auto info = 0x20;
		constexpr auto uid = 0x28;
		constexpr auto dirty = 0x2c;
		constexpr auto amount = 0x30;
		constexpr auto position = 0x34;
		constexpr auto busyTime = 0x38;
		constexpr auto removeTime = 0x3c;
		constexpr auto fuel = 0x40;
		constexpr auto isServer = 0x44;
		constexpr auto instanceData = 0x48;
		constexpr auto skin = 0x50;
		constexpr auto name = 0x58;
		constexpr auto text = 0x60;
		constexpr auto OnDirty = 0x68;
		constexpr auto flags = 0x70;
		constexpr auto contents = 0x78;
		constexpr auto parent = 0x80;
		constexpr auto worldEnt = 0x88;
		constexpr auto heldEntity = 0x98;

		constexpr auto UpdateAmountDisplay = 0xabd6a0;
		constexpr auto FormatAmount = 0xabc160;
		constexpr auto set_condition = 0xabe650;
		constexpr auto get_condition = 0x853170;
		constexpr auto set_maxCondition = 0xabe6d0;
		constexpr auto get_maxCondition = 0x853140;
		constexpr auto get_maxConditionNormalized = 0xabe400;
		constexpr auto get_conditionNormalized = 0xabdf90;
		constexpr auto set_conditionNormalized = 0xabe5b0;
		constexpr auto get_hasCondition = 0xabe090;
		constexpr auto get_isBroken = 0xabe2d0;
		constexpr auto get_despawnMultiplier = 0xabdfd0;
		constexpr auto get_blueprintTargetDef = 0xabdf60;
		constexpr auto get_blueprintTarget = 0xabdf80;
		constexpr auto set_blueprintTarget = 0xabe520;
		constexpr auto get_blueprintAmount = 0xabdf50;
		constexpr auto set_blueprintAmount = 0xabe510;
		constexpr auto IsBlueprint = 0xabc690;
		constexpr auto add_OnDirty = 0xabde90;
		constexpr auto remove_OnDirty = 0xabe470;
		constexpr auto HasFlag = 0xabc680;
		constexpr auto SetFlag = 0xabd1a0;
		constexpr auto IsOn = 0xabc8c0;
		constexpr auto IsOnFire = 0xabc8b0;
		constexpr auto IsCooking = 0xabc870;
		constexpr auto IsLocked = 0xabc880;
		constexpr auto get_parentItem = 0xabe430;
		constexpr auto MarkDirty = 0xabccf0;
		constexpr auto OnChanged = 0xabcde0;
		constexpr auto CollectedForCrafting = 0x458ce0;
		constexpr auto ReturnedFromCancelledCraft = 0x458ce0;
		constexpr auto IsChildContainer = 0xabc6e0;
		constexpr auto IsBusy = 0xabc6b0;
		constexpr auto BusyFor = 0xabbd10;
		constexpr auto Remove = 0xabcf90;
		constexpr auto DoRemove = 0xabbfc0;
		constexpr auto SwitchOnOff = 0xabd330;
		constexpr auto LockUnlock = 0xabcc70;
		constexpr auto get_temperature = 0xabe450;
		constexpr auto GetOwnerPlayer = 0xabc490;
		constexpr auto CanBeHeld = 0xabbd40;
		constexpr auto CanStack = 0xabbd80;
		constexpr auto IsValid = 0xabc8d0;
		constexpr auto SetWorldEntity = 0xabd1c0;
		constexpr auto OnMovedToWorld = 0xabcf00;
		constexpr auto GetWorldEntity = 0xabc540;
		constexpr auto GetHeldEntity = 0xabc470;
		constexpr auto BeltBarSelect = 0xabbc70;
		constexpr auto GetTotalUISlots = 0xabc4b0;
		constexpr auto GetFilledUISlots = 0xabc3e0;
		constexpr auto HasAmmo = 0xabc560;
		constexpr auto FindAmmo = 0xabc010;
		constexpr auto GetAmmoAmount = 0xabc2c0;
		constexpr auto ToString = 0xabd3b0;
		constexpr auto FindItem = 0xabc140;
		constexpr auto MaxStackable = 0xabcd50;
		constexpr auto get_iconSprite = 0xabe130;
		constexpr auto get_isLoadingIconSprite = 0xabe300;
		constexpr auto get_Traits = 0xabdf30;
		constexpr auto Save = 0xabcff0;
		constexpr auto Load = 0xabc8e0;
		constexpr auto ctor = 0xabde70;
		constexpr auto cctor = 0xabdda0;
		constexpr auto get_iconSpriteb__95_0 = 0xabd690;
		constexpr auto get_isLoadingIconSpriteb__97_0 = 0xabd690;
	};

	namespace Model {
		constexpr auto collision = 0x18;
		constexpr auto rootBone = 0x20;
		constexpr auto headBone = 0x28;
		constexpr auto eyeBone = 0x30;
		constexpr auto animator = 0x38;
		constexpr auto skeleton = 0x40;
		constexpr auto boneTransforms = 0x48;
		constexpr auto boneNames = 0x50;
		constexpr auto boneDict = 0x58;
		constexpr auto skin = 0x60;
		constexpr auto _lodGroup = 0x68;

		constexpr auto OnEnable = 0x8526d0;
		constexpr auto BuildBoneDictionary = 0x851e40;
		constexpr auto GetSkin = 0x66bc80;
		constexpr auto FindBoneInternal = 0x851f30;
		constexpr auto FindBone = 0x851fc0;
		constexpr auto FindBoneID = 0x851ef0;
		constexpr auto GetBones = 0x8521d0;
		constexpr auto FindClosestBone = 0x852030;
		constexpr auto get_lodGroup = 0x852ec0;
		constexpr auto OnDisable = 0x8525a0;
		constexpr auto SyncBones = 0x852aa0;
		constexpr auto Trigger = 0x852e10;
		constexpr auto GetTransform = 0x852200;
		constexpr auto ApplyVisibility = 0x851cb0;
		constexpr auto PreProcess = 0x8526e0;
		constexpr auto ctor = 0x3eb250;
	};

	namespace MedicalTool {
		constexpr auto healDurationSelf = 0x280;
		constexpr auto healDurationOther = 0x284;
		constexpr auto healDurationOtherWounded = 0x288;
		constexpr auto maxDistanceOther = 0x28c;
		constexpr auto canUseOnOther = 0x290;
		constexpr auto canRevive = 0x291;
		constexpr auto useTarget = 0x298;
		constexpr auto resetTime = 0x2a0;

		constexpr auto OnRpcMessage = 0xa5ba50;
		constexpr auto GetTarget = 0xa5b2f0;
		constexpr auto AnyPressed = 0xa5b220;
		constexpr auto OnInput = 0xa5b6a0;
		constexpr auto OnViewmodelEvent = 0xa5be20;
		constexpr auto Reset = 0xa5c030;
		constexpr auto OnDeploy = 0xa5b640;
		constexpr auto OnHolstered = 0xa5b670;
		constexpr auto ProcessSpectatorViewmodelEvent = 0xa5bf70;
		constexpr auto ctor = 0xa5c050;
	};

	namespace HeldEntity {
		constexpr auto _punches = 0x168;
		constexpr auto punchAdded = 0x170;
		constexpr auto lastPunchTime = 0x17c;
		constexpr auto worldModelAnimator = 0x180;
		constexpr auto thirdPersonDeploySound = 0x188;
		constexpr auto thirdPersonAimSound = 0x190;
		constexpr auto thirdPersonAimEndSound = 0x198;
		constexpr auto viewModel = 0x1a0;
		constexpr auto isDeployed = 0x1a8;
		constexpr auto nextExamineTime = 0x1ac;
		constexpr auto handBone = 0x1b0;
		constexpr auto HoldAnimationOverride = 0x1b8;
		constexpr auto isBuildingTool = 0x1c0;
		constexpr auto hostileScore = 0x1c4;
		constexpr auto holsterInfo = 0x1c8;
		constexpr auto HeldCameraMode = 0x1d0;
		constexpr auto FirstPersonArmOffset = 0x1d4;
		constexpr auto FirstPersonArmRotation = 0x1e0;
		constexpr auto FirstPersonRotationStrength = 0x1ec;
		constexpr auto ownerItemUID = 0x1f0;

		constexpr auto OnRpcMessage = 0x7d0c20;
		constexpr auto AddPunch = 0x7cfe70;
		constexpr auto CL_Punch = 0x7cff40;
		constexpr auto DoRecoilCompensation = 0x458ce0;
		constexpr auto GetAddedPunch = 0x7d0270;
		constexpr auto SimPunches = 0x7d1410;
		constexpr auto ClientInit = 0x7cfff0;
		constexpr auto GetFovOverride = 0x7d0290;
		constexpr auto DoNetworkDestroy = 0x7d00c0;
		constexpr auto PostLateClientCycle = 0x458ce0;
		constexpr auto PostNetworkUpdate = 0x7d10d0;
		constexpr auto UpdateHolsteredOffset = 0x7d18e0;
		constexpr auto EditViewAngles = 0x458ce0;
		constexpr auto ClampPitch = 0x458ce0;
		constexpr auto OnFrame = 0x7d0a90;
		constexpr auto OnInput = 0x458ce0;
		constexpr auto Examine = 0x7d0100;
		constexpr auto OnDeploy = 0x7d07d0;
		constexpr auto OnDeployed = 0x7d0a80;
		constexpr auto OnHolster = 0x7d0ab0;
		constexpr auto OnHolstered = 0x7d0c10;
		constexpr auto OnViewmodelEvent = 0x458ce0;
		constexpr auto OnReliableEvent = 0x458ce0;
		constexpr auto ModifyCamera = 0x458ce0;
		constexpr auto ShouldDestroyImmediately = 0x5dbd60;
		constexpr auto UpdatePlayerModel = 0x7d20e0;
		constexpr auto ProcessPlayerModel = 0x458ce0;
		constexpr auto GetHoldAnimations = 0x7d0480;
		constexpr auto GetMovementMultiplier = 0x5c8b30;
		constexpr auto OnSpawnedForWorkshopPreview = 0x458ce0;
		constexpr auto HeldEntityBlocksMovement = 0x591c80;
		constexpr auto ProcessSpectatorViewmodel = 0x458ce0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x7d1360;
		constexpr auto get_hostile = 0x7d2290;
		constexpr auto LightsOn = 0x7d0760;
		constexpr auto IsDeployed = 0x7d0750;
		constexpr auto GetOwnerPlayer = 0x7d0690;
		constexpr auto GetOwnerConnection = 0x7d04a0;
		constexpr auto CanBeUsedInWater = 0x591c80;
		constexpr auto BlocksGestures = 0x591c80;
		constexpr auto GetOwnerItem = 0x7d05b0;
		constexpr auto GetItem = 0x7d0490;
		constexpr auto GetOwnerItemDefinition = 0x7d0530;
		constexpr auto IsInstrument = 0x591c80;
		constexpr auto Load = 0x7d0770;
		constexpr auto ctor = 0x7d21a0;
		constexpr auto cctor = 0x7d2160;
	};

	namespace UnityEngine_GUIContent {
		constexpr auto m_Text = 0x10;
		constexpr auto m_Image = 0x18;
		constexpr auto m_Tooltip = 0x20;
		constexpr auto s_Image = 0x8;
		constexpr auto s_TextImage = 0x10;
		constexpr auto none = 0x18;

		constexpr auto get_text = 0x1ab77c0;
		constexpr auto set_text = 0x5c0f20;
		constexpr auto set_image = 0x5d8610;
		constexpr auto get_tooltip = 0x1caff80;
		constexpr auto set_tooltip = 0x590fe0;
		constexpr auto ctor = 0x1cafef0;
		constexpr auto Temp = 0x1caf7d0;
		constexpr auto ClearStaticCache = 0x1caf670;
		constexpr auto cctor = 0x1cafaa0;
	};

	namespace BaseCombatEntity {
		constexpr auto __menuOption_Menu_Pickup = 0x168;
		constexpr auto skeletonProperties = 0x1c0;
		constexpr auto baseProtection = 0x1c8;
		constexpr auto startHealth = 0x1d0;
		constexpr auto pickup = 0x1d8;
		constexpr auto repair = 0x1f8;
		constexpr auto ShowHealthInfo = 0x220;
		constexpr auto lifestate = 0x224;
		constexpr auto sendsHitNotification = 0x228;
		constexpr auto sendsMeleeHitNotification = 0x229;
		constexpr auto markAttackerHostile = 0x22a;
		constexpr auto _health = 0x22c;
		constexpr auto _maxHealth = 0x230;
		constexpr auto faction = 0x234;
		constexpr auto deathTime = 0x238;
		constexpr auto lastNotifyFrame = 0x23c;

		constexpr auto GetMenuOptions = 0x82c330;
		constexpr auto get_HasMenuOptions = 0x82d530;
		constexpr auto OnRpcMessage = 0x82ca80;
		constexpr auto HitNotify = 0x82c6a0;
		constexpr auto ClientInit = 0x82bd40;
		constexpr auto DisplayHealthInfo = 0x627820;
		constexpr auto GetEyeTransform = 0x82c210;
		constexpr auto OnLifeStateChanged = 0x82ca50;
		constexpr auto GetPickupCount = 0x82c670;
		constexpr auto CanPickup = 0x82bca0;
		constexpr auto OnPickedUp = 0x458ce0;
		constexpr auto OnPickedUpPreItemMove = 0x458ce0;
		constexpr auto Menu_Pickup = 0x82c920;
		constexpr auto Menu_Pickup_TimeStart = 0x458ce0;
		constexpr auto Menu_Pickup_If = 0x82c900;
		constexpr auto BuildCost = 0x82bbd0;
		constexpr auto IsDead = 0x82c850;
		constexpr auto IsAlive = 0x82c840;
		constexpr auto GetFaction = 0x82c320;
		constexpr auto IsFriendly = 0x591c80;
		constexpr auto get_SecondsSinceDeath = 0x82d5f0;
		constexpr auto get_healthFraction = 0x82d610;
		constexpr auto ResetState = 0x82d0c0;
		constexpr auto DestroyShared = 0x82be20;
		constexpr auto GetThreatLevel = 0x82c680;
		constexpr auto PenetrationResistance = 0x82d030;
		constexpr auto ScaleDamage = 0x82d1c0;
		constexpr auto SkeletonLookup = 0x82d300;
		constexpr auto Load = 0x82c860;
		constexpr auto get_health = 0x82c690;
		constexpr auto set_health = 0x82d660;
		constexpr auto Health = 0x82c690;
		constexpr auto MaxHealth = 0x6c7840;
		constexpr auto StartHealth = 0x6c7920;
		constexpr auto StartMaxHealth = 0x82d3b0;
		constexpr auto SetMaxHealth = 0x82d270;
		constexpr auto DoHitNotify = 0x82be40;
		constexpr auto OnAttacked = 0x82c960;
		constexpr auto ctor = 0x82d3d0;
	};

	namespace InputState {
		constexpr auto current = 0x10;
		constexpr auto previous = 0x18;
		constexpr auto SwallowedButtons = 0x20;

		constexpr auto IsDown = 0x93c490;
		constexpr auto WasDown = 0x93c560;
		constexpr auto IsAnyDown = 0x93c460;
		constexpr auto WasJustPressed = 0x93c580;
		constexpr auto WasJustReleased = 0x93c5c0;
		constexpr auto SwallowButton = 0x93c550;
		constexpr auto AimAngle = 0x93c220;
		constexpr auto MouseDelta = 0x93c4c0;
		constexpr auto Flip = 0x93c390;
		constexpr auto Clear = 0x93c2e0;
		constexpr auto ctor = 0x93c600;
	};

	namespace InputMessage {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto buttons = 0x14;
		constexpr auto aimAngles = 0x18;
		constexpr auto mouseDelta = 0x24;

		constexpr auto ResetToPool = 0x2251b50;
		constexpr auto Dispose = 0x2251850;
		constexpr auto EnterPool = 0x1203540;
		constexpr auto LeavePool = 0x1203570;
		constexpr auto CopyTo = 0x22508b0;
		constexpr auto Copy = 0x22508f0;
		constexpr auto Deserialize = 0x2250f80;
		constexpr auto DeserializeLengthDelimited = 0x2250c10;
		constexpr auto DeserializeLength = 0x2250c90;
		constexpr auto FromProto = 0x22518d0;
		constexpr auto WriteToStream = 0x2252420;
		constexpr auto WriteToStreamDelta = 0x2252440;
		constexpr auto ReadFromStream = 0x2251a90;
		constexpr auto SerializeDelta = 0x2251bf0;
		constexpr auto Serialize = 0x22521b0;
		constexpr auto ToProtoBytes = 0x2252410;
		constexpr auto ToProto = 0x2252420;
		constexpr auto SerializeToBytes = 0x22520a0;
		constexpr auto SerializeLengthDelimited = 0x2251ff0;
		constexpr auto ctor = 0x1150f20;
	};

	namespace BaseMountable {
		constexpr auto __menuOption_Menu_Mount = 0x240;
		constexpr auto eyePositionOverride = 0x298;
		constexpr auto eyeCenterOverride = 0x2a0;
		constexpr auto pitchClamp = 0x2a8;
		constexpr auto yawClamp = 0x2b0;
		constexpr auto canWieldItems = 0x2b8;
		constexpr auto relativeViewAngles = 0x2b9;
		constexpr auto mountAnchor = 0x2c0;
		constexpr auto mountPose = 0x2c8;
		constexpr auto maxMountDistance = 0x2cc;
		constexpr auto dismountPositions = 0x2d0;
		constexpr auto checkPlayerLosOnMount = 0x2d8;
		constexpr auto disableMeshCullingForPlayers = 0x2d9;
		constexpr auto allowHeadLook = 0x2da;
		constexpr auto modifiesPlayerCollider = 0x2db;
		constexpr auto customPlayerCollider = 0x2dc;
		constexpr auto mountSoundDef = 0x2f0;
		constexpr auto swapSoundDef = 0x2f8;
		constexpr auto dismountSoundDef = 0x300;
		constexpr auto mountTimeStatType = 0x308;
		constexpr auto allowedGestures = 0x30c;
		constexpr auto canDrinkWhileMounted = 0x310;
		constexpr auto allowSleeperMounting = 0x311;
		constexpr auto animateClothInLocalSpace = 0x312;
		constexpr auto MountedCameraMode = 0x314;
		constexpr auto isMobile = 0x318;
		constexpr auto SideLeanAmount = 0x31c;

		constexpr auto GetMenuOptions = 0xaf5490;
		constexpr auto get_HasMenuOptions = 0xaf7560;
		constexpr auto OnRpcMessage = 0xaf6280;
		constexpr auto CanHoldItems = 0xaf4890;
		constexpr auto GetMountedCameraMode = 0xaf57f0;
		constexpr auto DirectlyMountable = 0x5dbd60;
		constexpr auto GetEyeOverride = 0xaf5400;
		constexpr auto GetMountedBodyAngles = 0xaf57a0;
		constexpr auto ModifiesThirdPersonCamera = 0x591c80;
		constexpr auto GetPitchClamp = 0x91e9a0;
		constexpr auto GetYawClamp = 0x91e9c0;
		constexpr auto IsMounted = 0xaf5a50;
		constexpr auto EyePositionForPlayer = 0xaf5090;
		constexpr auto EyeCenterForPlayer = 0xaf4f90;
		constexpr auto WaterFactorForPlayer = 0xaf7390;
		constexpr auto MaxVelocity = 0xaf5b90;
		constexpr auto PlayerIsMounted = 0xaf6880;
		constexpr auto OnClientInput = 0x458ce0;
		constexpr auto ForceUpdatePlayerModel = 0x591c80;
		constexpr auto UpdatePlayerModel = 0xaf6dc0;
		constexpr auto ProcessPlayerModel = 0x458ce0;
		constexpr auto SuppressHandsAnimationLayer = 0x591c80;
		constexpr auto GetAnimationOverride = 0x5b1c10;
		constexpr auto GetSpineLookAtWeight = 0x5c8b30;
		constexpr auto GetMountedAnimationSpeed = 0x82c680;
		constexpr auto get_DisableLegsMeshAtExtremeViewAnglesInFirstPersonWithEyes = 0x5dbd60;
		constexpr auto get_FirstPersonWithArmsEyesLerp = 0x6d6160;
		constexpr auto ModifyThirdPersonEyeOffset = 0xaf5d50;
		constexpr auto LockThirdPersonOffset = 0xaf5b20;
		constexpr auto LocalPlayerIsMounted = 0xaf5a60;
		constexpr auto VehicleParent = 0xaf7300;
		constexpr auto get_IsSummerDlcVehicle = 0x591c80;
		constexpr auto IsInstrument = 0x591c80;
		constexpr auto UpdatePlayerRotation = 0xaf7250;
		constexpr auto SetNetworkPosition = 0xaf6d90;
		constexpr auto UpdatePlayerPosition = 0xaf70e0;
		constexpr auto GetMountedRotation = 0xaf58c0;
		constexpr auto GetMountedPosition = 0xaf5800;
		constexpr auto PlayerMounted = 0xaf6960;
		constexpr auto PlayerDismounted = 0xaf63a0;
		constexpr auto ClientOnPlayerDismounted = 0xaf48a0;
		constexpr auto ClientOnPlayerMounted = 0xaf4940;
		constexpr auto OverrideViewAngles = 0xaf6370;
		constexpr auto DoPlayerMovement = 0xaf4b20;
		constexpr auto HoldToDismount = 0xaf59d0;
		constexpr auto ClientRequestDismount = 0xaf4a10;
		constexpr auto Menu_Mount = 0xaf5ce0;
		constexpr auto Menu_Mount_ShowIf = 0xaf5c40;
		constexpr auto MountMenuVisible = 0xaf5d70;
		constexpr auto NearMountPoint = 0xaf5e00;
		constexpr auto ConvertVector = 0xaf4a50;
		constexpr auto get_BlocksDoors = 0x5dbd60;
		constexpr auto ctor = 0xaf74b0;
		constexpr auto cctor = 0xaf7440;
		constexpr auto DoPlayerMovementb__78_0 = 0xaf4a10;
	};

	namespace TOD_Sky {
		constexpr auto ColorSpace = 0x18;
		constexpr auto ColorRange = 0x1c;
		constexpr auto ColorOutput = 0x20;
		constexpr auto SkyQuality = 0x24;
		constexpr auto CloudQuality = 0x28;
		constexpr auto MeshQuality = 0x2c;
		constexpr auto StarQuality = 0x30;
		constexpr auto Cycle = 0x38;
		constexpr auto World = 0x40;
		constexpr auto Atmosphere = 0x48;
		constexpr auto Day = 0x50;
		constexpr auto Night = 0x58;
		constexpr auto Sun = 0x60;
		constexpr auto Moon = 0x68;
		constexpr auto Stars = 0x70;
		constexpr auto Clouds = 0x78;
		constexpr auto Light = 0x80;
		constexpr auto Fog = 0x88;
		constexpr auto Ambient = 0x90;
		constexpr auto Reflection = 0x98;
		constexpr auto Initializedk__BackingField = 0xa0;
		constexpr auto Componentsk__BackingField = 0xa8;
		constexpr auto Resourcesk__BackingField = 0xb0;
		constexpr auto IsDayk__BackingField = 0xb8;
		constexpr auto IsNightk__BackingField = 0xb9;
		constexpr auto LerpValuek__BackingField = 0xbc;
		constexpr auto SunZenithk__BackingField = 0xc0;
		constexpr auto SunAltitudek__BackingField = 0xc4;
		constexpr auto SunAzimuthk__BackingField = 0xc8;
		constexpr auto MoonZenithk__BackingField = 0xcc;
		constexpr auto MoonAltitudek__BackingField = 0xd0;
		constexpr auto MoonAzimuthk__BackingField = 0xd4;
		constexpr auto SunsetTimek__BackingField = 0xd8;
		constexpr auto SunriseTimek__BackingField = 0xdc;
		constexpr auto LocalSiderealTimek__BackingField = 0xe0;
		constexpr auto SunVisibilityk__BackingField = 0xe4;
		constexpr auto MoonVisibilityk__BackingField = 0xe8;
		constexpr auto SunDirectionk__BackingField = 0xec;
		constexpr auto MoonDirectionk__BackingField = 0xf8;
		constexpr auto LightDirectionk__BackingField = 0x104;
		constexpr auto LocalSunDirectionk__BackingField = 0x110;
		constexpr auto LocalMoonDirectionk__BackingField = 0x11c;
		constexpr auto LocalLightDirectionk__BackingField = 0x128;
		constexpr auto SunLightColork__BackingField = 0x134;
		constexpr auto MoonLightColork__BackingField = 0x144;
		constexpr auto SunRayColork__BackingField = 0x154;
		constexpr auto MoonRayColork__BackingField = 0x164;
		constexpr auto SunSkyColork__BackingField = 0x174;
		constexpr auto MoonSkyColork__BackingField = 0x184;
		constexpr auto SunMeshColork__BackingField = 0x194;
		constexpr auto MoonMeshColork__BackingField = 0x1a4;
		constexpr auto SunCloudColork__BackingField = 0x1b4;
		constexpr auto MoonCloudColork__BackingField = 0x1c4;
		constexpr auto FogColork__BackingField = 0x1d4;
		constexpr auto GroundColork__BackingField = 0x1e4;
		constexpr auto AmbientColork__BackingField = 0x1f4;
		constexpr auto MoonHaloColork__BackingField = 0x204;
		constexpr auto ReflectionCur = 0x218;
		constexpr auto ReflectionSrc = 0x220;
		constexpr auto ReflectionDst = 0x228;
		constexpr auto ReflectionUpdateSlowdown = 0x8;
		constexpr auto ReflectionResolution = 0xc;
		constexpr auto ReflectionUpdateInterval = 0x10;
		constexpr auto ReflectionTimeSlicing = 0x14;
		constexpr auto timeSinceLightUpdate = 0x230;
		constexpr auto timeSinceAmbientUpdate = 0x234;
		constexpr auto timeSinceReflectionUpdate = 0x238;
		constexpr auto kBetaMie = 0x23c;
		constexpr auto kSun = 0x248;
		constexpr auto k4PI = 0x258;
		constexpr auto kRadius = 0x268;
		constexpr auto kScale = 0x278;

		constexpr auto get_Instances = 0x1320570;
		constexpr auto get_Instance = 0x13204a0;
		constexpr auto get_Initialized = 0xd5c510;
		constexpr auto set_Initialized = 0xd5c9f0;
		constexpr auto get_Headless = 0x1320480;
		constexpr auto get_Components = 0x825300;
		constexpr auto set_Components = 0x825380;
		constexpr auto get_Resources = 0x8252d0;
		constexpr auto set_Resources = 0x825360;
		constexpr auto get_IsDay = 0x13205d0;
		constexpr auto set_IsDay = 0x13209a0;
		constexpr auto get_IsNight = 0x13205e0;
		constexpr auto set_IsNight = 0x13209b0;
		constexpr auto get_Radius = 0x1320880;
		constexpr auto get_Diameter = 0x1320420;
		constexpr auto get_LerpValue = 0x6bb430;
		constexpr auto set_LerpValue = 0x6bb620;
		constexpr auto get_SunZenith = 0x1320940;
		constexpr auto set_SunZenith = 0x1320ba0;
		constexpr auto get_SunAltitude = 0x13208c0;
		constexpr auto set_SunAltitude = 0x1320b00;
		constexpr auto get_SunAzimuth = 0x13208d0;
		constexpr auto set_SunAzimuth = 0x1320b10;
		constexpr auto get_MoonZenith = 0x1320810;
		constexpr auto set_MoonZenith = 0x1320af0;
		constexpr auto get_MoonAltitude = 0x1320770;
		constexpr auto set_MoonAltitude = 0x1320a40;
		constexpr auto get_MoonAzimuth = 0x1320780;
		constexpr auto set_MoonAzimuth = 0x1320a50;
		constexpr auto get_SunsetTime = 0x1320960;
		constexpr auto set_SunsetTime = 0x1320bc0;
		constexpr auto get_SunriseTime = 0x1320950;
		constexpr auto set_SunriseTime = 0x1320bb0;
		constexpr auto get_LocalSiderealTime = 0x12ad5c0;
		constexpr auto set_LocalSiderealTime = 0x12addc0;
		constexpr auto get_LightZenith = 0x1320690;
		constexpr auto get_LightIntensity = 0x1320660;
		constexpr auto get_SunVisibility = 0x1320930;
		constexpr auto set_SunVisibility = 0x1320b90;
		constexpr auto get_MoonVisibility = 0x12ad410;
		constexpr auto set_MoonVisibility = 0x1320ae0;
		constexpr auto get_SunDirection = 0x13208e0;
		constexpr auto set_SunDirection = 0x1320b30;
		constexpr auto get_MoonDirection = 0x13207a0;
		constexpr auto set_MoonDirection = 0x1320a70;
		constexpr auto get_LightDirection = 0x1320640;
		constexpr auto set_LightDirection = 0x13209c0;
		constexpr auto get_LocalSunDirection = 0x1320750;
		constexpr auto set_LocalSunDirection = 0x1320a20;
		constexpr auto get_LocalMoonDirection = 0x1320730;
		constexpr auto set_LocalMoonDirection = 0x1320a00;
		constexpr auto get_LocalLightDirection = 0x1320710;
		constexpr auto set_LocalLightDirection = 0x13209e0;
		constexpr auto get_SunLightColor = 0x1320900;
		constexpr auto set_SunLightColor = 0x1320b50;
		constexpr auto get_MoonLightColor = 0x13207d0;
		constexpr auto set_MoonLightColor = 0x1320aa0;
		constexpr auto get_LightColor = 0x13205f0;
		constexpr auto get_SunRayColor = 0x1320920;
		constexpr auto set_SunRayColor = 0x1320b70;
		constexpr auto get_MoonRayColor = 0x13207f0;
		constexpr auto set_MoonRayColor = 0x1320ac0;
		constexpr auto get_SunSkyColor = 0x1048830;
		constexpr auto set_SunSkyColor = 0x1320b80;
		constexpr auto get_MoonSkyColor = 0x1320800;
		constexpr auto set_MoonSkyColor = 0x1320ad0;
		constexpr auto get_SunMeshColor = 0x1320910;
		constexpr auto set_SunMeshColor = 0x1320b60;
		constexpr auto get_MoonMeshColor = 0x13207e0;
		constexpr auto set_MoonMeshColor = 0x1320ab0;
		constexpr auto get_SunCloudColor = 0xdaffc0;
		constexpr auto set_SunCloudColor = 0x1320b20;
		constexpr auto get_MoonCloudColor = 0x1320790;
		constexpr auto set_MoonCloudColor = 0x1320a60;
		constexpr auto get_FogColor = 0x1320460;
		constexpr auto set_FogColor = 0x1320980;
		constexpr auto get_GroundColor = 0x1320470;
		constexpr auto set_GroundColor = 0x1320990;
		constexpr auto get_AmbientColor = 0x1320410;
		constexpr auto set_AmbientColor = 0x1320970;
		constexpr auto get_MoonHaloColor = 0x13207c0;
		constexpr auto set_MoonHaloColor = 0x1320a90;
		constexpr auto get_Probe = 0x1320860;
		constexpr auto get_ProbeInstance = 0x1320840;
		constexpr auto get_ProbeEx = 0x1320820;
		constexpr auto OrbitalToUnity = 0x1318e10;
		constexpr auto OrbitalToLocal = 0x1318d50;
		constexpr auto SampleAtmosphere = 0x1319eb0;
		constexpr auto RenderToSphericalHarmonics = 0x1319d50;
		constexpr auto RenderToCubemap = 0x1318f20;
		constexpr auto RenderToProbe = 0x1319060;
		constexpr auto ReflectionIsUpdating = 0x1318ee0;
		constexpr auto UpdateProbeBlending = 0x131df10;
		constexpr auto UpdateProbeProperties = 0x131e000;
		constexpr auto SampleFogColor = 0x131a230;
		constexpr auto SampleSkyColor = 0x131a4e0;
		constexpr auto SampleEquatorColor = 0x131a170;
		constexpr auto UpdateFog = 0x131de90;
		constexpr auto UpdateAmbient = 0x131baf0;
		constexpr auto UpdateReflection = 0x131ea30;
		constexpr auto DelayReflectionUpdate = 0x13185d0;
		constexpr auto LoadParameters = 0x13189c0;
		constexpr auto SaveParameters = 0x131a5f0;
		constexpr auto UpdateQualitySettings = 0x131e420;
		constexpr auto UpdateRenderSettings = 0x131eb30;
		constexpr auto UpdateShaderKeywords = 0x131f110;
		constexpr auto UpdateShaderProperties = 0x131f370;
		constexpr auto ShaderScale = 0x131ac50;
		constexpr auto ShaderMiePhase = 0x131a930;
		constexpr auto ShaderRayleighPhase = 0x131ac30;
		constexpr auto ShaderNightSkyColor = 0x131ab40;
		constexpr auto ShaderMoonHaloColor = 0x131aa00;
		constexpr auto TOD_HDR2LDR = 0x131b8a0;
		constexpr auto TOD_GAMMA2LINEAR = 0x131b840;
		constexpr auto TOD_LINEAR2GAMMA = 0x131ba20;
		constexpr auto ShaderScatteringColor = 0x131ad00;
		constexpr auto Initialize = 0x13185e0;
		constexpr auto Cleanup = 0x1318420;
		constexpr auto OnEnable = 0x1318d00;
		constexpr auto OnDisable = 0x1318cf0;
		constexpr auto LateUpdate = 0x13186e0;
		constexpr auto OnValidate = 0x1318d10;
		constexpr auto UpdateScattering = 0x131ef60;
		constexpr auto UpdateCelestials = 0x131bf90;
		constexpr auto ctor = 0x1320300;
		constexpr auto cctor = 0x1320240;
	};

	namespace UnityEngine_Random {

		constexpr auto InitState = 0x1b97b70;
		constexpr auto get_state = 0x1b97e40;
		constexpr auto set_state = 0x1b97ef0;
		constexpr auto Range = 0x1b97bf0;
		constexpr auto RandomRangeInt = 0x1b97bb0;
		constexpr auto get_value = 0x1b97e80;
		constexpr auto get_insideUnitSphere = 0x1b97cc0;
		constexpr auto GetRandomUnitCircle = 0x1b97b30;
		constexpr auto get_insideUnitCircle = 0x1b97c40;
		constexpr auto get_onUnitSphere = 0x1b97d40;
		constexpr auto get_rotation = 0x1b97dc0;
		constexpr auto RandomRange = 0x1b97bb0;
		constexpr auto ColorHSV = 0x1b97970;
		constexpr auto get_state_Injected = 0x1b97e00;
		constexpr auto set_state_Injected = 0x1b97eb0;
		constexpr auto get_insideUnitSphere_Injected = 0x1b97c80;
		constexpr auto get_onUnitSphere_Injected = 0x1b97d00;
		constexpr auto get_rotation_Injected = 0x1b97d80;
	};

	namespace UnityEngine_PhysicsScene {
		constexpr auto m_Handle = 0x10;

		constexpr auto ToString = 0x32b5a0;
		constexpr auto GetHashCode = 0x14e0e0;
		constexpr auto Equals = 0x32b060;
		constexpr auto Raycast = 0x32b330;
		constexpr auto Internal_RaycastTest = 0x24ee9a0;
		constexpr auto Internal_Raycast = 0x24eea80;
		constexpr auto Internal_RaycastNonAlloc = 0x24ee8c0;
		constexpr auto Query_CapsuleCast = 0x24ef1b0;
		constexpr auto Internal_CapsuleCast = 0x24ee6a0;
		constexpr auto CapsuleCast = 0x32afb0;
		constexpr auto Internal_CapsuleCastNonAlloc = 0x24ee600;
		constexpr auto OverlapCapsuleNonAlloc_Internal = 0x24eeed0;
		constexpr auto OverlapCapsule = 0x32b190;
		constexpr auto Query_SphereCast = 0x24ef2c0;
		constexpr auto Internal_SphereCast = 0x24eebf0;
		constexpr auto SphereCast = 0x32b420;
		constexpr auto Internal_SphereCastNonAlloc = 0x24eeb60;
		constexpr auto OverlapSphereNonAlloc_Internal = 0x24eefc0;
		constexpr auto OverlapSphere = 0x32b230;
		constexpr auto Query_BoxCast = 0x24ef0a0;
		constexpr auto Internal_BoxCast = 0x24ee3d0;
		constexpr auto BoxCast = 0x32adc0;
		constexpr auto OverlapBoxNonAlloc_Internal = 0x24eede0;
		constexpr auto OverlapBox = 0x32b0e0;
		constexpr auto Internal_RaycastTest_Injected = 0x24ee930;
		constexpr auto Internal_Raycast_Injected = 0x24eea10;
		constexpr auto Internal_RaycastNonAlloc_Injected = 0x24ee850;
		constexpr auto Query_CapsuleCast_Injected = 0x24ef140;
		constexpr auto Internal_CapsuleCastNonAlloc_Injected = 0x24ee590;
		constexpr auto OverlapCapsuleNonAlloc_Internal_Injected = 0x24eee60;
		constexpr auto Query_SphereCast_Injected = 0x24ef250;
		constexpr auto Internal_SphereCastNonAlloc_Injected = 0x24eeaf0;
		constexpr auto OverlapSphereNonAlloc_Internal_Injected = 0x24eef50;
		constexpr auto Query_BoxCast_Injected = 0x24ef030;
		constexpr auto OverlapBoxNonAlloc_Internal_Injected = 0x24eed70;
	};

	namespace UnityEngine_GameObjectEx {

		constexpr auto ToBaseEntity = 0xb2b910;
		constexpr auto IsOnLayer = 0xb2b7c0;
		constexpr auto GetEntityFromRegistry = 0xb2b690;
		constexpr auto GetEntityFromComponent = 0xb2b590;
		constexpr auto SetHierarchyGroup = 0xb2b850;
	};

	namespace BaseHelicopter {
		constexpr auto weakspots = 0x240;
		constexpr auto rotorPivot = 0x248;
		constexpr auto mainRotor = 0x250;
		constexpr auto mainRotor_blades = 0x258;
		constexpr auto mainRotor_blur = 0x260;
		constexpr auto tailRotor = 0x268;
		constexpr auto tailRotor_blades = 0x270;
		constexpr auto tailRotor_blur = 0x278;
		constexpr auto rocket_tube_left = 0x280;
		constexpr auto rocket_tube_right = 0x288;
		constexpr auto left_gun_yaw = 0x290;
		constexpr auto left_gun_pitch = 0x298;
		constexpr auto left_gun_muzzle = 0x2a0;
		constexpr auto right_gun_yaw = 0x2a8;
		constexpr auto right_gun_pitch = 0x2b0;
		constexpr auto right_gun_muzzle = 0x2b8;
		constexpr auto spotlight_rotation = 0x2c0;
		constexpr auto rocket_fire_effect = 0x2c8;
		constexpr auto gun_fire_effect = 0x2d0;
		constexpr auto bulletEffect = 0x2d8;
		constexpr auto explosionEffect = 0x2e0;
		constexpr auto fireBall = 0x2e8;
		constexpr auto crateToDrop = 0x2f0;
		constexpr auto maxCratesToSpawn = 0x2f8;
		constexpr auto bulletSpeed = 0x2fc;
		constexpr auto bulletDamage = 0x300;
		constexpr auto servergibs = 0x308;
		constexpr auto debrisFieldMarker = 0x310;
		constexpr auto rotorWashSoundDef = 0x318;
		constexpr auto _rotorWashSound = 0x320;
		constexpr auto flightEngineSoundDef = 0x328;
		constexpr auto flightThwopsSoundDef = 0x330;
		constexpr auto flightEngineSound = 0x338;
		constexpr auto flightThwopsSound = 0x340;
		constexpr auto flightEngineGainMod = 0x348;
		constexpr auto flightThwopsGainMod = 0x350;
		constexpr auto rotorGainModSmoothing = 0x358;
		constexpr auto engineGainMin = 0x35c;
		constexpr auto engineGainMax = 0x360;
		constexpr auto thwopGainMin = 0x364;
		constexpr auto thwopGainMax = 0x368;
		constexpr auto spotlightJitterAmount = 0x36c;
		constexpr auto spotlightJitterSpeed = 0x370;
		constexpr auto nightLights = 0x378;
		constexpr auto spotlightTarget = 0x380;
		constexpr auto engineSpeed = 0x38c;
		constexpr auto targetEngineSpeed = 0x390;
		constexpr auto blur_rotationScale = 0x394;
		constexpr auto _rotorWashParticles = 0x398;
		constexpr auto myAI = 0x3a0;
		constexpr auto mapMarkerEntityPrefab = 0x3a8;
		constexpr auto client_rotorPivotIdeal = 0x3b0;
		constexpr auto nightLightsOn = 0x3c0;

		constexpr auto OnRpcMessage = 0xaeb1f0;
		constexpr auto InitalizeWeakspots = 0xaeac50;
		constexpr auto MaxVelocity = 0x6e5300;
		constexpr auto InitShared = 0xaeabc0;
		constexpr auto Load = 0xaeaf30;
		constexpr auto ClientInit = 0xaea5e0;
		constexpr auto InitializeClientsideEffects = 0xaeacd0;
		constexpr auto DoClientDestroy = 0xaea600;
		constexpr auto SetLights = 0xaeb640;
		constexpr auto Update = 0xaec0b0;
		constexpr auto UpdateEffects = 0xaeb760;
		constexpr auto UpdateRotorWashPosition = 0xaebf70;
		constexpr auto ToggleRotorWash = 0xaeb6e0;
		constexpr auto UpdateRotorVisibility = 0xaebee0;
		constexpr auto FireGun = 0xaea6e0;
		constexpr auto ctor = 0xaec810;
	};

	namespace HitInfo {
		constexpr auto Initiator = 0x10;
		constexpr auto WeaponPrefab = 0x18;
		constexpr auto Weapon = 0x20;
		constexpr auto DoHitEffects = 0x28;
		constexpr auto DoDecals = 0x29;
		constexpr auto IsPredicting = 0x2a;
		constexpr auto UseProtection = 0x2b;
		constexpr auto Predicted = 0x30;
		constexpr auto DidHit = 0x38;
		constexpr auto HitEntity = 0x40;
		constexpr auto HitBone = 0x48;
		constexpr auto HitPart = 0x4c;
		constexpr auto HitMaterial = 0x50;
		constexpr auto HitPositionWorld = 0x54;
		constexpr auto HitPositionLocal = 0x60;
		constexpr auto HitNormalWorld = 0x6c;
		constexpr auto HitNormalLocal = 0x78;
		constexpr auto PointStart = 0x84;
		constexpr auto PointEnd = 0x90;
		constexpr auto ProjectileID = 0x9c;
		constexpr auto ProjectileHits = 0xa0;
		constexpr auto ProjectileDistance = 0xa4;
		constexpr auto ProjectileIntegrity = 0xa8;
		constexpr auto ProjectileTravelTime = 0xac;
		constexpr auto ProjectileTrajectoryMismatch = 0xb0;
		constexpr auto ProjectileVelocity = 0xb4;
		constexpr auto ProjectilePrefab = 0xc0;
		constexpr auto material = 0xc8;
		constexpr auto damageProperties = 0xd0;
		constexpr auto damageTypes = 0xd8;
		constexpr auto CanGather = 0xe0;
		constexpr auto DidGather = 0xe1;
		constexpr auto gatherScale = 0xe4;

		constexpr auto IsProjectile = 0x7d4940;
		constexpr auto get_InitiatorPlayer = 0x7d5190;
		constexpr auto get_attackNormal = 0x7d5220;
		constexpr auto get_hasDamage = 0x7d5720;
		constexpr auto ctor = 0x7d4fb0;
		constexpr auto LoadFromAttack = 0x7d4950;
		constexpr auto get_isHeadshot = 0x7d5750;
		constexpr auto get_bonePhrase = 0x7d55c0;
		constexpr auto get_boneName = 0x7d5430;
		constexpr auto get_boneArea = 0x7d5320;
		constexpr auto PositionOnRay = 0x7d4b50;
		constexpr auto HitPositionOnRay = 0x7d4710;
		constexpr auto IsNaNOrInfinity = 0x7d4760;
	};

	namespace System_Number {

		constexpr auto NumberBufferToDecimal = 0x1849bd0;
		constexpr auto NumberBufferToDouble = 0x1849be0;
		constexpr auto FormatDecimal = 0x18490f0;
		constexpr auto FormatDouble = 0x1849210;
		constexpr auto FormatInt32 = 0x1849290;
		constexpr auto FormatUInt32 = 0x18495f0;
		constexpr auto FormatInt64 = 0x1849400;
		constexpr auto FormatUInt64 = 0x1849750;
		constexpr auto FormatSingle = 0x1849570;
		constexpr auto HexNumberToInt32 = 0x18498b0;
		constexpr auto HexNumberToInt64 = 0x1849930;
		constexpr auto HexNumberToUInt32 = 0x18499f0;
		constexpr auto HexNumberToUInt64 = 0x1849a70;
		constexpr auto IsWhite = 0x1849b00;
		constexpr auto NumberToInt32 = 0x1849bf0;
		constexpr auto NumberToInt64 = 0x1849c50;
		constexpr auto NumberToUInt32 = 0x1849cd0;
		constexpr auto NumberToUInt64 = 0x1849d30;
		constexpr auto MatchChars = 0x1849b60;
		constexpr auto ParseDecimal = 0x1849da0;
		constexpr auto ParseDouble = 0x1849f10;
		constexpr auto ParseInt32 = 0x184a1c0;
		constexpr auto ParseInt64 = 0x184a410;
		constexpr auto ParseNumber = 0x184a680;
		constexpr auto ParseSingle = 0x184b170;
		constexpr auto ParseUInt32 = 0x184b490;
		constexpr auto ParseUInt64 = 0x184b6d0;
		constexpr auto StringToNumber = 0x184b930;
		constexpr auto TrailingZeros = 0x184ba70;
		constexpr auto TryParseDecimal = 0x184bad0;
		constexpr auto TryParseDouble = 0x184bc50;
		constexpr auto TryParseInt32 = 0x184bdd0;
		constexpr auto TryParseInt64 = 0x184c010;
		constexpr auto TryParseSingle = 0x184c1e0;
		constexpr auto TryParseUInt32 = 0x184c390;
		constexpr auto TryParseUInt64 = 0x184c5d0;
		constexpr auto TryStringToNumber = 0x184c8f0;
	};

	namespace System_Globalization_NumberFormatInfo {
		constexpr auto numberGroupSizes = 0x10;
		constexpr auto currencyGroupSizes = 0x18;
		constexpr auto percentGroupSizes = 0x20;
		constexpr auto positiveSign = 0x28;
		constexpr auto negativeSign = 0x30;
		constexpr auto numberDecimalSeparator = 0x38;
		constexpr auto numberGroupSeparator = 0x40;
		constexpr auto currencyGroupSeparator = 0x48;
		constexpr auto currencyDecimalSeparator = 0x50;
		constexpr auto currencySymbol = 0x58;
		constexpr auto ansiCurrencySymbol = 0x60;
		constexpr auto nanSymbol = 0x68;
		constexpr auto positiveInfinitySymbol = 0x70;
		constexpr auto negativeInfinitySymbol = 0x78;
		constexpr auto percentDecimalSeparator = 0x80;
		constexpr auto percentGroupSeparator = 0x88;
		constexpr auto percentSymbol = 0x90;
		constexpr auto perMilleSymbol = 0x98;
		constexpr auto nativeDigits = 0xa0;
		constexpr auto m_dataItem = 0xa8;
		constexpr auto numberDecimalDigits = 0xac;
		constexpr auto currencyDecimalDigits = 0xb0;
		constexpr auto currencyPositivePattern = 0xb4;
		constexpr auto currencyNegativePattern = 0xb8;
		constexpr auto numberNegativePattern = 0xbc;
		constexpr auto percentPositivePattern = 0xc0;
		constexpr auto percentNegativePattern = 0xc4;
		constexpr auto percentDecimalDigits = 0xc8;
		constexpr auto digitSubstitution = 0xcc;
		constexpr auto isReadOnly = 0xd0;
		constexpr auto m_useUserOverride = 0xd1;
		constexpr auto m_isInvariant = 0xd2;
		constexpr auto validForParseAsNumber = 0xd3;
		constexpr auto validForParseAsCurrency = 0xd4;

		constexpr auto ctor = 0x14eb3a0;
		constexpr auto OnSerializing = 0x14eaa00;
		constexpr auto OnDeserializing = 0x458ce0;
		constexpr auto OnDeserialized = 0x458ce0;
		constexpr auto get_InvariantInfo = 0x14eb530;
		constexpr auto GetInstance = 0x14ea780;
		constexpr auto Clone = 0x14ea680;
		constexpr auto get_CurrencyDecimalDigits = 0x3eb610;
		constexpr auto get_CurrencyDecimalSeparator = 0x5d4b50;
		constexpr auto get_IsReadOnly = 0xf14c70;
		constexpr auto get_CurrencyGroupSizes = 0x14eb3b0;
		constexpr auto get_NumberGroupSizes = 0x14eb640;
		constexpr auto get_PercentGroupSizes = 0x14eb6c0;
		constexpr auto get_CurrencyGroupSeparator = 0x6bb510;
		constexpr auto get_CurrencySymbol = 0x5d4b40;
		constexpr auto get_CurrentInfo = 0x14eb430;
		constexpr auto get_NaNSymbol = 0x6581c0;
		constexpr auto get_CurrencyNegativePattern = 0x1317630;
		constexpr auto get_NumberNegativePattern = 0x1317620;
		constexpr auto get_PercentPositivePattern = 0x1317610;
		constexpr auto get_PercentNegativePattern = 0xbe1690;
		constexpr auto get_NegativeInfinitySymbol = 0x643690;
		constexpr auto get_NegativeSign = 0x59c020;
		constexpr auto get_NumberDecimalDigits = 0xaf7940;
		constexpr auto get_NumberDecimalSeparator = 0x6bb470;
		constexpr auto get_NumberGroupSeparator = 0x5c0ea0;
		constexpr auto get_CurrencyPositivePattern = 0x1317600;
		constexpr auto get_PositiveInfinitySymbol = 0x66bca0;
		constexpr auto get_PositiveSign = 0x8de0c0;
		constexpr auto get_PercentDecimalDigits = 0xbe16b0;
		constexpr auto get_PercentDecimalSeparator = 0x66bcb0;
		constexpr auto get_PercentGroupSeparator = 0x66bc40;
		constexpr auto get_PercentSymbol = 0x63f1f0;
		constexpr auto get_PerMilleSymbol = 0x66bc50;
		constexpr auto GetFormat = 0x14ea6f0;
		constexpr auto ReadOnly = 0x14eaa90;
		constexpr auto ValidateParseStyleInteger = 0x14eac10;
		constexpr auto ValidateParseStyleFloatingPoint = 0x14eab40;
	};

	namespace UnityEngine_GL {

		constexpr auto Vertex3 = 0x1ac48d0;
		constexpr auto Vertex = 0x1ac4930;
		constexpr auto TexCoord3 = 0x1ac4870;
		constexpr auto TexCoord2 = 0x1ac4820;
		constexpr auto MultiTexCoord3 = 0x1ac4750;
		constexpr auto MultiTexCoord2 = 0x1ac46f0;
		constexpr auto ImmediateColor = 0x1ac4430;
		constexpr auto Color = 0x1ac4100;
		constexpr auto get_sRGBWrite = 0x1ac4990;
		constexpr auto set_sRGBWrite = 0x1ac49c0;
		constexpr auto Flush = 0x1ac4190;
		constexpr auto MultMatrix = 0x1ac46b0;
		constexpr auto PushMatrix = 0x1ac47f0;
		constexpr auto PopMatrix = 0x1ac47c0;
		constexpr auto LoadIdentity = 0x1ac4560;
		constexpr auto LoadOrtho = 0x1ac4590;
		constexpr auto LoadPixelMatrix = 0x1ac45c0;
		constexpr auto LoadProjectionMatrix = 0x1ac4630;
		constexpr auto GetGPUProjectionMatrix = 0x1ac43c0;
		constexpr auto GLLoadPixelMatrixScript = 0x1ac42e0;
		constexpr auto GLIssuePluginEvent = 0x1ac42a0;
		constexpr auto IssuePluginEvent = 0x1ac44b0;
		constexpr auto Begin = 0x1ac4010;
		constexpr auto End = 0x1ac4160;
		constexpr auto GLClear = 0x1ac4230;
		constexpr auto Clear = 0x1ac40a0;
		constexpr auto ClearWithSkybox = 0x1ac4050;
		constexpr auto MultMatrix_Injected = 0x1ac4670;
		constexpr auto LoadProjectionMatrix_Injected = 0x1ac45f0;
		constexpr auto GetGPUProjectionMatrix_Injected = 0x1ac4360;
		constexpr auto GLClear_Injected = 0x1ac41c0;
	};

	namespace UnityEngine_Material {

		constexpr auto CreateWithShader = 0x1b84150;
		constexpr auto CreateWithMaterial = 0x1b84100;
		constexpr auto CreateWithString = 0x1b841a0;
		constexpr auto ctor = 0x1b85700;
		constexpr auto get_shader = 0x1b859c0;
		constexpr auto set_shader = 0x1b85b50;
		constexpr auto get_color = 0x1b85790;
		constexpr auto set_color = 0x1b85a00;
		constexpr auto get_mainTexture = 0x1b858a0;
		constexpr auto GetFirstPropertyNameIdByAttribute = 0x1b84470;
		constexpr auto HasProperty = 0x1b84980;
		constexpr auto get_renderQueue = 0x1b85980;
		constexpr auto set_renderQueue = 0x1b85b10;
		constexpr auto EnableKeyword = 0x1b84230;
		constexpr auto DisableKeyword = 0x1b841e0;
		constexpr auto IsKeywordEnabled = 0x1b849c0;
		constexpr auto get_enableInstancing = 0x1b85860;
		constexpr auto set_enableInstancing = 0x1b85ac0;
		constexpr auto get_passCount = 0x1b85940;
		constexpr auto GetShaderPassEnabled = 0x1b845c0;
		constexpr auto GetPassName = 0x1b84540;
		constexpr auto FindPass = 0x1b84280;
		constexpr auto SetOverrideTag = 0x1b85150;
		constexpr auto GetTagImpl = 0x1b84610;
		constexpr auto GetTag = 0x1b84710;
		constexpr auto SetPass = 0x1b851b0;
		constexpr auto CopyPropertiesFromMaterial = 0x1b840b0;
		constexpr auto GetShaderKeywords = 0x1b84580;
		constexpr auto SetShaderKeywords = 0x1b851f0;
		constexpr auto get_shaderKeywords = 0x1b84580;
		constexpr auto set_shaderKeywords = 0x1b851f0;
		constexpr auto SetFloatImpl = 0x1b84ea0;
		constexpr auto SetColorImpl = 0x1b84b10;
		constexpr auto SetMatrixImpl = 0x1b85010;
		constexpr auto SetTextureImpl = 0x1b85240;
		constexpr auto SetBufferImpl = 0x1b84a10;
		constexpr auto GetFloatImpl = 0x1b844b0;
		constexpr auto GetColorImpl = 0x1b84320;
		constexpr auto GetTextureImpl = 0x1b84780;
		constexpr auto SetFloatArrayImpl = 0x1b84c10;
		constexpr auto SetTextureOffsetImpl = 0x1b852e0;
		constexpr auto SetTextureScaleImpl = 0x1b853e0;
		constexpr auto SetFloatArray = 0x1b84d70;
		constexpr auto SetFloat = 0x1b84ef0;
		constexpr auto SetInt = 0x1b84f50;
		constexpr auto SetColor = 0x1b84bb0;
		constexpr auto SetVector = 0x1b854f0;
		constexpr auto SetMatrix = 0x1b850d0;
		constexpr auto SetTexture = 0x1b85490;
		constexpr auto SetBuffer = 0x1b84a60;
		constexpr auto GetFloat = 0x1b844f0;
		constexpr auto GetColor = 0x1b843f0;
		constexpr auto GetVector = 0x1b84810;
		constexpr auto GetTexture = 0x1b847c0;
		constexpr auto SetTextureOffset = 0x1b85330;
		constexpr auto SetTextureScale = 0x1b85430;
		constexpr auto SetColorImpl_Injected = 0x1b84ac0;
		constexpr auto SetMatrixImpl_Injected = 0x1b84fc0;
		constexpr auto GetColorImpl_Injected = 0x1b842d0;
		constexpr auto SetTextureOffsetImpl_Injected = 0x1b85290;
		constexpr auto SetTextureScaleImpl_Injected = 0x1b85390;
	};

	namespace UnityEngine_Screen {

		constexpr auto get_width = 0x1be6590;
		constexpr auto get_height = 0x1be6530;
		constexpr auto get_dpi = 0x1be64d0;
		constexpr auto get_currentResolution = 0x1be6490;
		constexpr auto get_fullScreen = 0x1be6500;
		constexpr auto SetResolution = 0x1be6390;
		constexpr auto get_resolutions = 0x1be6560;
		constexpr auto get_currentResolution_Injected = 0x1be6450;
	};

	namespace TOD_AtmosphereParameters {
		constexpr auto RayleighMultiplier = 0x10;
		constexpr auto MieMultiplier = 0x14;
		constexpr auto Brightness = 0x18;
		constexpr auto Contrast = 0x1c;
		constexpr auto Directionality = 0x20;
		constexpr auto Fogginess = 0x24;

		constexpr auto ctor = 0x1312100;
	};

	namespace TOD_MoonParameters {
		constexpr auto MeshSize = 0x10;
		constexpr auto MeshBrightness = 0x14;
		constexpr auto MeshContrast = 0x18;
		constexpr auto HaloSize = 0x1c;
		constexpr auto HaloBrightness = 0x20;
		constexpr auto Position = 0x24;

		constexpr auto ctor = 0x1315e70;
	};

	namespace TOD_CloudParameters {
		constexpr auto Size = 0x10;
		constexpr auto Opacity = 0x14;
		constexpr auto Coverage = 0x18;
		constexpr auto Sharpness = 0x1c;
		constexpr auto Coloring = 0x20;
		constexpr auto Attenuation = 0x24;
		constexpr auto Saturation = 0x28;
		constexpr auto Scattering = 0x2c;
		constexpr auto Brightness = 0x30;

		constexpr auto ctor = 0x1313590;
	};

	namespace TOD_NightParameters {
		constexpr auto MoonColor = 0x10;
		constexpr auto LightColor = 0x18;
		constexpr auto RayColor = 0x20;
		constexpr auto SkyColor = 0x28;
		constexpr auto CloudColor = 0x30;
		constexpr auto FogColor = 0x38;
		constexpr auto AmbientColor = 0x40;
		constexpr auto LightIntensity = 0x48;
		constexpr auto ShadowStrength = 0x4c;
		constexpr auto AmbientMultiplier = 0x50;
		constexpr auto ReflectionMultiplier = 0x54;

		constexpr auto ctor = 0x1315eb0;
	};

}

namespace CO {
	constexpr auto ClientUpdate = O::BasePlayer::ClientUpdate;
	constexpr auto ClientUpdate_Sleeping = O::BasePlayer::ClientUpdate_Sleeping;
	constexpr auto Refract = O::Projectile::Reflect;//private bool Refract(ref uint seed, Vector3 point, Vector3 normal, float resistance) { }
	constexpr auto SendSignalBroadcast = O::BaseEntity::SendSignalBroadcast;//public void SendSignalBroadcast(BaseEntity.Signal signal, string arg = "") { }
	constexpr auto GetJumpHeight = O::BasePlayer::GetJumpHeight;//public float GetJumpHeight() { }
	constexpr auto MathfAbs = O::UnityEngine_Mathf::Abs;//public static float Abs(float f) { }
	constexpr auto MathfMax = O::UnityEngine_Mathf::Max;//public static float Max(float a, float b) { }
	constexpr auto GetHeight = O::BasePlayer::GetHeight;//public float GetHeight(bool ducked) { }
	constexpr auto GetRadius = O::BasePlayer::GetRadius;//public float GetRadius() { }
	constexpr auto CheckCapsule = O::UnityEngine_Physics::CheckCapsule; // public static bool CheckCapsule(Vector3 start, Vector3 end, float radius, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }
	constexpr auto RebuildAll = O::PlayerModel::RebuildAll;//public static void RebuildAll() { }
	constexpr auto GetMaxSpeed = O::BasePlayer::GetMaxSpeed;
	constexpr auto DoFixedUpdate = O::PlayerWalkMovement::DoFixedUpdate;//public virtual void DoFixedUpdate(ModelState modelState) { }
	constexpr auto get_rotation = O::PlayerEyes::get_rotation; // playereyes
	constexpr auto Play = O::ViewModel::Play; // ViewModel// public void Play(string name, int layer = 0) { }
	constexpr auto GetRandomVelocity = O::ItemModProjectile::GetRandomVelocity;
	constexpr auto AddPunch = O::HeldEntity::AddPunch;
	constexpr auto get_jumped = O::ModelState::get_jumped;
	constexpr auto VisUpdateUsingCulling = O::BasePlayer::VisUpdateUsingCulling;
	constexpr auto IsDucked = O::BasePlayer::IsDucked;
	constexpr auto OnLand = O::BasePlayer::OnLand; // BasePlayer->OnLand
	constexpr auto get_position = O::PlayerEyes::get_position; // playereyes->get_position
	constexpr auto AssistPlayer = O::BasePlayer::Menu_AssistPlayer; // public void Menu_AssistPlayer(BasePlayer player) { }
	constexpr auto UpdateAmbient = O::TOD_Sky::UpdateAmbient; // public void UpdateAmbient() { } || TOD_Sky
	constexpr auto Launch = O::Projectile::Launch; // internal void Launch() { }
	constexpr auto get_isHeadshot = O::HitInfo::get_isHeadshot; // public bool get_isHeadshot() { }
	constexpr auto DoHitNotify = O::BaseCombatEntity::DoHitNotify; // public void DoHitNotify(HitInfo info) { }
	constexpr auto StartAttackCooldown = O::AttackEntity::StartAttackCooldown; // protected void StartAttackCooldown(float cooldown) { }
	constexpr auto ProcessAttack = O::BaseMelee::ProcessAttack; // protected virtual void ProcessAttack(HitTest hit) { }
	constexpr auto get_transform = O::UnityEngine_Component::get_transform; // public Transform get_transform() { } | UnityEngine::Component
	constexpr auto DoMovement = O::Projectile::DoMovement; // private void DoMovement(float deltaTime) { }
	constexpr auto DoHit = O::Projectile::DoHit; // private bool DoHit(HitTest test, Vector3 point, Vector3 normal) { }
	constexpr auto ClientInput = O::BasePlayer::ClientInput; // internal virtual void ClientInput(InputState state) { }
	constexpr auto set_flying = O::ModelState::set_flying; // public void set_flying(bool value) { }
	constexpr auto CanAttack = O::BasePlayer::CanAttack; // public bool CanAttack() { }
	constexpr auto SendClientTick = O::BasePlayer::SendClientTick; // internal void SendClientTick() { }
	constexpr auto HandleRunning = O::PlayerWalkMovement::HandleRunDuckCrawl; // private void HandleRunning(ModelState state, bool wantsRun) { }
	constexpr auto HandleJumping = O::PlayerWalkMovement::HandleJumping;
	constexpr auto CreateProjectile = O::BaseProjectile::CreateProjectile; // private Projectile CreateProjectile(string prefabPath, Vector3 pos, Vector3 forward, Vector3 velocity) { }
	constexpr auto CanHoldItems = O::BaseMountable::CanHoldItems; // public virtual bool CanHoldItems() { }
	constexpr auto SendProjectileAttack = O::BasePlayer::SendProjectileAttack; // public void SendProjectileAttack(PlayerProjectileAttack attack) { }
	constexpr auto ServerRPC = O::BaseEntity::ServerRPC;
	constexpr auto KnockDoor = O::Door::Menu_KnockDoor; // public void Menu_KnockDoor(BasePlayer player) { }
	constexpr auto OpenDoor = O::Door::Menu_OpenDoor; // public void Menu_OpenDoor(BasePlayer player) { }
	constexpr auto OpenHatch = O::Door::Menu_ToggleHatch; // public void Menu_ToggleHatch(BasePlayer player) { }

	// script.json
	constexpr auto BaseNetworkable = 56557336; // BaseNetworkable_TypeInfo
	constexpr auto ConvarGraphics = 56560368; // ConVar.Graphics_TypeInfo
	constexpr auto HitTest = 56549840; // HitTest_TypeInfo
	constexpr auto Client = 56552576; // ConVar.Client_TypeInfo

	// dump.cs
	constexpr auto IsUpgradeBlocked = 0x7AB530;
	constexpr auto get_Entity = 0x61E9D0; // localplayer public static BasePlayer get_Entity() { }
	constexpr auto Magnitude2D = 0x1DA4200;//public static float Magnitude2D(Vector3 v) { }
	constexpr auto CanAffordUpgrade = 0x7A9040;
	constexpr auto CanChangeToGrade = 0x7A9210;
	constexpr auto UpgradeToGrade = 0x7AC830;
	constexpr auto MoveTowards = 0x23E84C0;
	constexpr auto IsBeingHacked = 0x591BA0;
	constexpr auto IsFullyHacked = 0x6712B0;
	constexpr auto set_rayleigh = 0x465140;//public static void set_atmosphere_rayleigh(float value) { }
	constexpr auto IsHidden = 0x7D0760; // public class StashContainer : StorageContainer
	constexpr auto GetModifiedAimConeDirection = 0xBA0B30; // public static Vector3 GetModifiedAimConeDirection(float aimCone, Vector3 inputVec, bool anywhereInside = True) { }
	constexpr auto Run = 0x250A2A0; // public static string Run(ConsoleSystem.Option options, string strCommand, object[] args) { }
	constexpr auto ClosestPoint = 0x82FD60; // public Vector3 ClosestPoint(Vector3 position) { }
	//constexpr auto LineOfSight = 0x50ED80; // public static bool LineOfSight(Vector3 p0, Vector3 p1, int layerMask, float padding = 0) { }

	constexpr auto CreateEffect = 0xB80AD0;//public static GameObject CreateEffect(string strPrefab, Effect effect) { }
}
